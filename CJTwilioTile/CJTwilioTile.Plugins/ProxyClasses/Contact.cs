// <auto-generated />

using System;
using System.Linq;
using System.Collections.Generic;
using Microsoft.Xrm.Sdk;
using Microsoft.Xrm.Sdk.Query;
using Microsoft.Crm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Messages;
using Microsoft.Xrm.Sdk.Metadata;
using Microsoft.Xrm.Sdk.Client;
using System.Threading.Tasks;
using System.ComponentModel;
using System.Runtime.Serialization;

namespace CJTwilioTile.Plugins.ProxyClasses
{
    [EntityLogicalNameAttribute("contact")]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("XrmToolkit", "4.0")]
    [DataContract(Name = "Entity", Namespace = "http://schemas.microsoft.com/xrm/2011/Contracts")]
    public partial class Contact : BaseProxyClass
    {
        public new const string LogicalName = "contact";
        public const int ObjectTypeCode = 2;
        public const string PrimaryIdAttribute = "contactid";
        public const string PrimaryNameAttribute = "fullname";
        public const string PrimaryImageAttribute = "entityimage";
        static Contact()
        {
            BaseProxyClass.RegisterProxyType(typeof(Contact), "contact");
            _textOptions = new Dictionary<string, eTextOptions>();
            _numberOptions = new Dictionary<string, eNumberOptions>();
            _errorStrings = new Dictionary<string, string>();
            TextError = "The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.";
            NumberError = "The value for attribute '{0}' must be between {2} and {3}. The value is {1}";
        }
        public Contact() : base(new Entity("contact")) { }
        public Contact(Entity original) : base(original) { }
        public static string GetLogicalName() { return BaseProxyClass.GetLogicalName<Contact>(); }
        /// <summary>
        /// Action to perform when the string value is greater than the allowed length.
        /// <para>This is the default for any string attribute in this Entity</para>
        /// </summary>
        public static eTextOptions TextOptions { get; set; }
        private static Dictionary<string, eTextOptions> _textOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater than the allowed length
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater than the allowed length</param>
        /// <param name="errorString">Optional: Error to throw if the eTextOptions == ThrowError
        /// <para>If nothing is specified then the 'TextError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </param>
        public static void SetTextOptions(string logicalName, eTextOptions options, string errorString = null)
        {
            if (_textOptions.ContainsKey(logicalName)) { _textOptions[logicalName] = options; }
            else { _textOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eTextOptions GetTextOptions(string logicalName)
        {
            if (_textOptions.ContainsKey(logicalName)) { return _textOptions[logicalName]; }
            return TextOptions;
        }
        /// <summary>
        /// Action to perform when the number value is greater or less than the allowed value.
        /// <para>This is the default for any int, decimal, double, or money attribute in this Entity</para>
        /// </summary>
        public static eNumberOptions NumberOptions { get; set; }
        private static Dictionary<string, eNumberOptions> _numberOptions;
        /// <summary>
        /// Use this to set an action and error string when a value is greater or less than the allowed value
        /// </summary>
        /// <param name="logicalName">Name of Attribute</param>
        /// <param name="options">Action to perform when the value is greater or less than the allowed value</param>
        /// <param name="errorString">Optional: Error to throw if the eNumberOptions == ThrowError
        /// <para>If nothing is specified then the 'NumberError' string is used.</para>
        /// <para>You may use the following parameters:</para>
        /// <para>{0} = Attribute Logical Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </param>
        public static void SetNumberOptions(string logicalName, eNumberOptions options, string errorString = null)
        {
            if (_numberOptions.ContainsKey(logicalName)) { _numberOptions[logicalName] = options; }
            else { _numberOptions.Add(logicalName, options); }
            if (!string.IsNullOrEmpty(errorString))
            {
                if (_errorStrings.ContainsKey(logicalName)) { _errorStrings[logicalName] = errorString; }
                else { _errorStrings.Add(logicalName, errorString); }
            }
            else if (_errorStrings.ContainsKey(logicalName)) { _errorStrings.Remove(logicalName); }
        }
        protected override eNumberOptions GetNumberOptions(string logicalName)
        {
            if (_numberOptions.ContainsKey(logicalName)) { return _numberOptions[logicalName]; }
            return NumberOptions;
        }
        private static Dictionary<string, string> _errorStrings;
        protected override string GetErrorString(string attributeName, BaseProxyClass.eErrorType defaultErrorType)
        {
            if (_errorStrings.ContainsKey(attributeName))
            {
                return _errorStrings[attributeName];
            }
            return defaultErrorType == BaseProxyClass.eErrorType.Text ? TextError : NumberError;
        }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' cannot be longer than {3} characters. The length of the value is {2} characters.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Length</para>
        /// <para>{3} = Max Length</para>
        /// </summary>
        public static string TextError { get; set; }
        /// <summary>
        /// <para>Default error string is: The value for attribute '{0}' must be between {2} and {3}. The value is {1}.</para>
        /// <para>You may use the following parameters</para>
        /// <para>{0} = Attribute Name</para>
        /// <para>{1} = Value</para>
        /// <para>{2} = Min Value</para>
        /// <para>{3} = Max Value</para>
        /// </summary>
        public static string NumberError { get; set; }

        ///<summary>
///<para>Logical Name: msdyncrm_marketingformidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_marketingformidname")]
public string Msdyncrm_marketingformidName
{
	get { return this.GetPropertyValue<string>("msdyncrm_marketingformidname"); }
}
///<summary>
///<para>Logical Name: parentcustomeridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcustomeridname")]
public string ParentCustomerIdName
{
	get { return this.GetPropertyValue<string>("parentcustomeridname"); }
}
///<summary>
///<para>Logical Name: accountidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidyominame")]
public string AccountIdYomiName
{
	get { return this.GetPropertyValue<string>("accountidyominame"); }
}
///<summary>
///<para>Logical Name: parentcontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactidyominame")]
public string ParentContactIdYomiName
{
	get { return this.GetPropertyValue<string>("parentcontactidyominame"); }
}
///<summary>
///<para>Logical Name: slainvokedidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedidname")]
public string SLAInvokedIdName
{
	get { return this.GetPropertyValue<string>("slainvokedidname"); }
}
///<summary>
///<para>Logical Name: defaultpricelevelidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("defaultpricelevelidname")]
public string DefaultPriceLevelIdName
{
	get { return this.GetPropertyValue<string>("defaultpricelevelidname"); }
}
///<summary>
///<para>Logical Name: originatingleadidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadidname")]
public string OriginatingLeadIdName
{
	get { return this.GetPropertyValue<string>("originatingleadidname"); }
}
///<summary>
///<para>Logical Name: slaname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("slaname")]
public string SLAName
{
	get { return this.GetPropertyValue<string>("slaname"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyname")]
public string CreatedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: createdbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyyominame")]
public string CreatedByYomiName
{
	get { return this.GetPropertyValue<string>("createdbyyominame"); }
}
///<summary>
///<para>Logical Name: accountidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("accountidname")]
public string AccountIdName
{
	get { return this.GetPropertyValue<string>("accountidname"); }
}
///<summary>
///<para>Logical Name: preferredserviceidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredserviceidname")]
public string PreferredServiceIdName
{
	get { return this.GetPropertyValue<string>("preferredserviceidname"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyidname")]
public string TransactionCurrencyIdName
{
	get { return this.GetPropertyValue<string>("transactioncurrencyidname"); }
}
///<summary>
///<para>Logical Name: entityimage_url</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_url")]
public string EntityImage_URL
{
	get { return this.GetPropertyValue<string>("entityimage_url"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyname")]
public string CreatedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msa_managingpartneridname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msa_managingpartneridname")]
public string Msa_managingpartneridName
{
	get { return this.GetPropertyValue<string>("msa_managingpartneridname"); }
}
///<summary>
///<para>Logical Name: owneridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridname")]
public string OwnerIdName
{
	get { return this.GetPropertyValue<string>("owneridname"); }
}
///<summary>
///<para>Logical Name: originatingleadidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadidyominame")]
public string OriginatingLeadIdYomiName
{
	get { return this.GetPropertyValue<string>("originatingleadidyominame"); }
}
///<summary>
///<para>Logical Name: parentcontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactidname")]
public string ParentContactIdName
{
	get { return this.GetPropertyValue<string>("parentcontactidname"); }
}
///<summary>
///<para>Logical Name: adx_preferredlanguageidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_preferredlanguageidname")]
public string Adx_preferredlanguageidName
{
	get { return this.GetPropertyValue<string>("adx_preferredlanguageidname"); }
}
///<summary>
///<para>Logical Name: msgdpr_gdprparentidyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msgdpr_gdprparentidyominame")]
public string Msgdpr_GDPRParentIdYomiName
{
	get { return this.GetPropertyValue<string>("msgdpr_gdprparentidyominame"); }
}
///<summary>
///<para>Logical Name: msdyncrm_marketingpageidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_marketingpageidname")]
public string Msdyncrm_marketingpageidName
{
	get { return this.GetPropertyValue<string>("msdyncrm_marketingpageidname"); }
}
///<summary>
///<para>Logical Name: msevtmgt_contactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msevtmgt_contactidname")]
public string Msevtmgt_ContactIdName
{
	get { return this.GetPropertyValue<string>("msevtmgt_contactidname"); }
}
///<summary>
///<para>Logical Name: createdbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyname")]
public string CreatedByName
{
	get { return this.GetPropertyValue<string>("createdbyname"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyyominame")]
public string ModifiedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: msa_managingpartneridyominame</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msa_managingpartneridyominame")]
public string Msa_managingpartneridYomiName
{
	get { return this.GetPropertyValue<string>("msa_managingpartneridyominame"); }
}
///<summary>
///<para>Logical Name: modifiedbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyname")]
public string ModifiedByName
{
	get { return this.GetPropertyValue<string>("modifiedbyname"); }
}
///<summary>
///<para>Logical Name: owneridtype</para>
///</summary>
[AttributeLogicalNameAttribute("owneridtype")]
public string OwnerIdType
{
	get { return this.GetPropertyValue<string>("owneridtype"); }
	set { this.SetPropertyValue<string>("owneridtype", value, "OwnerIdType"); }
}
///<summary>
///<para>Logical Name: msdyncrm_segmentmemberidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_segmentmemberidname")]
public string Msdyncrm_SegmentMemberIdName
{
	get { return this.GetPropertyValue<string>("msdyncrm_segmentmemberidname"); }
}
///<summary>
///<para>Logical Name: entityimage_timestamp</para>
///</summary>
[AttributeLogicalNameAttribute("entityimage_timestamp")]
public int? EntityImage_Timestamp
{
	get { return this.GetPropertyValue<int?>("entityimage_timestamp"); }
}
///<summary>
///<para>Logical Name: msdyncrm_customerjourneyidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_customerjourneyidname")]
public string Msdyncrm_customerjourneyidName
{
	get { return this.GetPropertyValue<string>("msdyncrm_customerjourneyidname"); }
}
///<summary>
///<para>Logical Name: createdonbehalfbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfbyyominame")]
public string CreatedOnBehalfByYomiName
{
	get { return this.GetPropertyValue<string>("createdonbehalfbyyominame"); }
}
///<summary>
///<para>Logical Name: preferredsystemuseridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredsystemuseridyominame")]
public string PreferredSystemUserIdYomiName
{
	get { return this.GetPropertyValue<string>("preferredsystemuseridyominame"); }
}
///<summary>
///<para>Logical Name: msdyncrm_emailidname</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_emailidname")]
public string Msdyncrm_emailidName
{
	get { return this.GetPropertyValue<string>("msdyncrm_emailidname"); }
}
///<summary>
///<para>Logical Name: isprivate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isprivate")]
public bool? IsPrivate
{
	get { return this.GetPropertyValue<bool?>("isprivate"); }
}
///<summary>
///<para>Logical Name: owneridyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("owneridyominame")]
public string OwnerIdYomiName
{
	get { return this.GetPropertyValue<string>("owneridyominame"); }
}
///<summary>
///<para>Logical Name: createdbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalpartyyominame")]
public string CreatedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("createdbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: mastercontactidyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("mastercontactidyominame")]
public string MasterContactIdYomiName
{
	get { return this.GetPropertyValue<string>("mastercontactidyominame"); }
}
///<summary>
///<para>Logical Name: mastercontactidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("mastercontactidname")]
public string MasterContactIdName
{
	get { return this.GetPropertyValue<string>("mastercontactidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyyominame")]
public string ModifiedByExternalPartyYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyyominame"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfbyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfbyname")]
public string ModifiedOnBehalfByName
{
	get { return this.GetPropertyValue<string>("modifiedonbehalfbyname"); }
}
///<summary>
///<para>Logical Name: msevtmgt_originatingeventidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msevtmgt_originatingeventidname")]
public string Msevtmgt_originatingeventidName
{
	get { return this.GetPropertyValue<string>("msevtmgt_originatingeventidname"); }
}
///<summary>
///<para>Logical Name: parentcustomeridyominame</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("parentcustomeridyominame")]
public string ParentCustomerIdYomiName
{
	get { return this.GetPropertyValue<string>("parentcustomeridyominame"); }
}
///<summary>
///<para>Logical Name: preferredsystemuseridname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredsystemuseridname")]
public string PreferredSystemUserIdName
{
	get { return this.GetPropertyValue<string>("preferredsystemuseridname"); }
}
///<summary>
///<para>Logical Name: msgdpr_gdprparentidname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msgdpr_gdprparentidname")]
public string Msgdpr_GDPRParentIdName
{
	get { return this.GetPropertyValue<string>("msgdpr_gdprparentidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalpartyname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalpartyname")]
public string ModifiedByExternalPartyName
{
	get { return this.GetPropertyValue<string>("modifiedbyexternalpartyname"); }
}
///<summary>
///<para>Logical Name: preferredequipmentidname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("preferredequipmentidname")]
public string PreferredEquipmentIdName
{
	get { return this.GetPropertyValue<string>("preferredequipmentidname"); }
}
///<summary>
///<para>Logical Name: modifiedbyyominame</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyyominame")]
public string ModifiedByYomiName
{
	get { return this.GetPropertyValue<string>("modifiedbyyominame"); }
}
///<summary>
///<para>Logical Name: stageid</para>
///</summary>
[AttributeLogicalNameAttribute("stageid")]
public Guid _Deprecated_ProcessStage
{
	get { return this.GetPropertyValue<Guid>("stageid"); }
	set { this.SetPropertyValue<Guid>("stageid", value, "_Deprecated_ProcessStage"); }
}
///<summary>
///<para>Logical Name: traversedpath</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("traversedpath")]
public string _Deprecated_TraversedPath
{
	get { return this.GetPropertyValue<string>("traversedpath"); }
	set { this.SetPropertyValue("traversedpath", value, 1250, "_Deprecated_TraversedPath"); }
}
///<summary>
///<para>Logical Name: msevtmgt_aadobjectid</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msevtmgt_aadobjectid")]
public string AADObjectID
{
	get { return this.GetPropertyValue<string>("msevtmgt_aadobjectid"); }
	set { this.SetPropertyValue("msevtmgt_aadobjectid", value, 100, "AADObjectID"); }
}
/// <summary>
///Logical Name: oer_title
/// </summary>
[AttributeLogicalNameAttribute("oer_title")]
public eTitle? AcademicTitle
{
	get
	{
		if (AcademicTitle_OptionSetValue != null) { return (eTitle)AcademicTitle_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AcademicTitle_OptionSetValue = new OptionSetValue((int)value); }
		else this.AcademicTitle_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: oer_title</para>
///</summary>
[AttributeLogicalNameAttribute("oer_title")]
public OptionSetValue AcademicTitle_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("oer_title"); }
	set { this.SetPropertyValue<OptionSetValue>("oer_title", value, "AcademicTitle_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string AcademicTitle_Text(IOrganizationService Service)
{
	return this.AcademicTitle_OptionSetValue.GetOptionSetText(Service, this, "oer_title");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string AcademicTitle_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.AcademicTitle_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: adx_identity_accessfailedcount</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_accessfailedcount")]
public int? AccessFailedCount
{
	get { return this.GetPropertyValue<int?>("adx_identity_accessfailedcount"); }
	set { this.SetPropertyValue("adx_identity_accessfailedcount", (int?)value, (int)-2147483648, (int)2147483647, "AccessFailedCount"); }
}
///<summary>
///<para>Logical Name: accountid</para>
///</summary>
[AttributeLogicalNameAttribute("accountid")]
public EntityReference Account
{
	get { return this.GetPropertyValue<EntityReference>("accountid"); }
}
///<summary>
///<para>Logical Name: parentcustomerid</para>
///</summary>
[AttributeLogicalNameAttribute("parentcustomerid")]
public EntityReference AccountName
{
	get { return this.GetPropertyValue<EntityReference>("parentcustomerid"); }
	set { this.SetPropertyValue<EntityReference>("parentcustomerid", value, "AccountName"); }
}
///<summary>
///<para>Logical Name: address1_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_composite")]
public string Address1
{
	get { return this.GetPropertyValue<string>("address1_composite"); }
}
///<summary>
///<para>Logical Name: address1_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_city")]
public string Address1_City
{
	get { return this.GetPropertyValue<string>("address1_city"); }
	set { this.SetPropertyValue("address1_city", value, 80, "Address1_City"); }
}
///<summary>
///<para>Logical Name: address1_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_country")]
public string Address1_Country_Region
{
	get { return this.GetPropertyValue<string>("address1_country"); }
	set { this.SetPropertyValue("address1_country", value, 80, "Address1_Country_Region"); }
}
///<summary>
///<para>Logical Name: address1_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_county")]
public string Address1_County
{
	get { return this.GetPropertyValue<string>("address1_county"); }
	set { this.SetPropertyValue("address1_county", value, 50, "Address1_County"); }
}
///<summary>
///<para>Logical Name: address1_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_fax")]
public string Address1_Fax
{
	get { return this.GetPropertyValue<string>("address1_fax"); }
	set { this.SetPropertyValue("address1_fax", value, 50, "Address1_Fax"); }
}
///<summary>
///<para>Logical Name: address1_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addressid")]
public Guid Address1_ID
{
	get { return this.GetPropertyValue<Guid>("address1_addressid"); }
	set { this.SetPropertyValue<Guid>("address1_addressid", value, "Address1_ID"); }
}
///<summary>
///<para>Logical Name: address1_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_latitude")]
public double? Address1_Latitude
{
	get { return this.GetPropertyValue<double?>("address1_latitude"); }
	set { this.SetPropertyValue("address1_latitude", (double?)value, (double)-90, (double)90, "Address1_Latitude"); }
}
///<summary>
///<para>Logical Name: address1_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address1_longitude")]
public double? Address1_Longitude
{
	get { return this.GetPropertyValue<double?>("address1_longitude"); }
	set { this.SetPropertyValue("address1_longitude", (double?)value, (double)-180, (double)180, "Address1_Longitude"); }
}
///<summary>
///<para>Logical Name: address1_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_name")]
public string Address1_Name
{
	get { return this.GetPropertyValue<string>("address1_name"); }
	set { this.SetPropertyValue("address1_name", value, 200, "Address1_Name"); }
}
///<summary>
///<para>Logical Name: address1_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone1")]
public string Address1_Phone
{
	get { return this.GetPropertyValue<string>("address1_telephone1"); }
	set { this.SetPropertyValue("address1_telephone1", value, 50, "Address1_Phone"); }
}
///<summary>
///<para>Logical Name: address1_primarycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_primarycontactname")]
public string Address1_PrimaryContactName
{
	get { return this.GetPropertyValue<string>("address1_primarycontactname"); }
	set { this.SetPropertyValue("address1_primarycontactname", value, 100, "Address1_PrimaryContactName"); }
}
/// <summary>
///Logical Name: address1_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public eAddress1_ShippingMethod? Address1_ShippingMethod
{
	get
	{
		if (Address1_ShippingMethod_OptionSetValue != null) { return (eAddress1_ShippingMethod)Address1_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address1_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address1_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_shippingmethodcode")]
public OptionSetValue Address1_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_shippingmethodcode", value, "Address1_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address1_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address1_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address1_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address1_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address1_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_stateorprovince")]
public string Address1_State_Province
{
	get { return this.GetPropertyValue<string>("address1_stateorprovince"); }
	set { this.SetPropertyValue("address1_stateorprovince", value, 50, "Address1_State_Province"); }
}
///<summary>
///<para>Logical Name: address1_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line1")]
public string Address1_Street1
{
	get { return this.GetPropertyValue<string>("address1_line1"); }
	set { this.SetPropertyValue("address1_line1", value, 250, "Address1_Street1"); }
}
///<summary>
///<para>Logical Name: address1_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line2")]
public string Address1_Street2
{
	get { return this.GetPropertyValue<string>("address1_line2"); }
	set { this.SetPropertyValue("address1_line2", value, 250, "Address1_Street2"); }
}
///<summary>
///<para>Logical Name: address1_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_line3")]
public string Address1_Street3
{
	get { return this.GetPropertyValue<string>("address1_line3"); }
	set { this.SetPropertyValue("address1_line3", value, 250, "Address1_Street3"); }
}
///<summary>
///<para>Logical Name: address1_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone2")]
public string Address1_Telephone2
{
	get { return this.GetPropertyValue<string>("address1_telephone2"); }
	set { this.SetPropertyValue("address1_telephone2", value, 50, "Address1_Telephone2"); }
}
///<summary>
///<para>Logical Name: address1_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_telephone3")]
public string Address1_Telephone3
{
	get { return this.GetPropertyValue<string>("address1_telephone3"); }
	set { this.SetPropertyValue("address1_telephone3", value, 50, "Address1_Telephone3"); }
}
///<summary>
///<para>Logical Name: address1_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_upszone")]
public string Address1_UPSZone
{
	get { return this.GetPropertyValue<string>("address1_upszone"); }
	set { this.SetPropertyValue("address1_upszone", value, 4, "Address1_UPSZone"); }
}
///<summary>
///<para>Logical Name: address1_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address1_utcoffset")]
public int? Address1_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address1_utcoffset"); }
	set { this.SetPropertyValue("address1_utcoffset", (int?)value, (int)-1500, (int)1500, "Address1_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address1_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postalcode")]
public string Address1_ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address1_postalcode"); }
	set { this.SetPropertyValue("address1_postalcode", value, 20, "Address1_ZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: address2_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_composite")]
public string Address2
{
	get { return this.GetPropertyValue<string>("address2_composite"); }
}
/// <summary>
///Logical Name: address2_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public eAddress2_AddressType? Address2_AddressType
{
	get
	{
		if (Address2_AddressType_OptionSetValue != null) { return (eAddress2_AddressType)Address2_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addresstypecode")]
public OptionSetValue Address2_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_addresstypecode", value, "Address2_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_AddressType_Text(IOrganizationService Service)
{
	return this.Address2_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address2_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_city")]
public string Address2_City
{
	get { return this.GetPropertyValue<string>("address2_city"); }
	set { this.SetPropertyValue("address2_city", value, 80, "Address2_City"); }
}
///<summary>
///<para>Logical Name: address2_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_country")]
public string Address2_Country_Region
{
	get { return this.GetPropertyValue<string>("address2_country"); }
	set { this.SetPropertyValue("address2_country", value, 80, "Address2_Country_Region"); }
}
///<summary>
///<para>Logical Name: address2_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_county")]
public string Address2_County
{
	get { return this.GetPropertyValue<string>("address2_county"); }
	set { this.SetPropertyValue("address2_county", value, 50, "Address2_County"); }
}
///<summary>
///<para>Logical Name: address2_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_fax")]
public string Address2_Fax
{
	get { return this.GetPropertyValue<string>("address2_fax"); }
	set { this.SetPropertyValue("address2_fax", value, 50, "Address2_Fax"); }
}
/// <summary>
///Logical Name: address2_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("address2_freighttermscode")]
public eAddress2_FreightTerms? Address2_FreightTerms
{
	get
	{
		if (Address2_FreightTerms_OptionSetValue != null) { return (eAddress2_FreightTerms)Address2_FreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_FreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_FreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_freighttermscode")]
public OptionSetValue Address2_FreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_freighttermscode", value, "Address2_FreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_FreightTerms_Text(IOrganizationService Service)
{
	return this.Address2_FreightTerms_OptionSetValue.GetOptionSetText(Service, this, "address2_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_FreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_FreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address2_addressid")]
public Guid Address2_ID
{
	get { return this.GetPropertyValue<Guid>("address2_addressid"); }
	set { this.SetPropertyValue<Guid>("address2_addressid", value, "Address2_ID"); }
}
///<summary>
///<para>Logical Name: address2_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_latitude")]
public double? Address2_Latitude
{
	get { return this.GetPropertyValue<double?>("address2_latitude"); }
	set { this.SetPropertyValue("address2_latitude", (double?)value, (double)-90, (double)90, "Address2_Latitude"); }
}
///<summary>
///<para>Logical Name: address2_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address2_longitude")]
public double? Address2_Longitude
{
	get { return this.GetPropertyValue<double?>("address2_longitude"); }
	set { this.SetPropertyValue("address2_longitude", (double?)value, (double)-180, (double)180, "Address2_Longitude"); }
}
///<summary>
///<para>Logical Name: address2_name</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_name")]
public string Address2_Name
{
	get { return this.GetPropertyValue<string>("address2_name"); }
	set { this.SetPropertyValue("address2_name", value, 100, "Address2_Name"); }
}
///<summary>
///<para>Logical Name: address2_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postofficebox")]
public string Address2_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address2_postofficebox"); }
	set { this.SetPropertyValue("address2_postofficebox", value, 20, "Address2_PostOfficeBox"); }
}
///<summary>
///<para>Logical Name: address2_primarycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_primarycontactname")]
public string Address2_PrimaryContactName
{
	get { return this.GetPropertyValue<string>("address2_primarycontactname"); }
	set { this.SetPropertyValue("address2_primarycontactname", value, 100, "Address2_PrimaryContactName"); }
}
/// <summary>
///Logical Name: address2_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public eAddress2_ShippingMethod? Address2_ShippingMethod
{
	get
	{
		if (Address2_ShippingMethod_OptionSetValue != null) { return (eAddress2_ShippingMethod)Address2_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address2_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address2_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address2_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address2_shippingmethodcode")]
public OptionSetValue Address2_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address2_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address2_shippingmethodcode", value, "Address2_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address2_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address2_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address2_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address2_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address2_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_stateorprovince")]
public string Address2_State_Province
{
	get { return this.GetPropertyValue<string>("address2_stateorprovince"); }
	set { this.SetPropertyValue("address2_stateorprovince", value, 50, "Address2_State_Province"); }
}
///<summary>
///<para>Logical Name: address2_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line1")]
public string Address2_Street1
{
	get { return this.GetPropertyValue<string>("address2_line1"); }
	set { this.SetPropertyValue("address2_line1", value, 250, "Address2_Street1"); }
}
///<summary>
///<para>Logical Name: address2_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line2")]
public string Address2_Street2
{
	get { return this.GetPropertyValue<string>("address2_line2"); }
	set { this.SetPropertyValue("address2_line2", value, 250, "Address2_Street2"); }
}
///<summary>
///<para>Logical Name: address2_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_line3")]
public string Address2_Street3
{
	get { return this.GetPropertyValue<string>("address2_line3"); }
	set { this.SetPropertyValue("address2_line3", value, 250, "Address2_Street3"); }
}
///<summary>
///<para>Logical Name: address2_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone1")]
public string Address2_Telephone1
{
	get { return this.GetPropertyValue<string>("address2_telephone1"); }
	set { this.SetPropertyValue("address2_telephone1", value, 50, "Address2_Telephone1"); }
}
///<summary>
///<para>Logical Name: address2_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone2")]
public string Address2_Telephone2
{
	get { return this.GetPropertyValue<string>("address2_telephone2"); }
	set { this.SetPropertyValue("address2_telephone2", value, 50, "Address2_Telephone2"); }
}
///<summary>
///<para>Logical Name: address2_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_telephone3")]
public string Address2_Telephone3
{
	get { return this.GetPropertyValue<string>("address2_telephone3"); }
	set { this.SetPropertyValue("address2_telephone3", value, 50, "Address2_Telephone3"); }
}
///<summary>
///<para>Logical Name: address2_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_upszone")]
public string Address2_UPSZone
{
	get { return this.GetPropertyValue<string>("address2_upszone"); }
	set { this.SetPropertyValue("address2_upszone", value, 4, "Address2_UPSZone"); }
}
///<summary>
///<para>Logical Name: address2_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address2_utcoffset")]
public int? Address2_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address2_utcoffset"); }
	set { this.SetPropertyValue("address2_utcoffset", (int?)value, (int)-1500, (int)1500, "Address2_UTCOffset"); }
}
///<summary>
///<para>Logical Name: address2_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address2_postalcode")]
public string Address2_ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address2_postalcode"); }
	set { this.SetPropertyValue("address2_postalcode", value, 20, "Address2_ZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: address3_composite</para>
///<para>Max Length: 1000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_composite")]
public string Address3
{
	get { return this.GetPropertyValue<string>("address3_composite"); }
}
/// <summary>
///Logical Name: address3_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address3_addresstypecode")]
public eAddress3_AddressType? Address3_AddressType
{
	get
	{
		if (Address3_AddressType_OptionSetValue != null) { return (eAddress3_AddressType)Address3_AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address3_AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address3_AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address3_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address3_addresstypecode")]
public OptionSetValue Address3_AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address3_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address3_addresstypecode", value, "Address3_AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address3_AddressType_Text(IOrganizationService Service)
{
	return this.Address3_AddressType_OptionSetValue.GetOptionSetText(Service, this, "address3_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address3_AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address3_AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address3_city</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_city")]
public string Address3_City
{
	get { return this.GetPropertyValue<string>("address3_city"); }
	set { this.SetPropertyValue("address3_city", value, 80, "Address3_City"); }
}
///<summary>
///<para>Logical Name: address3_county</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_county")]
public string Address3_County
{
	get { return this.GetPropertyValue<string>("address3_county"); }
	set { this.SetPropertyValue("address3_county", value, 50, "Address3_County"); }
}
///<summary>
///<para>Logical Name: address3_fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_fax")]
public string Address3_Fax
{
	get { return this.GetPropertyValue<string>("address3_fax"); }
	set { this.SetPropertyValue("address3_fax", value, 50, "Address3_Fax"); }
}
/// <summary>
///Logical Name: address3_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("address3_freighttermscode")]
public eAddress3_FreightTerms? Address3_FreightTerms
{
	get
	{
		if (Address3_FreightTerms_OptionSetValue != null) { return (eAddress3_FreightTerms)Address3_FreightTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address3_FreightTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address3_FreightTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address3_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("address3_freighttermscode")]
public OptionSetValue Address3_FreightTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address3_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("address3_freighttermscode", value, "Address3_FreightTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address3_FreightTerms_Text(IOrganizationService Service)
{
	return this.Address3_FreightTerms_OptionSetValue.GetOptionSetText(Service, this, "address3_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address3_FreightTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address3_FreightTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address3_addressid</para>
///</summary>
[AttributeLogicalNameAttribute("address3_addressid")]
public Guid Address3_ID
{
	get { return this.GetPropertyValue<Guid>("address3_addressid"); }
	set { this.SetPropertyValue<Guid>("address3_addressid", value, "Address3_ID"); }
}
///<summary>
///<para>Logical Name: address3_latitude</para>
///<para>Minimum Value: -90</para>
///<para>Maximum Value: 90</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address3_latitude")]
public double? Address3_Latitude
{
	get { return this.GetPropertyValue<double?>("address3_latitude"); }
	set { this.SetPropertyValue("address3_latitude", (double?)value, (double)-90, (double)90, "Address3_Latitude"); }
}
///<summary>
///<para>Logical Name: address3_longitude</para>
///<para>Minimum Value: -180</para>
///<para>Maximum Value: 180</para>
///<para>Precision: 5</para>
///</summary>
[AttributeLogicalNameAttribute("address3_longitude")]
public double? Address3_Longitude
{
	get { return this.GetPropertyValue<double?>("address3_longitude"); }
	set { this.SetPropertyValue("address3_longitude", (double?)value, (double)-180, (double)180, "Address3_Longitude"); }
}
///<summary>
///<para>Logical Name: address3_name</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_name")]
public string Address3_Name
{
	get { return this.GetPropertyValue<string>("address3_name"); }
	set { this.SetPropertyValue("address3_name", value, 200, "Address3_Name"); }
}
///<summary>
///<para>Logical Name: address3_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_postofficebox")]
public string Address3_PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address3_postofficebox"); }
	set { this.SetPropertyValue("address3_postofficebox", value, 20, "Address3_PostOfficeBox"); }
}
///<summary>
///<para>Logical Name: address3_primarycontactname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_primarycontactname")]
public string Address3_PrimaryContactName
{
	get { return this.GetPropertyValue<string>("address3_primarycontactname"); }
	set { this.SetPropertyValue("address3_primarycontactname", value, 100, "Address3_PrimaryContactName"); }
}
/// <summary>
///Logical Name: address3_shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("address3_shippingmethodcode")]
public eAddress3_ShippingMethod? Address3_ShippingMethod
{
	get
	{
		if (Address3_ShippingMethod_OptionSetValue != null) { return (eAddress3_ShippingMethod)Address3_ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Address3_ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.Address3_ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address3_shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("address3_shippingmethodcode")]
public OptionSetValue Address3_ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address3_shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("address3_shippingmethodcode", value, "Address3_ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Address3_ShippingMethod_Text(IOrganizationService Service)
{
	return this.Address3_ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "address3_shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Address3_ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Address3_ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address3_telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_telephone1")]
public string Address3_Telephone1
{
	get { return this.GetPropertyValue<string>("address3_telephone1"); }
	set { this.SetPropertyValue("address3_telephone1", value, 50, "Address3_Telephone1"); }
}
///<summary>
///<para>Logical Name: address3_telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_telephone2")]
public string Address3_Telephone2
{
	get { return this.GetPropertyValue<string>("address3_telephone2"); }
	set { this.SetPropertyValue("address3_telephone2", value, 50, "Address3_Telephone2"); }
}
///<summary>
///<para>Logical Name: address3_telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_telephone3")]
public string Address3_Telephone3
{
	get { return this.GetPropertyValue<string>("address3_telephone3"); }
	set { this.SetPropertyValue("address3_telephone3", value, 50, "Address3_Telephone3"); }
}
///<summary>
///<para>Logical Name: address3_upszone</para>
///<para>Max Length: 4 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_upszone")]
public string Address3_UPSZone
{
	get { return this.GetPropertyValue<string>("address3_upszone"); }
	set { this.SetPropertyValue("address3_upszone", value, 4, "Address3_UPSZone"); }
}
///<summary>
///<para>Logical Name: address3_utcoffset</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("address3_utcoffset")]
public int? Address3_UTCOffset
{
	get { return this.GetPropertyValue<int?>("address3_utcoffset"); }
	set { this.SetPropertyValue("address3_utcoffset", (int?)value, (int)-1500, (int)1500, "Address3_UTCOffset"); }
}
/// <summary>
///Logical Name: address1_addresstypecode
/// </summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public eAddress1_AddressType? AddressType
{
	get
	{
		if (AddressType_OptionSetValue != null) { return (eAddress1_AddressType)AddressType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AddressType_OptionSetValue = new OptionSetValue((int)value); }
		else this.AddressType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_addresstypecode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_addresstypecode")]
public OptionSetValue AddressType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_addresstypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_addresstypecode", value, "AddressType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string AddressType_Text(IOrganizationService Service)
{
	return this.AddressType_OptionSetValue.GetOptionSetText(Service, this, "address1_addresstypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string AddressType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.AddressType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: address3_country</para>
///<para>Max Length: 80 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_country")]
public string Address3_Country_Region
{
	get { return this.GetPropertyValue<string>("address3_country"); }
	set { this.SetPropertyValue("address3_country", value, 80, "Address3_Country_Region"); }
}
///<summary>
///<para>Logical Name: address3_stateorprovince</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_stateorprovince")]
public string Address3_State_Province
{
	get { return this.GetPropertyValue<string>("address3_stateorprovince"); }
	set { this.SetPropertyValue("address3_stateorprovince", value, 50, "Address3_State_Province"); }
}
///<summary>
///<para>Logical Name: address3_line1</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_line1")]
public string Address3_Street1
{
	get { return this.GetPropertyValue<string>("address3_line1"); }
	set { this.SetPropertyValue("address3_line1", value, 250, "Address3_Street1"); }
}
///<summary>
///<para>Logical Name: address3_line2</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_line2")]
public string Address3_Street2
{
	get { return this.GetPropertyValue<string>("address3_line2"); }
	set { this.SetPropertyValue("address3_line2", value, 250, "Address3_Street2"); }
}
///<summary>
///<para>Logical Name: address3_line3</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_line3")]
public string Address3_Street3
{
	get { return this.GetPropertyValue<string>("address3_line3"); }
	set { this.SetPropertyValue("address3_line3", value, 250, "Address3_Street3"); }
}
///<summary>
///<para>Logical Name: address3_postalcode</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address3_postalcode")]
public string Address3_ZIP_PostalCode
{
	get { return this.GetPropertyValue<string>("address3_postalcode"); }
	set { this.SetPropertyValue("address3_postalcode", value, 20, "Address3_ZIP_PostalCode"); }
}
///<summary>
///<para>Logical Name: aging30</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? Aging30
{
	get
	{
		if (Aging30Money != null) { return Aging30Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging30</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging30")]
public Money Aging30Money
{
	get { return this.GetPropertyValue<Money>("aging30"); }
}
///<summary>
///<para>Logical Name: aging30_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Aging30_Base
{
	get
	{
		if (Aging30_BaseMoney != null) { return Aging30_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging30_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging30_base")]
public Money Aging30_BaseMoney
{
	get { return this.GetPropertyValue<Money>("aging30_base"); }
}
///<summary>
///<para>Logical Name: aging60</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? Aging60
{
	get
	{
		if (Aging60Money != null) { return Aging60Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging60</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging60")]
public Money Aging60Money
{
	get { return this.GetPropertyValue<Money>("aging60"); }
}
///<summary>
///<para>Logical Name: aging60_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Aging60_Base
{
	get
	{
		if (Aging60_BaseMoney != null) { return Aging60_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging60_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging60_base")]
public Money Aging60_BaseMoney
{
	get { return this.GetPropertyValue<Money>("aging60_base"); }
}
///<summary>
///<para>Logical Name: aging90</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? Aging90
{
	get
	{
		if (Aging90Money != null) { return Aging90Money.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging90</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("aging90")]
public Money Aging90Money
{
	get { return this.GetPropertyValue<Money>("aging90"); }
}
///<summary>
///<para>Logical Name: aging90_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? Aging90_Base
{
	get
	{
		if (Aging90_BaseMoney != null) { return Aging90_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: aging90_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("aging90_base")]
public Money Aging90_BaseMoney
{
	get { return this.GetPropertyValue<Money>("aging90_base"); }
}
///<summary>
///<para>Logical Name: anniversary</para>
///</summary>
[AttributeLogicalNameAttribute("anniversary")]
public DateTime? Anniversary
{
	get { return this.GetPropertyValue<DateTime?>("anniversary"); }
	set { this.SetPropertyValue<DateTime?>("anniversary", value, "Anniversary"); }
}
///<summary>
///<para>Logical Name: annualincome</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? AnnualIncome
{
	get
	{
		if (AnnualIncomeMoney != null) { return AnnualIncomeMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.AnnualIncomeMoney = new Money(value.Value); }
		else this.AnnualIncomeMoney = null;
	}
}
///<summary>
///<para>Logical Name: annualincome</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("annualincome")]
public Money AnnualIncomeMoney
{
	get { return this.GetPropertyValue<Money>("annualincome"); }
	set { this.SetPropertyValue("annualincome", (Money)value, (decimal)0, (decimal)100000000000000, "AnnualIncomeMoney"); }
}
///<summary>
///<para>Logical Name: annualincome_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? AnnualIncome_Base
{
	get
	{
		if (AnnualIncome_BaseMoney != null) { return AnnualIncome_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: annualincome_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("annualincome_base")]
public Money AnnualIncome_BaseMoney
{
	get { return this.GetPropertyValue<Money>("annualincome_base"); }
}
///<summary>
///<para>Logical Name: assistantname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("assistantname")]
public string Assistant
{
	get { return this.GetPropertyValue<string>("assistantname"); }
	set { this.SetPropertyValue("assistantname", value, 100, "Assistant"); }
}
///<summary>
///<para>Logical Name: assistantphone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("assistantphone")]
public string AssistantPhone
{
	get { return this.GetPropertyValue<string>("assistantphone"); }
	set { this.SetPropertyValue("assistantphone", value, 50, "AssistantPhone"); }
}
///<summary>
///<para>Logical Name: isautocreate</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isautocreate")]
public bool? Auto_created
{
	get { return this.GetPropertyValue<bool?>("isautocreate"); }
}
///<summary>
///<para>Logical Name: isbackofficecustomer</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("isbackofficecustomer")]
public bool? BackOfficeCustomer
{
	get { return this.GetPropertyValue<bool?>("isbackofficecustomer"); }
	set { this.SetPropertyValue<bool?>("isbackofficecustomer", value, "BackOfficeCustomer"); }
}
///<summary>
///<para>Logical Name: birthdate</para>
///</summary>
[AttributeLogicalNameAttribute("birthdate")]
public DateTime? Birthday
{
	get { return this.GetPropertyValue<DateTime?>("birthdate"); }
	set { this.SetPropertyValue<DateTime?>("birthdate", value, "Birthday"); }
}
///<summary>
///<para>Logical Name: telephone1</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone1")]
public string BusinessPhone
{
	get { return this.GetPropertyValue<string>("telephone1"); }
	set { this.SetPropertyValue("telephone1", value, 50, "BusinessPhone"); }
}
///<summary>
///<para>Logical Name: business2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("business2")]
public string BusinessPhone2
{
	get { return this.GetPropertyValue<string>("business2"); }
	set { this.SetPropertyValue("business2", value, 50, "BusinessPhone2"); }
}
///<summary>
///<para>Logical Name: callback</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("callback")]
public string CallbackNumber
{
	get { return this.GetPropertyValue<string>("callback"); }
	set { this.SetPropertyValue("callback", value, 50, "CallbackNumber"); }
}
///<summary>
///<para>Logical Name: childrensnames</para>
///<para>Max Length: 255 characters</para>
///</summary>
[AttributeLogicalNameAttribute("childrensnames")]
public string ChildrensNames
{
	get { return this.GetPropertyValue<string>("childrensnames"); }
	set { this.SetPropertyValue("childrensnames", value, 255, "ChildrensNames"); }
}
///<summary>
///<para>Logical Name: company</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("company")]
public string CompanyPhone
{
	get { return this.GetPropertyValue<string>("company"); }
	set { this.SetPropertyValue("company", value, 50, "CompanyPhone"); }
}
///<summary>
///<para>Logical Name: adx_confirmremovepassword</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_confirmremovepassword")]
public bool? ConfirmRemovePassword
{
	get { return this.GetPropertyValue<bool?>("adx_confirmremovepassword"); }
	set { this.SetPropertyValue<bool?>("adx_confirmremovepassword", value, "ConfirmRemovePassword"); }
}
/// <summary>
///Logical Name: msgdpr_gdprconsent
/// </summary>
[AttributeLogicalNameAttribute("msgdpr_gdprconsent")]
public eConsent? ConsentGiven
{
	get
	{
		if (ConsentGiven_OptionSetValue != null) { return (eConsent)ConsentGiven_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ConsentGiven_OptionSetValue = new OptionSetValue((int)value); }
		else this.ConsentGiven_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msgdpr_gdprconsent</para>
///</summary>
[AttributeLogicalNameAttribute("msgdpr_gdprconsent")]
public OptionSetValue ConsentGiven_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msgdpr_gdprconsent"); }
	set { this.SetPropertyValue<OptionSetValue>("msgdpr_gdprconsent", value, "ConsentGiven_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ConsentGiven_Text(IOrganizationService Service)
{
	return this.ConsentGiven_OptionSetValue.GetOptionSetText(Service, this, "msgdpr_gdprconsent");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ConsentGiven_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ConsentGiven_OptionSetValue.Value);
}
/// <summary>
///Logical Name: oer_consentlevel
/// </summary>
[AttributeLogicalNameAttribute("oer_consentlevel")]
public eConsentLevel? ConsentLevel
{
	get
	{
		if (ConsentLevel_OptionSetValue != null) { return (eConsentLevel)ConsentLevel_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ConsentLevel_OptionSetValue = new OptionSetValue((int)value); }
		else this.ConsentLevel_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: oer_consentlevel</para>
///</summary>
[AttributeLogicalNameAttribute("oer_consentlevel")]
public OptionSetValue ConsentLevel_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("oer_consentlevel"); }
	set { this.SetPropertyValue<OptionSetValue>("oer_consentlevel", value, "ConsentLevel_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ConsentLevel_Text(IOrganizationService Service)
{
	return this.ConsentLevel_OptionSetValue.GetOptionSetText(Service, this, "oer_consentlevel");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ConsentLevel_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ConsentLevel_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msevtmgt_contactid</para>
///</summary>
[AttributeLogicalNameAttribute("msevtmgt_contactid")]
public EntityReference ContactAttribute
{
	get { return this.GetPropertyValue<EntityReference>("msevtmgt_contactid"); }
	set { this.SetPropertyValue<EntityReference>("msevtmgt_contactid", value, "ContactAttribute"); }
}
///<summary>
///<para>Key Property (Uniqueidentifier)</para>
///<para>Logical Name: contactid</para>
///</summary>
[AttributeLogicalNameAttribute("contactid")]
public Guid ContactId
{
	get
	{
		return base.Id;
	}
	set
	{
		base.Id = value;
		base.SetPropertyValue("contactid", value, "ContactId");
	}
}
///<summary>
///<para>Logical Name: oer_contactu7key</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("oer_contactu7key")]
public string ContactU7Key
{
	get { return this.GetPropertyValue<string>("oer_contactu7key"); }
	set { this.SetPropertyValue("oer_contactu7key", value, 100, "ContactU7Key"); }
}
///<summary>
///<para>Logical Name: createdby</para>
///</summary>
[AttributeLogicalNameAttribute("createdby")]
public EntityReference CreatedBy
{
	get { return this.GetPropertyValue<EntityReference>("createdby"); }
}
///<summary>
///<para>Logical Name: createdonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("createdonbehalfby")]
public EntityReference CreatedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("createdonbehalfby"); }
}
///<summary>
///<para>Logical Name: createdbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("createdbyexternalparty")]
public EntityReference CreatedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("createdbyexternalparty"); }
}
///<summary>
///<para>Logical Name: adx_createdbyipaddress</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_createdbyipaddress")]
public string CreatedByIPAddress
{
	get { return this.GetPropertyValue<string>("adx_createdbyipaddress"); }
	set { this.SetPropertyValue("adx_createdbyipaddress", value, 100, "CreatedByIPAddress"); }
}
///<summary>
///<para>Logical Name: adx_createdbyusername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_createdbyusername")]
public string CreatedByUsername
{
	get { return this.GetPropertyValue<string>("adx_createdbyusername"); }
	set { this.SetPropertyValue("adx_createdbyusername", value, 100, "CreatedByUsername"); }
}
///<summary>
///<para>Logical Name: createdon</para>
///</summary>
[AttributeLogicalNameAttribute("createdon")]
public DateTime? CreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("createdon"); }
}
///<summary>
///<para>Logical Name: creditonhold</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("creditonhold")]
public bool? CreditHold
{
	get { return this.GetPropertyValue<bool?>("creditonhold"); }
	set { this.SetPropertyValue<bool?>("creditonhold", value, "CreditHold"); }
}
///<summary>
///<para>Logical Name: creditlimit</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
public decimal? CreditLimit
{
	get
	{
		if (CreditLimitMoney != null) { return CreditLimitMoney.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CreditLimitMoney = new Money(value.Value); }
		else this.CreditLimitMoney = null;
	}
}
///<summary>
///<para>Logical Name: creditlimit</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 100000000000000</para>
///<para>Precision: 2</para>
///</summary>
[AttributeLogicalNameAttribute("creditlimit")]
public Money CreditLimitMoney
{
	get { return this.GetPropertyValue<Money>("creditlimit"); }
	set { this.SetPropertyValue("creditlimit", (Money)value, (decimal)0, (decimal)100000000000000, "CreditLimitMoney"); }
}
///<summary>
///<para>Logical Name: creditlimit_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
public decimal? CreditLimit_Base
{
	get
	{
		if (CreditLimit_BaseMoney != null) { return CreditLimit_BaseMoney.Value; }
		return null;
	}
}
///<summary>
///<para>Logical Name: creditlimit_base</para>
///<para>Minimum Value: -922337203685477</para>
///<para>Maximum Value: 922337203685477</para>
///<para>Precision: 4</para>
///</summary>
[AttributeLogicalNameAttribute("creditlimit_base")]
public Money CreditLimit_BaseMoney
{
	get { return this.GetPropertyValue<Money>("creditlimit_base"); }
}
///<summary>
///<para>Logical Name: transactioncurrencyid</para>
///</summary>
[AttributeLogicalNameAttribute("transactioncurrencyid")]
public EntityReference Currency
{
	get { return this.GetPropertyValue<EntityReference>("transactioncurrencyid"); }
	set { this.SetPropertyValue<EntityReference>("transactioncurrencyid", value, "Currency"); }
}
///<summary>
///<para>Logical Name: oer_customermagazines</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("oer_customermagazines")]
public bool? CustomerMagazines
{
	get { return this.GetPropertyValue<bool?>("oer_customermagazines"); }
	set { this.SetPropertyValue<bool?>("oer_customermagazines", value, "CustomerMagazines"); }
}
/// <summary>
///Logical Name: customersizecode
/// </summary>
[AttributeLogicalNameAttribute("customersizecode")]
public eCustomerSize? CustomerSize
{
	get
	{
		if (CustomerSize_OptionSetValue != null) { return (eCustomerSize)CustomerSize_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.CustomerSize_OptionSetValue = new OptionSetValue((int)value); }
		else this.CustomerSize_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: customersizecode</para>
///</summary>
[AttributeLogicalNameAttribute("customersizecode")]
public OptionSetValue CustomerSize_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("customersizecode"); }
	set { this.SetPropertyValue<OptionSetValue>("customersizecode", value, "CustomerSize_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string CustomerSize_Text(IOrganizationService Service)
{
	return this.CustomerSize_OptionSetValue.GetOptionSetText(Service, this, "customersizecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string CustomerSize_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.CustomerSize_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: department</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("department")]
public string Department
{
	get { return this.GetPropertyValue<string>("department"); }
	set { this.SetPropertyValue("department", value, 100, "Department"); }
}
/// <summary>
///Logical Name: oer_department
/// </summary>
[AttributeLogicalNameAttribute("oer_department")]
public eDepartment? Department2
{
	get
	{
		if (Department2_OptionSetValue != null) { return (eDepartment)Department2_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Department2_OptionSetValue = new OptionSetValue((int)value); }
		else this.Department2_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: oer_department</para>
///</summary>
[AttributeLogicalNameAttribute("oer_department")]
public OptionSetValue Department2_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("oer_department"); }
	set { this.SetPropertyValue<OptionSetValue>("oer_department", value, "Department2_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Department2_Text(IOrganizationService Service)
{
	return this.Department2_OptionSetValue.GetOptionSetText(Service, this, "oer_department");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Department2_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Department2_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: description</para>
///<para>Max Length: 2000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("description")]
public string Description
{
	get { return this.GetPropertyValue<string>("description"); }
	set { this.SetPropertyValue("description", value, 2000, "Description"); }
}
///<summary>
///<para>Logical Name: msdyn_disablewebtracking</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_disablewebtracking")]
public bool? DisableWebTracking
{
	get { return this.GetPropertyValue<bool?>("msdyn_disablewebtracking"); }
	set { this.SetPropertyValue<bool?>("msdyn_disablewebtracking", value, "DisableWebTracking"); }
}
///<summary>
///<para>Logical Name: donotbulkemail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotbulkemail")]
public bool? DoNotAllowBulkEmails
{
	get { return this.GetPropertyValue<bool?>("donotbulkemail"); }
	set { this.SetPropertyValue<bool?>("donotbulkemail", value, "DoNotAllowBulkEmails"); }
}
///<summary>
///<para>Logical Name: donotbulkpostalmail</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("donotbulkpostalmail")]
public bool? DoNotAllowBulkMails
{
	get { return this.GetPropertyValue<bool?>("donotbulkpostalmail"); }
	set { this.SetPropertyValue<bool?>("donotbulkpostalmail", value, "DoNotAllowBulkMails"); }
}
///<summary>
///<para>Logical Name: donotemail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotemail")]
public bool? DoNotAllowEmails
{
	get { return this.GetPropertyValue<bool?>("donotemail"); }
	set { this.SetPropertyValue<bool?>("donotemail", value, "DoNotAllowEmails"); }
}
///<summary>
///<para>Logical Name: donotfax</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotfax")]
public bool? DoNotAllowFaxes
{
	get { return this.GetPropertyValue<bool?>("donotfax"); }
	set { this.SetPropertyValue<bool?>("donotfax", value, "DoNotAllowFaxes"); }
}
///<summary>
///<para>Logical Name: donotpostalmail</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotpostalmail")]
public bool? DoNotAllowMails
{
	get { return this.GetPropertyValue<bool?>("donotpostalmail"); }
	set { this.SetPropertyValue<bool?>("donotpostalmail", value, "DoNotAllowMails"); }
}
///<summary>
///<para>Logical Name: donotphone</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("donotphone")]
public bool? DoNotAllowPhoneCalls
{
	get { return this.GetPropertyValue<bool?>("donotphone"); }
	set { this.SetPropertyValue<bool?>("donotphone", value, "DoNotAllowPhoneCalls"); }
}
/// <summary>
///Logical Name: educationcode
/// </summary>
[AttributeLogicalNameAttribute("educationcode")]
public eEducation? Education
{
	get
	{
		if (Education_OptionSetValue != null) { return (eEducation)Education_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Education_OptionSetValue = new OptionSetValue((int)value); }
		else this.Education_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: educationcode</para>
///</summary>
[AttributeLogicalNameAttribute("educationcode")]
public OptionSetValue Education_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("educationcode"); }
	set { this.SetPropertyValue<OptionSetValue>("educationcode", value, "Education_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Education_Text(IOrganizationService Service)
{
	return this.Education_OptionSetValue.GetOptionSetText(Service, this, "educationcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Education_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Education_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: emailaddress1</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress1")]
public string Email
{
	get { return this.GetPropertyValue<string>("emailaddress1"); }
	set { this.SetPropertyValue("emailaddress1", value, 100, "Email"); }
}
///<summary>
///<para>Logical Name: emailaddress2</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress2")]
public string EmailAddress2
{
	get { return this.GetPropertyValue<string>("emailaddress2"); }
	set { this.SetPropertyValue("emailaddress2", value, 100, "EmailAddress2"); }
}
///<summary>
///<para>Logical Name: emailaddress3</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("emailaddress3")]
public string EmailAddress3
{
	get { return this.GetPropertyValue<string>("emailaddress3"); }
	set { this.SetPropertyValue("emailaddress3", value, 100, "EmailAddress3"); }
}
///<summary>
///<para>Logical Name: adx_identity_emailaddress1confirmed</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_emailaddress1confirmed")]
public bool? EmailConfirmed
{
	get { return this.GetPropertyValue<bool?>("adx_identity_emailaddress1confirmed"); }
	set { this.SetPropertyValue<bool?>("adx_identity_emailaddress1confirmed", value, "EmailConfirmed"); }
}
///<summary>
///<para>Logical Name: employeeid</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("employeeid")]
public string Employee
{
	get { return this.GetPropertyValue<string>("employeeid"); }
	set { this.SetPropertyValue("employeeid", value, 50, "Employee"); }
}
///<summary>
///<para>Logical Name: entityimageid</para>
///</summary>
[AttributeLogicalNameAttribute("entityimageid")]
public Guid EntityImageId
{
	get { return this.GetPropertyValue<Guid>("entityimageid"); }
}
///<summary>
///<para>Logical Name: oer_eventmanagement</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("oer_eventmanagement")]
public bool? EventManagement
{
	get { return this.GetPropertyValue<bool?>("oer_eventmanagement"); }
	set { this.SetPropertyValue<bool?>("oer_eventmanagement", value, "EventManagement"); }
}
///<summary>
///<para>Logical Name: exchangerate</para>
///<para>Minimum Value: 0.0000000001</para>
///<para>Maximum Value: 100000000000</para>
///<para>Precision: 10</para>
///</summary>
[AttributeLogicalNameAttribute("exchangerate")]
public decimal? ExchangeRate
{
	get { return this.GetPropertyValue<decimal?>("exchangerate"); }
}
///<summary>
///<para>Logical Name: externaluseridentifier</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("externaluseridentifier")]
public string ExternalUserIdentifier
{
	get { return this.GetPropertyValue<string>("externaluseridentifier"); }
	set { this.SetPropertyValue("externaluseridentifier", value, 50, "ExternalUserIdentifier"); }
}
///<summary>
///<para>Logical Name: fax</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fax")]
public string Fax
{
	get { return this.GetPropertyValue<string>("fax"); }
	set { this.SetPropertyValue("fax", value, 50, "Fax"); }
}
///<summary>
///<para>Logical Name: firstname</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("firstname")]
public string FirstName
{
	get { return this.GetPropertyValue<string>("firstname"); }
	set { this.SetPropertyValue("firstname", value, 50, "FirstName"); }
}
///<summary>
///<para>Logical Name: followemail</para>
///<para>True = Allow</para>
///<para>False = Do Not Allow</para>
///</summary>
[AttributeLogicalNameAttribute("followemail")]
public bool? FollowEmailActivity
{
	get { return this.GetPropertyValue<bool?>("followemail"); }
	set { this.SetPropertyValue<bool?>("followemail", value, "FollowEmailActivity"); }
}
///<summary>
///<para>Logical Name: ftpsiteurl</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("ftpsiteurl")]
public string FTPSite
{
	get { return this.GetPropertyValue<string>("ftpsiteurl"); }
	set { this.SetPropertyValue("ftpsiteurl", value, 200, "FTPSite"); }
}
///<summary>
///<para>Logical Name: fullname</para>
///<para>Max Length: 160 characters</para>
///</summary>
[AttributeLogicalNameAttribute("fullname")]
public string FullName
{
	get { return this.GetPropertyValue<string>("fullname"); }
}
/// <summary>
///Logical Name: oer_function
/// </summary>
[AttributeLogicalNameAttribute("oer_function")]
public eFunction? Function
{
	get
	{
		if (Function_OptionSetValue != null) { return (eFunction)Function_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Function_OptionSetValue = new OptionSetValue((int)value); }
		else this.Function_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: oer_function</para>
///</summary>
[AttributeLogicalNameAttribute("oer_function")]
public OptionSetValue Function_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("oer_function"); }
	set { this.SetPropertyValue<OptionSetValue>("oer_function", value, "Function_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Function_Text(IOrganizationService Service)
{
	return this.Function_OptionSetValue.GetOptionSetText(Service, this, "oer_function");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Function_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Function_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msgdpr_gdprischild</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msgdpr_gdprischild")]
public bool? GDPRIsChild
{
	get { return this.GetPropertyValue<bool?>("msgdpr_gdprischild"); }
	set { this.SetPropertyValue<bool?>("msgdpr_gdprischild", value, "GDPRIsChild"); }
}
///<summary>
///<para>Logical Name: msdyn_gdproptout</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_gdproptout")]
public bool? GDPROptout
{
	get { return this.GetPropertyValue<bool?>("msdyn_gdproptout"); }
	set { this.SetPropertyValue<bool?>("msdyn_gdproptout", value, "GDPROptout"); }
}
/// <summary>
///Logical Name: gendercode
/// </summary>
[AttributeLogicalNameAttribute("gendercode")]
public eGender? Gender
{
	get
	{
		if (Gender_OptionSetValue != null) { return (eGender)Gender_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Gender_OptionSetValue = new OptionSetValue((int)value); }
		else this.Gender_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: gendercode</para>
///</summary>
[AttributeLogicalNameAttribute("gendercode")]
public OptionSetValue Gender_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("gendercode"); }
	set { this.SetPropertyValue<OptionSetValue>("gendercode", value, "Gender_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Gender_Text(IOrganizationService Service)
{
	return this.Gender_OptionSetValue.GetOptionSetText(Service, this, "gendercode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Gender_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Gender_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: governmentid</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("governmentid")]
public string Government
{
	get { return this.GetPropertyValue<string>("governmentid"); }
	set { this.SetPropertyValue("governmentid", value, 50, "Government"); }
}
///<summary>
///<para>Logical Name: oer_greetingcards</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("oer_greetingcards")]
public bool? GreetingCards
{
	get { return this.GetPropertyValue<bool?>("oer_greetingcards"); }
	set { this.SetPropertyValue<bool?>("oer_greetingcards", value, "GreetingCards"); }
}
/// <summary>
///Logical Name: haschildrencode
/// </summary>
[AttributeLogicalNameAttribute("haschildrencode")]
public eHasChildren? HasChildren
{
	get
	{
		if (HasChildren_OptionSetValue != null) { return (eHasChildren)HasChildren_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.HasChildren_OptionSetValue = new OptionSetValue((int)value); }
		else this.HasChildren_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: haschildrencode</para>
///</summary>
[AttributeLogicalNameAttribute("haschildrencode")]
public OptionSetValue HasChildren_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("haschildrencode"); }
	set { this.SetPropertyValue<OptionSetValue>("haschildrencode", value, "HasChildren_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string HasChildren_Text(IOrganizationService Service)
{
	return this.HasChildren_OptionSetValue.GetOptionSetText(Service, this, "haschildrencode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string HasChildren_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.HasChildren_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: telephone2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone2")]
public string HomePhone
{
	get { return this.GetPropertyValue<string>("telephone2"); }
	set { this.SetPropertyValue("telephone2", value, 50, "HomePhone"); }
}
///<summary>
///<para>Logical Name: home2</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("home2")]
public string HomePhone2
{
	get { return this.GetPropertyValue<string>("home2"); }
	set { this.SetPropertyValue("home2", value, 50, "HomePhone2"); }
}
///<summary>
///<para>Logical Name: importsequencenumber</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("importsequencenumber")]
public int? ImportSequenceNumber
{
	get { return this.GetPropertyValue<int?>("importsequencenumber"); }
	set { this.SetPropertyValue("importsequencenumber", (int?)value, (int)-2147483648, (int)2147483647, "ImportSequenceNumber"); }
}
/// <summary>
///Logical Name: address1_freighttermscode
/// </summary>
[AttributeLogicalNameAttribute("address1_freighttermscode")]
public eAddress1_FreightTerms? Incoterms
{
	get
	{
		if (Incoterms_OptionSetValue != null) { return (eAddress1_FreightTerms)Incoterms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Incoterms_OptionSetValue = new OptionSetValue((int)value); }
		else this.Incoterms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: address1_freighttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("address1_freighttermscode")]
public OptionSetValue Incoterms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("address1_freighttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("address1_freighttermscode", value, "Incoterms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Incoterms_Text(IOrganizationService Service)
{
	return this.Incoterms_OptionSetValue.GetOptionSetText(Service, this, "address1_freighttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Incoterms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Incoterms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyncrm_insights_placeholder</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_insights_placeholder")]
public string Insights
{
	get { return this.GetPropertyValue<string>("msdyncrm_insights_placeholder"); }
	set { this.SetPropertyValue("msdyncrm_insights_placeholder", value, 100, "Insights"); }
}
///<summary>
///<para>Logical Name: oer_isdeleterequested</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("oer_isdeleterequested")]
public bool? IsDeleteRequested
{
	get { return this.GetPropertyValue<bool?>("oer_isdeleterequested"); }
	set { this.SetPropertyValue<bool?>("oer_isdeleterequested", value, "IsDeleteRequested"); }
}
///<summary>
///<para>Logical Name: msdyn_isminor</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_isminor")]
public bool? IsMinor
{
	get { return this.GetPropertyValue<bool?>("msdyn_isminor"); }
	set { this.SetPropertyValue<bool?>("msdyn_isminor", value, "IsMinor"); }
}
///<summary>
///<para>Logical Name: msdyn_isminorwithparentalconsent</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_isminorwithparentalconsent")]
public bool? IsMinorWithParentalConsent
{
	get { return this.GetPropertyValue<bool?>("msdyn_isminorwithparentalconsent"); }
	set { this.SetPropertyValue<bool?>("msdyn_isminorwithparentalconsent", value, "IsMinorWithParentalConsent"); }
}
///<summary>
///<para>Logical Name: jobtitle</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("jobtitle")]
public string JobTitle
{
	get { return this.GetPropertyValue<string>("jobtitle"); }
	set { this.SetPropertyValue("jobtitle", value, 100, "JobTitle"); }
}
///<summary>
///<para>Logical Name: lastusedincampaign</para>
///</summary>
[AttributeLogicalNameAttribute("lastusedincampaign")]
public DateTime? LastDateIncludedInCampaign
{
	get { return this.GetPropertyValue<DateTime?>("lastusedincampaign"); }
	set { this.SetPropertyValue<DateTime?>("lastusedincampaign", value, "LastDateIncludedInCampaign"); }
}
///<summary>
///<para>Logical Name: lastname</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("lastname")]
public string LastName
{
	get { return this.GetPropertyValue<string>("lastname"); }
	set { this.SetPropertyValue("lastname", value, 50, "LastName"); }
}
///<summary>
///<para>Logical Name: lastonholdtime</para>
///</summary>
[AttributeLogicalNameAttribute("lastonholdtime")]
public DateTime? LastOnHoldTime
{
	get { return this.GetPropertyValue<DateTime?>("lastonholdtime"); }
	set { this.SetPropertyValue<DateTime?>("lastonholdtime", value, "LastOnHoldTime"); }
}
///<summary>
///<para>Logical Name: slainvokedid</para>
///</summary>
[AttributeLogicalNameAttribute("slainvokedid")]
public EntityReference LastSLAApplied
{
	get { return this.GetPropertyValue<EntityReference>("slainvokedid"); }
}
///<summary>
///<para>Logical Name: adx_identity_lastsuccessfullogin</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_lastsuccessfullogin")]
public DateTime? LastSuccessfulLogin
{
	get { return this.GetPropertyValue<DateTime?>("adx_identity_lastsuccessfullogin"); }
	set { this.SetPropertyValue<DateTime?>("adx_identity_lastsuccessfullogin", value, "LastSuccessfulLogin"); }
}
/// <summary>
///Logical Name: leadsourcecode
/// </summary>
[AttributeLogicalNameAttribute("leadsourcecode")]
public eLeadSource? LeadSource
{
	get
	{
		if (LeadSource_OptionSetValue != null) { return (eLeadSource)LeadSource_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.LeadSource_OptionSetValue = new OptionSetValue((int)value); }
		else this.LeadSource_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: leadsourcecode</para>
///</summary>
[AttributeLogicalNameAttribute("leadsourcecode")]
public OptionSetValue LeadSource_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("leadsourcecode"); }
	set { this.SetPropertyValue<OptionSetValue>("leadsourcecode", value, "LeadSource_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string LeadSource_Text(IOrganizationService Service)
{
	return this.LeadSource_OptionSetValue.GetOptionSetText(Service, this, "leadsourcecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string LeadSource_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.LeadSource_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: adx_identity_locallogindisabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_locallogindisabled")]
public bool? LocalLoginDisabled
{
	get { return this.GetPropertyValue<bool?>("adx_identity_locallogindisabled"); }
	set { this.SetPropertyValue<bool?>("adx_identity_locallogindisabled", value, "LocalLoginDisabled"); }
}
///<summary>
///<para>Logical Name: adx_identity_lockoutenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_lockoutenabled")]
public bool? LockoutEnabled
{
	get { return this.GetPropertyValue<bool?>("adx_identity_lockoutenabled"); }
	set { this.SetPropertyValue<bool?>("adx_identity_lockoutenabled", value, "LockoutEnabled"); }
}
///<summary>
///<para>Logical Name: adx_identity_lockoutenddate</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_lockoutenddate")]
public DateTime? LockoutEndDate
{
	get { return this.GetPropertyValue<DateTime?>("adx_identity_lockoutenddate"); }
	set { this.SetPropertyValue<DateTime?>("adx_identity_lockoutenddate", value, "LockoutEndDate"); }
}
///<summary>
///<para>Logical Name: adx_identity_logonenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_logonenabled")]
public bool? LoginEnabled
{
	get { return this.GetPropertyValue<bool?>("adx_identity_logonenabled"); }
	set { this.SetPropertyValue<bool?>("adx_identity_logonenabled", value, "LoginEnabled"); }
}
///<summary>
///<para>Logical Name: managername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("managername")]
public string Manager
{
	get { return this.GetPropertyValue<string>("managername"); }
	set { this.SetPropertyValue("managername", value, 100, "Manager"); }
}
///<summary>
///<para>Logical Name: managerphone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("managerphone")]
public string ManagerPhone
{
	get { return this.GetPropertyValue<string>("managerphone"); }
	set { this.SetPropertyValue("managerphone", value, 50, "ManagerPhone"); }
}
///<summary>
///<para>Logical Name: msa_managingpartnerid</para>
///</summary>
[AttributeLogicalNameAttribute("msa_managingpartnerid")]
public EntityReference ManagingPartner
{
	get { return this.GetPropertyValue<EntityReference>("msa_managingpartnerid"); }
	set { this.SetPropertyValue<EntityReference>("msa_managingpartnerid", value, "ManagingPartner"); }
}
/// <summary>
///Logical Name: familystatuscode
/// </summary>
[AttributeLogicalNameAttribute("familystatuscode")]
public eMaritalStatus? MaritalStatus
{
	get
	{
		if (MaritalStatus_OptionSetValue != null) { return (eMaritalStatus)MaritalStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.MaritalStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.MaritalStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: familystatuscode</para>
///</summary>
[AttributeLogicalNameAttribute("familystatuscode")]
public OptionSetValue MaritalStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("familystatuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("familystatuscode", value, "MaritalStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string MaritalStatus_Text(IOrganizationService Service)
{
	return this.MaritalStatus_OptionSetValue.GetOptionSetText(Service, this, "familystatuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string MaritalStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.MaritalStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: marketingonly</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("marketingonly")]
public bool? MarketingOnly
{
	get { return this.GetPropertyValue<bool?>("marketingonly"); }
	set { this.SetPropertyValue<bool?>("marketingonly", value, "MarketingOnly"); }
}
///<summary>
///<para>Logical Name: masterid</para>
///</summary>
[AttributeLogicalNameAttribute("masterid")]
public EntityReference MasterID
{
	get { return this.GetPropertyValue<EntityReference>("masterid"); }
}
///<summary>
///<para>Logical Name: merged</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("merged")]
public bool? Merged
{
	get { return this.GetPropertyValue<bool?>("merged"); }
}
///<summary>
///<para>Logical Name: middlename</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("middlename")]
public string MiddleName
{
	get { return this.GetPropertyValue<string>("middlename"); }
	set { this.SetPropertyValue("middlename", value, 50, "MiddleName"); }
}
///<summary>
///<para>Logical Name: mobilephone</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("mobilephone")]
public string MobilePhone
{
	get { return this.GetPropertyValue<string>("mobilephone"); }
	set { this.SetPropertyValue("mobilephone", value, 50, "MobilePhone"); }
}
///<summary>
///<para>Logical Name: adx_identity_mobilephoneconfirmed</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_mobilephoneconfirmed")]
public bool? MobilePhoneConfirmed
{
	get { return this.GetPropertyValue<bool?>("adx_identity_mobilephoneconfirmed"); }
	set { this.SetPropertyValue<bool?>("adx_identity_mobilephoneconfirmed", value, "MobilePhoneConfirmed"); }
}
///<summary>
///<para>Logical Name: modifiedby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedby")]
public EntityReference ModifiedBy
{
	get { return this.GetPropertyValue<EntityReference>("modifiedby"); }
}
///<summary>
///<para>Logical Name: modifiedonbehalfby</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedonbehalfby")]
public EntityReference ModifiedBy_Delegate
{
	get { return this.GetPropertyValue<EntityReference>("modifiedonbehalfby"); }
}
///<summary>
///<para>Logical Name: modifiedbyexternalparty</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedbyexternalparty")]
public EntityReference ModifiedBy_ExternalParty
{
	get { return this.GetPropertyValue<EntityReference>("modifiedbyexternalparty"); }
}
///<summary>
///<para>Logical Name: adx_modifiedbyipaddress</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_modifiedbyipaddress")]
public string ModifiedByIPAddress
{
	get { return this.GetPropertyValue<string>("adx_modifiedbyipaddress"); }
	set { this.SetPropertyValue("adx_modifiedbyipaddress", value, 100, "ModifiedByIPAddress"); }
}
///<summary>
///<para>Logical Name: adx_modifiedbyusername</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_modifiedbyusername")]
public string ModifiedByUsername
{
	get { return this.GetPropertyValue<string>("adx_modifiedbyusername"); }
	set { this.SetPropertyValue("adx_modifiedbyusername", value, 100, "ModifiedByUsername"); }
}
///<summary>
///<para>Logical Name: modifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("modifiedon")]
public DateTime? ModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("modifiedon"); }
}
///<summary>
///<para>Logical Name: adx_identity_newpassword</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_newpassword")]
public string NewPasswordInput
{
	get { return this.GetPropertyValue<string>("adx_identity_newpassword"); }
	set { this.SetPropertyValue("adx_identity_newpassword", value, 100, "NewPasswordInput"); }
}
///<summary>
///<para>Logical Name: nickname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("nickname")]
public string Nickname
{
	get { return this.GetPropertyValue<string>("nickname"); }
	set { this.SetPropertyValue("nickname", value, 100, "Nickname"); }
}
///<summary>
///<para>Logical Name: numberofchildren</para>
///<para>Minimum Value: 0</para>
///<para>Maximum Value: 1000000000</para>
///</summary>
[AttributeLogicalNameAttribute("numberofchildren")]
public int? No_OfChildren
{
	get { return this.GetPropertyValue<int?>("numberofchildren"); }
	set { this.SetPropertyValue("numberofchildren", (int?)value, (int)0, (int)1000000000, "No_OfChildren"); }
}
///<summary>
///<para>Logical Name: onholdtime</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("onholdtime")]
public int? OnHoldTime_Minutes
{
	get { return this.GetPropertyValue<int?>("onholdtime"); }
}
/// <summary>
///Logical Name: msdyn_orgchangestatus
/// </summary>
[AttributeLogicalNameAttribute("msdyn_orgchangestatus")]
public eOrgChangeStatus? OrgChangeStatus
{
	get
	{
		if (OrgChangeStatus_OptionSetValue != null) { return (eOrgChangeStatus)OrgChangeStatus_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.OrgChangeStatus_OptionSetValue = new OptionSetValue((int)value); }
		else this.OrgChangeStatus_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: msdyn_orgchangestatus</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_orgchangestatus")]
public OptionSetValue OrgChangeStatus_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("msdyn_orgchangestatus"); }
	set { this.SetPropertyValue<OptionSetValue>("msdyn_orgchangestatus", value, "OrgChangeStatus_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string OrgChangeStatus_Text(IOrganizationService Service)
{
	return this.OrgChangeStatus_OptionSetValue.GetOptionSetText(Service, this, "msdyn_orgchangestatus");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string OrgChangeStatus_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.OrgChangeStatus_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: adx_organizationname</para>
///<para>Max Length: 250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_organizationname")]
public string OrganizationName
{
	get { return this.GetPropertyValue<string>("adx_organizationname"); }
	set { this.SetPropertyValue("adx_organizationname", value, 250, "OrganizationName"); }
}
///<summary>
///<para>Logical Name: msevtmgt_originatingeventid</para>
///</summary>
[AttributeLogicalNameAttribute("msevtmgt_originatingeventid")]
public EntityReference OriginatingEvent
{
	get { return this.GetPropertyValue<EntityReference>("msevtmgt_originatingeventid"); }
	set { this.SetPropertyValue<EntityReference>("msevtmgt_originatingeventid", value, "OriginatingEvent"); }
}
///<summary>
///<para>Logical Name: originatingleadid</para>
///</summary>
[AttributeLogicalNameAttribute("originatingleadid")]
public EntityReference OriginatingLead
{
	get { return this.GetPropertyValue<EntityReference>("originatingleadid"); }
	set { this.SetPropertyValue<EntityReference>("originatingleadid", value, "OriginatingLead"); }
}
///<summary>
///<para>Logical Name: ownerid</para>
///</summary>
[AttributeLogicalNameAttribute("ownerid")]
public EntityReference Owner
{
	get { return this.GetPropertyValue<EntityReference>("ownerid"); }
	set { this.SetPropertyValue<EntityReference>("ownerid", value, "Owner"); }
}
///<summary>
///<para>Logical Name: owningbusinessunit</para>
///</summary>
[AttributeLogicalNameAttribute("owningbusinessunit")]
public EntityReference OwningBusinessUnit
{
	get { return this.GetPropertyValue<EntityReference>("owningbusinessunit"); }
}
///<summary>
///<para>Logical Name: owningteam</para>
///</summary>
[AttributeLogicalNameAttribute("owningteam")]
public EntityReference OwningTeam
{
	get { return this.GetPropertyValue<EntityReference>("owningteam"); }
}
///<summary>
///<para>Logical Name: owninguser</para>
///</summary>
[AttributeLogicalNameAttribute("owninguser")]
public EntityReference OwningUser
{
	get { return this.GetPropertyValue<EntityReference>("owninguser"); }
}
///<summary>
///<para>Logical Name: pager</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("pager")]
public string Pager
{
	get { return this.GetPropertyValue<string>("pager"); }
	set { this.SetPropertyValue("pager", value, 50, "Pager"); }
}
///<summary>
///<para>Logical Name: parentcontactid</para>
///</summary>
[AttributeLogicalNameAttribute("parentcontactid")]
public EntityReference ParentContact
{
	get { return this.GetPropertyValue<EntityReference>("parentcontactid"); }
}
///<summary>
///<para>Logical Name: parentcustomeridtype</para>
///</summary>
[AttributeLogicalNameAttribute("parentcustomeridtype")]
public string ParentCustomerType
{
	get { return this.GetPropertyValue<string>("parentcustomeridtype"); }
	set { this.SetPropertyValue<string>("parentcustomeridtype", value, "ParentCustomerType"); }
}
///<summary>
///<para>Logical Name: msgdpr_gdprparentid</para>
///</summary>
[AttributeLogicalNameAttribute("msgdpr_gdprparentid")]
public EntityReference ParentOrCustodian
{
	get { return this.GetPropertyValue<EntityReference>("msgdpr_gdprparentid"); }
	set { this.SetPropertyValue<EntityReference>("msgdpr_gdprparentid", value, "ParentOrCustodian"); }
}
///<summary>
///<para>Logical Name: participatesinworkflow</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("participatesinworkflow")]
public bool? ParticipatesInWorkflow
{
	get { return this.GetPropertyValue<bool?>("participatesinworkflow"); }
	set { this.SetPropertyValue<bool?>("participatesinworkflow", value, "ParticipatesInWorkflow"); }
}
///<summary>
///<para>Logical Name: oer_passwordhash</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("oer_passwordhash")]
public string PasswordHash
{
	get { return this.GetPropertyValue<string>("oer_passwordhash"); }
	set { this.SetPropertyValue("oer_passwordhash", value, 100, "PasswordHash"); }
}
///<summary>
///<para>Logical Name: adx_identity_passwordhash</para>
///<para>Max Length: 128 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_passwordhash")]
public string PasswordHash2
{
	get { return this.GetPropertyValue<string>("adx_identity_passwordhash"); }
	set { this.SetPropertyValue("adx_identity_passwordhash", value, 128, "PasswordHash2"); }
}
/// <summary>
///Logical Name: paymenttermscode
/// </summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public ePaymentTerms? PaymentTerms
{
	get
	{
		if (PaymentTerms_OptionSetValue != null) { return (ePaymentTerms)PaymentTerms_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PaymentTerms_OptionSetValue = new OptionSetValue((int)value); }
		else this.PaymentTerms_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: paymenttermscode</para>
///</summary>
[AttributeLogicalNameAttribute("paymenttermscode")]
public OptionSetValue PaymentTerms_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("paymenttermscode"); }
	set { this.SetPropertyValue<OptionSetValue>("paymenttermscode", value, "PaymentTerms_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PaymentTerms_Text(IOrganizationService Service)
{
	return this.PaymentTerms_OptionSetValue.GetOptionSetText(Service, this, "paymenttermscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PaymentTerms_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PaymentTerms_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: adx_portalinvitationcode</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_portalinvitationcode")]
public string PortalInvitationCode
{
	get { return this.GetPropertyValue<string>("adx_portalinvitationcode"); }
	set { this.SetPropertyValue("adx_portalinvitationcode", value, 200, "PortalInvitationCode"); }
}
///<summary>
///<para>Logical Name: adx_portalinvitationurl</para>
///<para>Max Length: 600 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_portalinvitationurl")]
public string PortalInvitationURL
{
	get { return this.GetPropertyValue<string>("adx_portalinvitationurl"); }
	set { this.SetPropertyValue("adx_portalinvitationurl", value, 600, "PortalInvitationURL"); }
}
///<summary>
///<para>Logical Name: msdyn_portaltermsagreementdate</para>
///</summary>
[AttributeLogicalNameAttribute("msdyn_portaltermsagreementdate")]
public DateTime? PortalTermsAgreementDate
{
	get { return this.GetPropertyValue<DateTime?>("msdyn_portaltermsagreementdate"); }
	set { this.SetPropertyValue<DateTime?>("msdyn_portaltermsagreementdate", value, "PortalTermsAgreementDate"); }
}
///<summary>
///<para>Logical Name: address1_postofficebox</para>
///<para>Max Length: 20 characters</para>
///</summary>
[AttributeLogicalNameAttribute("address1_postofficebox")]
public string PostOfficeBox
{
	get { return this.GetPropertyValue<string>("address1_postofficebox"); }
	set { this.SetPropertyValue("address1_postofficebox", value, 20, "PostOfficeBox"); }
}
/// <summary>
///Logical Name: preferredappointmentdaycode
/// </summary>
[AttributeLogicalNameAttribute("preferredappointmentdaycode")]
public ePreferredDay? PreferredDay
{
	get
	{
		if (PreferredDay_OptionSetValue != null) { return (ePreferredDay)PreferredDay_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredDay_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredDay_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredappointmentdaycode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredappointmentdaycode")]
public OptionSetValue PreferredDay_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredappointmentdaycode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredappointmentdaycode", value, "PreferredDay_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredDay_Text(IOrganizationService Service)
{
	return this.PreferredDay_OptionSetValue.GetOptionSetText(Service, this, "preferredappointmentdaycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredDay_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredDay_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: preferredequipmentid</para>
///</summary>
[AttributeLogicalNameAttribute("preferredequipmentid")]
public EntityReference PreferredFacility_Equipment
{
	get { return this.GetPropertyValue<EntityReference>("preferredequipmentid"); }
	set { this.SetPropertyValue<EntityReference>("preferredequipmentid", value, "PreferredFacility_Equipment"); }
}
///<summary>
///<para>Logical Name: adx_preferredlanguageid</para>
///</summary>
[AttributeLogicalNameAttribute("adx_preferredlanguageid")]
public EntityReference PreferredLanguage
{
	get { return this.GetPropertyValue<EntityReference>("adx_preferredlanguageid"); }
	set { this.SetPropertyValue<EntityReference>("adx_preferredlanguageid", value, "PreferredLanguage"); }
}
/// <summary>
///Logical Name: preferredcontactmethodcode
/// </summary>
[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
public ePreferredMethodOfContact? PreferredMethodOfContact
{
	get
	{
		if (PreferredMethodOfContact_OptionSetValue != null) { return (ePreferredMethodOfContact)PreferredMethodOfContact_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredMethodOfContact_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredMethodOfContact_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredcontactmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredcontactmethodcode")]
public OptionSetValue PreferredMethodOfContact_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredcontactmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredcontactmethodcode", value, "PreferredMethodOfContact_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredMethodOfContact_Text(IOrganizationService Service)
{
	return this.PreferredMethodOfContact_OptionSetValue.GetOptionSetText(Service, this, "preferredcontactmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredMethodOfContact_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredMethodOfContact_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: preferredserviceid</para>
///</summary>
[AttributeLogicalNameAttribute("preferredserviceid")]
public EntityReference PreferredService
{
	get { return this.GetPropertyValue<EntityReference>("preferredserviceid"); }
	set { this.SetPropertyValue<EntityReference>("preferredserviceid", value, "PreferredService"); }
}
/// <summary>
///Logical Name: preferredappointmenttimecode
/// </summary>
[AttributeLogicalNameAttribute("preferredappointmenttimecode")]
public ePreferredTime? PreferredTime
{
	get
	{
		if (PreferredTime_OptionSetValue != null) { return (ePreferredTime)PreferredTime_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.PreferredTime_OptionSetValue = new OptionSetValue((int)value); }
		else this.PreferredTime_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: preferredappointmenttimecode</para>
///</summary>
[AttributeLogicalNameAttribute("preferredappointmenttimecode")]
public OptionSetValue PreferredTime_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("preferredappointmenttimecode"); }
	set { this.SetPropertyValue<OptionSetValue>("preferredappointmenttimecode", value, "PreferredTime_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string PreferredTime_Text(IOrganizationService Service)
{
	return this.PreferredTime_OptionSetValue.GetOptionSetText(Service, this, "preferredappointmenttimecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string PreferredTime_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.PreferredTime_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: preferredsystemuserid</para>
///</summary>
[AttributeLogicalNameAttribute("preferredsystemuserid")]
public EntityReference PreferredUser
{
	get { return this.GetPropertyValue<EntityReference>("preferredsystemuserid"); }
	set { this.SetPropertyValue<EntityReference>("preferredsystemuserid", value, "PreferredUser"); }
}
///<summary>
///<para>Logical Name: defaultpricelevelid</para>
///</summary>
[AttributeLogicalNameAttribute("defaultpricelevelid")]
public EntityReference PriceList
{
	get { return this.GetPropertyValue<EntityReference>("defaultpricelevelid"); }
	set { this.SetPropertyValue<EntityReference>("defaultpricelevelid", value, "PriceList"); }
}
///<summary>
///<para>Logical Name: processid</para>
///</summary>
[AttributeLogicalNameAttribute("processid")]
public Guid Process
{
	get { return this.GetPropertyValue<Guid>("processid"); }
	set { this.SetPropertyValue<Guid>("processid", value, "Process"); }
}
///<summary>
///<para>Logical Name: adx_profilealert</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_profilealert")]
public bool? ProfileAlert
{
	get { return this.GetPropertyValue<bool?>("adx_profilealert"); }
	set { this.SetPropertyValue<bool?>("adx_profilealert", value, "ProfileAlert"); }
}
///<summary>
///<para>Logical Name: adx_profilealertdate</para>
///</summary>
[AttributeLogicalNameAttribute("adx_profilealertdate")]
public DateTime? ProfileAlertDate
{
	get { return this.GetPropertyValue<DateTime?>("adx_profilealertdate"); }
	set { this.SetPropertyValue<DateTime?>("adx_profilealertdate", value, "ProfileAlertDate"); }
}
///<summary>
///<para>Logical Name: adx_profilealertinstructions</para>
///<para>Max Length: 4096 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_profilealertinstructions")]
public string ProfileAlertInstructions
{
	get { return this.GetPropertyValue<string>("adx_profilealertinstructions"); }
	set { this.SetPropertyValue("adx_profilealertinstructions", value, 4096, "ProfileAlertInstructions"); }
}
///<summary>
///<para>Logical Name: adx_profileisanonymous</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_profileisanonymous")]
public bool? ProfileIsAnonymous
{
	get { return this.GetPropertyValue<bool?>("adx_profileisanonymous"); }
	set { this.SetPropertyValue<bool?>("adx_profileisanonymous", value, "ProfileIsAnonymous"); }
}
///<summary>
///<para>Logical Name: adx_profilelastactivity</para>
///</summary>
[AttributeLogicalNameAttribute("adx_profilelastactivity")]
public DateTime? ProfileLastActivity
{
	get { return this.GetPropertyValue<DateTime?>("adx_profilelastactivity"); }
	set { this.SetPropertyValue<DateTime?>("adx_profilelastactivity", value, "ProfileLastActivity"); }
}
///<summary>
///<para>Logical Name: adx_profilemodifiedon</para>
///</summary>
[AttributeLogicalNameAttribute("adx_profilemodifiedon")]
public DateTime? ProfileModifiedOn
{
	get { return this.GetPropertyValue<DateTime?>("adx_profilemodifiedon"); }
	set { this.SetPropertyValue<DateTime?>("adx_profilemodifiedon", value, "ProfileModifiedOn"); }
}
///<summary>
///<para>Logical Name: adx_publicprofilecopy</para>
///<para>Max Length: 64000 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_publicprofilecopy")]
public string PublicProfileCopy
{
	get { return this.GetPropertyValue<string>("adx_publicprofilecopy"); }
	set { this.SetPropertyValue("adx_publicprofilecopy", value, 64000, "PublicProfileCopy"); }
}
///<summary>
///<para>Logical Name: overriddencreatedon</para>
///</summary>
[AttributeLogicalNameAttribute("overriddencreatedon")]
public DateTime? RecordCreatedOn
{
	get { return this.GetPropertyValue<DateTime?>("overriddencreatedon"); }
	set { this.SetPropertyValue<DateTime?>("overriddencreatedon", value, "RecordCreatedOn"); }
}
/// <summary>
///Logical Name: customertypecode
/// </summary>
[AttributeLogicalNameAttribute("customertypecode")]
public eRelationshipType? RelationshipType
{
	get
	{
		if (RelationshipType_OptionSetValue != null) { return (eRelationshipType)RelationshipType_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.RelationshipType_OptionSetValue = new OptionSetValue((int)value); }
		else this.RelationshipType_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: customertypecode</para>
///</summary>
[AttributeLogicalNameAttribute("customertypecode")]
public OptionSetValue RelationshipType_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("customertypecode"); }
	set { this.SetPropertyValue<OptionSetValue>("customertypecode", value, "RelationshipType_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string RelationshipType_Text(IOrganizationService Service)
{
	return this.RelationshipType_OptionSetValue.GetOptionSetText(Service, this, "customertypecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string RelationshipType_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.RelationshipType_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: msdyncrm_rememberme</para>
///<para>True = Allow</para>
///<para>False = Do not allow</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_rememberme")]
public bool? RememberMe
{
	get { return this.GetPropertyValue<bool?>("msdyncrm_rememberme"); }
	set { this.SetPropertyValue<bool?>("msdyncrm_rememberme", value, "RememberMe"); }
}
/// <summary>
///Logical Name: accountrolecode
/// </summary>
[AttributeLogicalNameAttribute("accountrolecode")]
public eRole? Role
{
	get
	{
		if (Role_OptionSetValue != null) { return (eRole)Role_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Role_OptionSetValue = new OptionSetValue((int)value); }
		else this.Role_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: accountrolecode</para>
///</summary>
[AttributeLogicalNameAttribute("accountrolecode")]
public OptionSetValue Role_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("accountrolecode"); }
	set { this.SetPropertyValue<OptionSetValue>("accountrolecode", value, "Role_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Role_Text(IOrganizationService Service)
{
	return this.Role_OptionSetValue.GetOptionSetText(Service, this, "accountrolecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Role_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Role_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: salutation</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("salutation")]
public string Salutation
{
	get { return this.GetPropertyValue<string>("salutation"); }
	set { this.SetPropertyValue("salutation", value, 100, "Salutation"); }
}
/// <summary>
///Logical Name: oer_salutation
/// </summary>
[AttributeLogicalNameAttribute("oer_salutation")]
public eSalutation? Salutation2
{
	get
	{
		if (Salutation2_OptionSetValue != null) { return (eSalutation)Salutation2_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Salutation2_OptionSetValue = new OptionSetValue((int)value); }
		else this.Salutation2_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: oer_salutation</para>
///</summary>
[AttributeLogicalNameAttribute("oer_salutation")]
public OptionSetValue Salutation2_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("oer_salutation"); }
	set { this.SetPropertyValue<OptionSetValue>("oer_salutation", value, "Salutation2_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Salutation2_Text(IOrganizationService Service)
{
	return this.Salutation2_OptionSetValue.GetOptionSetText(Service, this, "oer_salutation");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Salutation2_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Salutation2_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: adx_identity_securitystamp</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_securitystamp")]
public string SecurityStamp
{
	get { return this.GetPropertyValue<string>("adx_identity_securitystamp"); }
	set { this.SetPropertyValue("adx_identity_securitystamp", value, 100, "SecurityStamp"); }
}
///<summary>
///<para>Logical Name: msdyncrm_segmentmemberid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_segmentmemberid")]
public EntityReference SegmentMember
{
	get { return this.GetPropertyValue<EntityReference>("msdyncrm_segmentmemberid"); }
	set { this.SetPropertyValue<EntityReference>("msdyncrm_segmentmemberid", value, "SegmentMember"); }
}
///<summary>
///<para>Logical Name: donotsendmm</para>
///<para>True = Do Not Send</para>
///<para>False = Send</para>
///</summary>
[AttributeLogicalNameAttribute("donotsendmm")]
public bool? SendMarketingMaterials
{
	get { return this.GetPropertyValue<bool?>("donotsendmm"); }
	set { this.SetPropertyValue<bool?>("donotsendmm", value, "SendMarketingMaterials"); }
}
/// <summary>
///Logical Name: shippingmethodcode
/// </summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public eShippingMethod? ShippingMethod
{
	get
	{
		if (ShippingMethod_OptionSetValue != null) { return (eShippingMethod)ShippingMethod_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.ShippingMethod_OptionSetValue = new OptionSetValue((int)value); }
		else this.ShippingMethod_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: shippingmethodcode</para>
///</summary>
[AttributeLogicalNameAttribute("shippingmethodcode")]
public OptionSetValue ShippingMethod_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("shippingmethodcode"); }
	set { this.SetPropertyValue<OptionSetValue>("shippingmethodcode", value, "ShippingMethod_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string ShippingMethod_Text(IOrganizationService Service)
{
	return this.ShippingMethod_OptionSetValue.GetOptionSetText(Service, this, "shippingmethodcode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string ShippingMethod_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.ShippingMethod_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: slaid</para>
///</summary>
[AttributeLogicalNameAttribute("slaid")]
public EntityReference SLA
{
	get { return this.GetPropertyValue<EntityReference>("slaid"); }
	set { this.SetPropertyValue<EntityReference>("slaid", value, "SLA"); }
}
///<summary>
///<para>Logical Name: pk_dontsms</para>
///<para>True = Do Not Allow</para>
///<para>False = Allow</para>
///</summary>
[AttributeLogicalNameAttribute("pk_dontsms")]
public bool? SMSMarketing
{
	get { return this.GetPropertyValue<bool?>("pk_dontsms"); }
	set { this.SetPropertyValue<bool?>("pk_dontsms", value, "SMSMarketing"); }
}
///<summary>
///<para>Logical Name: msdyncrm_customerjourneyid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_customerjourneyid")]
public EntityReference SourceCustomerJourney
{
	get { return this.GetPropertyValue<EntityReference>("msdyncrm_customerjourneyid"); }
	set { this.SetPropertyValue<EntityReference>("msdyncrm_customerjourneyid", value, "SourceCustomerJourney"); }
}
///<summary>
///<para>Logical Name: msdyncrm_emailid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_emailid")]
public EntityReference SourceEmail
{
	get { return this.GetPropertyValue<EntityReference>("msdyncrm_emailid"); }
	set { this.SetPropertyValue<EntityReference>("msdyncrm_emailid", value, "SourceEmail"); }
}
///<summary>
///<para>Logical Name: msdyncrm_marketingformid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_marketingformid")]
public EntityReference SourceForm
{
	get { return this.GetPropertyValue<EntityReference>("msdyncrm_marketingformid"); }
	set { this.SetPropertyValue<EntityReference>("msdyncrm_marketingformid", value, "SourceForm"); }
}
///<summary>
///<para>Logical Name: msdyncrm_marketingpageid</para>
///</summary>
[AttributeLogicalNameAttribute("msdyncrm_marketingpageid")]
public EntityReference SourceLandingPage
{
	get { return this.GetPropertyValue<EntityReference>("msdyncrm_marketingpageid"); }
	set { this.SetPropertyValue<EntityReference>("msdyncrm_marketingpageid", value, "SourceLandingPage"); }
}
///<summary>
///<para>Logical Name: spousesname</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("spousesname")]
public string Spouse_PartnerName
{
	get { return this.GetPropertyValue<string>("spousesname"); }
	set { this.SetPropertyValue("spousesname", value, 100, "Spouse_PartnerName"); }
}
/// <summary>
///Logical Name: statecode
/// </summary>
[AttributeLogicalNameAttribute("statecode")]
public eStatus? Status
{
	get
	{
		if (Status_OptionSetValue != null) { return (eStatus)Status_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Status_OptionSetValue = new OptionSetValue((int)value); }
		else this.Status_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statecode</para>
///</summary>
[AttributeLogicalNameAttribute("statecode")]
public OptionSetValue Status_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statecode"); }
	set { this.SetPropertyValue<OptionSetValue>("statecode", value, "Status_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Status_Text(IOrganizationService Service)
{
	return this.Status_OptionSetValue.GetOptionSetText(Service, this, "statecode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Status_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Status_OptionSetValue.Value);
}
/// <summary>
///Logical Name: statuscode
/// </summary>
[AttributeLogicalNameAttribute("statuscode")]
public eStatusReason? StatusReason
{
	get
	{
		if (StatusReason_OptionSetValue != null) { return (eStatusReason)StatusReason_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.StatusReason_OptionSetValue = new OptionSetValue((int)value); }
		else this.StatusReason_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: statuscode</para>
///</summary>
[AttributeLogicalNameAttribute("statuscode")]
public OptionSetValue StatusReason_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("statuscode"); }
	set { this.SetPropertyValue<OptionSetValue>("statuscode", value, "StatusReason_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string StatusReason_Text(IOrganizationService Service)
{
	return this.StatusReason_OptionSetValue.GetOptionSetText(Service, this, "statuscode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string StatusReason_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.StatusReason_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: subscriptionid</para>
///</summary>
[AttributeLogicalNameAttribute("subscriptionid")]
public Guid Subscription
{
	get { return this.GetPropertyValue<Guid>("subscriptionid"); }
	set { this.SetPropertyValue<Guid>("subscriptionid", value, "Subscription"); }
}
///<summary>
///<para>Logical Name: suffix</para>
///<para>Max Length: 10 characters</para>
///</summary>
[AttributeLogicalNameAttribute("suffix")]
public string Suffix
{
	get { return this.GetPropertyValue<string>("suffix"); }
	set { this.SetPropertyValue("suffix", value, 10, "Suffix"); }
}
///<summary>
///<para>Logical Name: teamsfollowed</para>
///<para>Minimum Value: -2147483648</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("teamsfollowed")]
public int? TeamsFollowed
{
	get { return this.GetPropertyValue<int?>("teamsfollowed"); }
	set { this.SetPropertyValue("teamsfollowed", (int?)value, (int)-2147483648, (int)2147483647, "TeamsFollowed"); }
}
///<summary>
///<para>Logical Name: telephone3</para>
///<para>Max Length: 50 characters</para>
///</summary>
[AttributeLogicalNameAttribute("telephone3")]
public string Telephone3
{
	get { return this.GetPropertyValue<string>("telephone3"); }
	set { this.SetPropertyValue("telephone3", value, 50, "Telephone3"); }
}
/// <summary>
///Logical Name: territorycode
/// </summary>
[AttributeLogicalNameAttribute("territorycode")]
public eTerritory? Territory
{
	get
	{
		if (Territory_OptionSetValue != null) { return (eTerritory)Territory_OptionSetValue.Value; }
		return null;
	}
	set
	{
		if (value != null) { this.Territory_OptionSetValue = new OptionSetValue((int)value); }
		else this.Territory_OptionSetValue = null;
	}
}
///<summary>
///<para>Logical Name: territorycode</para>
///</summary>
[AttributeLogicalNameAttribute("territorycode")]
public OptionSetValue Territory_OptionSetValue
{
	get { return this.GetPropertyValue<OptionSetValue>("territorycode"); }
	set { this.SetPropertyValue<OptionSetValue>("territorycode", value, "Territory_OptionSetValue"); }
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="Service">CRM Organization Service</param>
/// <returns></returns>
public string Territory_Text(IOrganizationService Service)
{
	return this.Territory_OptionSetValue.GetOptionSetText(Service, this, "territorycode");
}
/// <summary>
/// Retrieves the current value's text in the user's language.
/// </summary>
/// <param name="AttributeMetadata">The attribute metadata previously retrieved using the 'GetAttributeMetadata' extension method on the IOrganizationService object.</param>
/// <returns></returns>
public string Territory_Text(EnumAttributeMetadata AttributeMetadata)
{
	return AttributeMetadata.GetOptionSetText(this.Territory_OptionSetValue.Value);
}
///<summary>
///<para>Logical Name: timespentbymeonemailandmeetings</para>
///<para>Max Length: 1250 characters</para>
///</summary>
[AttributeLogicalNameAttribute("timespentbymeonemailandmeetings")]
public string TimeSpentByMe
{
	get { return this.GetPropertyValue<string>("timespentbymeonemailandmeetings"); }
}
///<summary>
///<para>Logical Name: adx_timezone</para>
///<para>Minimum Value: -1500</para>
///<para>Maximum Value: 1500</para>
///</summary>
[AttributeLogicalNameAttribute("adx_timezone")]
public int? TimeZone
{
	get { return this.GetPropertyValue<int?>("adx_timezone"); }
	set { this.SetPropertyValue("adx_timezone", (int?)value, (int)-1500, (int)1500, "TimeZone"); }
}
///<summary>
///<para>Logical Name: timezoneruleversionnumber</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("timezoneruleversionnumber")]
public int? TimeZoneRuleVersionNumber
{
	get { return this.GetPropertyValue<int?>("timezoneruleversionnumber"); }
	set { this.SetPropertyValue("timezoneruleversionnumber", (int?)value, (int)-1, (int)2147483647, "TimeZoneRuleVersionNumber"); }
}
///<summary>
///<para>Logical Name: adx_identity_twofactorenabled</para>
///<para>True = Yes</para>
///<para>False = No</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_twofactorenabled")]
public bool? TwoFactorEnabled
{
	get { return this.GetPropertyValue<bool?>("adx_identity_twofactorenabled"); }
	set { this.SetPropertyValue<bool?>("adx_identity_twofactorenabled", value, "TwoFactorEnabled"); }
}
///<summary>
///<para>Logical Name: adx_identity_username</para>
///<para>Max Length: 100 characters</para>
///</summary>
[AttributeLogicalNameAttribute("adx_identity_username")]
public string UserName
{
	get { return this.GetPropertyValue<string>("adx_identity_username"); }
	set { this.SetPropertyValue("adx_identity_username", value, 100, "UserName"); }
}
///<summary>
///<para>Logical Name: utcconversiontimezonecode</para>
///<para>Minimum Value: -1</para>
///<para>Maximum Value: 2147483647</para>
///</summary>
[AttributeLogicalNameAttribute("utcconversiontimezonecode")]
public int? UTCConversionTimeZoneCode
{
	get { return this.GetPropertyValue<int?>("utcconversiontimezonecode"); }
	set { this.SetPropertyValue("utcconversiontimezonecode", (int?)value, (int)-1, (int)2147483647, "UTCConversionTimeZoneCode"); }
}
///<summary>
///<para>Logical Name: versionnumber</para>
///</summary>
[AttributeLogicalNameAttribute("versionnumber")]
public int? VersionNumber
{
	get { return this.GetPropertyValue<int?>("versionnumber"); }
}
///<summary>
///<para>Logical Name: websiteurl</para>
///<para>Max Length: 200 characters</para>
///</summary>
[AttributeLogicalNameAttribute("websiteurl")]
public string Website
{
	get { return this.GetPropertyValue<string>("websiteurl"); }
	set { this.SetPropertyValue("websiteurl", value, 200, "Website"); }
}
///<summary>
///<para>Logical Name: yomifirstname</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomifirstname")]
public string YomiFirstName
{
	get { return this.GetPropertyValue<string>("yomifirstname"); }
	set { this.SetPropertyValue("yomifirstname", value, 150, "YomiFirstName"); }
}
///<summary>
///<para>Logical Name: yomifullname</para>
///<para>Max Length: 450 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomifullname")]
public string YomiFullName
{
	get { return this.GetPropertyValue<string>("yomifullname"); }
}
///<summary>
///<para>Logical Name: yomilastname</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomilastname")]
public string YomiLastName
{
	get { return this.GetPropertyValue<string>("yomilastname"); }
	set { this.SetPropertyValue("yomilastname", value, 150, "YomiLastName"); }
}
///<summary>
///<para>Logical Name: yomimiddlename</para>
///<para>Max Length: 150 characters</para>
///</summary>
[AttributeLogicalNameAttribute("yomimiddlename")]
public string YomiMiddleName
{
	get { return this.GetPropertyValue<string>("yomimiddlename"); }
	set { this.SetPropertyValue("yomimiddlename", value, 150, "YomiMiddleName"); }
}


        /// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_primary_contact</para>
/// </summary>
public List<Entity> GetAccounts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "account", "primarycontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: account_primary_contact</para>
/// </summary>
public List<Entity> GetAccounts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "account", "primarycontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_actioncard</para>
/// </summary>
public List<Entity> GetActionCards (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_actioncard</para>
/// </summary>
public List<Entity> GetActionCards (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "actioncard", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_activity_parties</para>
/// </summary>
public List<Entity> GetActivityParties (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_activity_parties</para>
/// </summary>
public List<Entity> GetActivityParties (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activityparty", "partyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ActivityPointers</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ActivityPointers</para>
/// </summary>
public List<Entity> GetActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "activitypointer", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_adx_alertsubscriptions</para>
/// </summary>
public List<Entity> GetAlertSubscriptions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_alertsubscription", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_adx_alertsubscriptions</para>
/// </summary>
public List<Entity> GetAlertSubscriptions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_alertsubscription", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_badge</para>
/// </summary>
public List<Entity> GetBadges (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_badge", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_badge</para>
/// </summary>
public List<Entity> GetBadges (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_badge", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_blogpost</para>
/// </summary>
public List<Entity> GetBlogPosts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_blogpost", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_blogpost</para>
/// </summary>
public List<Entity> GetBlogPosts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_blogpost", "adx_authorid", Columns); }
/// <summary>
/// <para>contact</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: bpf_contact_adx_bpf_c2857b638fa7473d8e2f112c232cebd8</para>
/// </summary>
public List<Entity> Getcontact (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_bpf_c2857b638fa7473d8e2f112c232cebd8", "bpf_contactid", Columns); }
/// <summary>
/// <para>contact</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: bpf_contact_adx_bpf_c2857b638fa7473d8e2f112c232cebd8</para>
/// </summary>
public List<Entity> Getcontact (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_bpf_c2857b638fa7473d8e2f112c232cebd8", "bpf_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_adx_casedeflection_Contact</para>
/// </summary>
public List<Entity> GetCaseDeflections (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_casedeflection", "adx_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_adx_casedeflection_Contact</para>
/// </summary>
public List<Entity> GetCaseDeflections (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_casedeflection", "adx_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_communityforumalert</para>
/// </summary>
public List<Entity> GetForumAlerts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_communityforumalert", "adx_subscriberid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_communityforumalert</para>
/// </summary>
public List<Entity> GetForumAlerts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_communityforumalert", "adx_subscriberid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_communityforumannouncement</para>
/// </summary>
public List<Entity> GetForumAnnouncements (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_communityforumannouncement", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_communityforumannouncement</para>
/// </summary>
public List<Entity> GetForumAnnouncements (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_communityforumannouncement", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_communityforumpost</para>
/// </summary>
public List<Entity> GetForumPosts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_communityforumpost", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_communityforumpost</para>
/// </summary>
public List<Entity> GetForumPosts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_communityforumpost", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_externalidentity</para>
/// </summary>
public List<Entity> GetExternalIdentities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_externalidentity", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_externalidentity</para>
/// </summary>
public List<Entity> GetExternalIdentities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_externalidentity", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_forumnotification</para>
/// </summary>
public List<Entity> GetForumNotifications (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_forumnotification", "adx_recipient", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_forumnotification</para>
/// </summary>
public List<Entity> GetForumNotifications (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_forumnotification", "adx_recipient", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_idea</para>
/// </summary>
public List<Entity> GetIdeas (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_idea", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_idea</para>
/// </summary>
public List<Entity> GetIdeas (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_idea", "adx_authorid", Columns); }
/// <summary>
/// <para>Ideas (Status Author)</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_idea_statusauthor</para>
/// </summary>
public List<Entity> GetIdeas_StatusAuthor (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_idea", "adx_statusauthorid", Columns); }
/// <summary>
/// <para>Ideas (Status Author)</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_idea_statusauthor</para>
/// </summary>
public List<Entity> GetIdeas_StatusAuthor (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_idea", "adx_statusauthorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_invitation_invitecontact</para>
/// </summary>
public List<Entity> GetInvitations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_invitation", "adx_invitecontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_invitation_invitecontact</para>
/// </summary>
public List<Entity> GetInvitations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_invitation", "adx_invitecontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_invitation_invitercontact</para>
/// </summary>
public List<Entity> GetInvitations2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_invitation", "adx_invitercontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_invitation_invitercontact</para>
/// </summary>
public List<Entity> GetInvitations2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_invitation", "adx_invitercontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_invitation_redeemedContact</para>
/// </summary>
public List<Entity> GetInvitations3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_invitation", "adx_redeemedcontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_invitation_redeemedContact</para>
/// </summary>
public List<Entity> GetInvitations3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_invitation", "adx_redeemedcontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_adx_inviteredemptions</para>
/// </summary>
public List<Entity> GetInviteRedemptions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_inviteredemption", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_adx_inviteredemptions</para>
/// </summary>
public List<Entity> GetInviteRedemptions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_inviteredemption", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_subscribercontact_pagealert</para>
/// </summary>
public List<Entity> GetPageAlerts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_pagealert", "adx_subscriberid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_subscribercontact_pagealert</para>
/// </summary>
public List<Entity> GetPageAlerts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_pagealert", "adx_subscriberid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_pagenotification</para>
/// </summary>
public List<Entity> GetPageNotifications (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_pagenotification", "adx_recipient", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_pagenotification</para>
/// </summary>
public List<Entity> GetPageNotifications (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_pagenotification", "adx_recipient", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_pollsubmission</para>
/// </summary>
public List<Entity> GetPollSubmissions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_pollsubmission", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_pollsubmission</para>
/// </summary>
public List<Entity> GetPollSubmissions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_pollsubmission", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_adx_portalcomments</para>
/// </summary>
public List<Entity> GetPortalComments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_portalcomment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_adx_portalcomments</para>
/// </summary>
public List<Entity> GetPortalComments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_portalcomment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_webfilelog</para>
/// </summary>
public List<Entity> GetWebFileLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webfilelog", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_webfilelog</para>
/// </summary>
public List<Entity> GetWebFileLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webfilelog", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_webformsession_contact</para>
/// </summary>
public List<Entity> GetWebFormSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webformsession", "adx_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_webformsession_contact</para>
/// </summary>
public List<Entity> GetWebFormSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webformsession", "adx_contact", Columns); }
/// <summary>
/// <para>Authored Pages</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_webpage</para>
/// </summary>
public List<Entity> GetAuthoredPages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webpage", "adx_authorid", Columns); }
/// <summary>
/// <para>Authored Pages</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_webpage</para>
/// </summary>
public List<Entity> GetAuthoredPages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webpage", "adx_authorid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_changedcontact_webpagehistory</para>
/// </summary>
public List<Entity> GetWebPageHistory (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webpagehistory", "adx_changedbyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_changedcontact_webpagehistory</para>
/// </summary>
public List<Entity> GetWebPageHistory (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webpagehistory", "adx_changedbyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_webpagelog</para>
/// </summary>
public List<Entity> GetWebPageLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webpagelog", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: adx_contact_webpagelog</para>
/// </summary>
public List<Entity> GetWebPageLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "adx_webpagelog", "adx_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Annotation</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Annotation</para>
/// </summary>
public List<Entity> GetNotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "annotation", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Appointments</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Appointments</para>
/// </summary>
public List<Entity> GetAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "appointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_AsyncOperations</para>
/// </summary>
public List<Entity> GetSystemJobs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "asyncoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_bookableresource_ContactId</para>
/// </summary>
public List<Entity> GetBookableResources (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresource", "contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_bookableresource_ContactId</para>
/// </summary>
public List<Entity> GetBookableResources (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bookableresource", "contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_BulkDeleteFailures</para>
/// </summary>
public List<Entity> GetBulkDeleteFailures (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkdeletefailure", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_BulkOperations</para>
/// </summary>
public List<Entity> GetQuickCampaigns (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_BulkOperations</para>
/// </summary>
public List<Entity> GetQuickCampaigns (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperation", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: CreatedContact_BulkOperationLogs</para>
/// </summary>
public List<Entity> GetBulkOperationLogs (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: CreatedContact_BulkOperationLogs</para>
/// </summary>
public List<Entity> GetBulkOperationLogs (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "createdobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SourceContact_BulkOperationLogs</para>
/// </summary>
public List<Entity> GetBulkOperationLogs2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: SourceContact_BulkOperationLogs</para>
/// </summary>
public List<Entity> GetBulkOperationLogs2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "bulkoperationlog", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_CampaignResponses</para>
/// </summary>
public List<Entity> GetCampaignResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_CampaignResponses</para>
/// </summary>
public List<Entity> GetCampaignResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "campaignresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_connections1</para>
/// </summary>
public List<Entity> GetConnections (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_connections1</para>
/// </summary>
public List<Entity> GetConnections (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record1id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_connections2</para>
/// </summary>
public List<Entity> GetConnections2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_connections2</para>
/// </summary>
public List<Entity> GetConnections2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "connection", "record2id", Columns); }
/// <summary>
/// <para><b>Contact (Account Name)</b></para>
/// <para>Schema Name: contact_customer_contacts</para>
/// </summary>
public List<Contact> GetContacts_AccountName (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "parentcustomerid", Columns); }
/// <summary>
/// <para><b>Contact (Account Name)</b></para>
/// <para>Schema Name: contact_customer_contacts</para>
/// </summary>
public List<Contact> GetContacts_AccountName (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "parentcustomerid", Columns); }
/// <summary>
/// <para><b>Contact (Master ID)</b></para>
/// <para>Schema Name: contact_master_contact</para>
/// </summary>
public List<Contact> GetContacts_MasterID (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "masterid", Columns); }
/// <summary>
/// <para><b>Contact (Master ID)</b></para>
/// <para>Schema Name: contact_master_contact</para>
/// </summary>
public List<Contact> GetContacts_MasterID (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "masterid", Columns); }
/// <summary>
/// <para><b>Contact (Parent or custodian)</b></para>
/// <para>Schema Name: msgdpr_contact_msgdpr_gdprparent</para>
/// </summary>
public List<Contact> GetContacts_ParentOrCustodian (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "msgdpr_gdprparentid", Columns); }
/// <summary>
/// <para><b>Contact (Parent or custodian)</b></para>
/// <para>Schema Name: msgdpr_contact_msgdpr_gdprparent</para>
/// </summary>
public List<Contact> GetContacts_ParentOrCustodian (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<Contact>(Service, this.Id, "contact", "msgdpr_gdprparentid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_billingcustomer_contacts</para>
/// </summary>
public List<Entity> GetContracts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "billingcustomerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_billingcustomer_contacts</para>
/// </summary>
public List<Entity> GetContracts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "billingcustomerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_customer_contacts</para>
/// </summary>
public List<Entity> GetContracts2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contract_customer_contacts</para>
/// </summary>
public List<Entity> GetContracts2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contract", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contractlineitem_customer_contacts</para>
/// </summary>
public List<Entity> GetContractLines (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contractlineitem_customer_contacts</para>
/// </summary>
public List<Entity> GetContractLines (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "contractdetail", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_CustomerAddress</para>
/// </summary>
public List<Entity> GetAddresses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeraddress", "parentid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_CustomerAddress</para>
/// </summary>
public List<Entity> GetAddresses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeraddress", "parentid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_customer_opportunity_roles</para>
/// </summary>
public List<Entity> GetOpportunityRelationships (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeropportunityrole", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_customer_opportunity_roles</para>
/// </summary>
public List<Entity> GetOpportunityRelationships (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customeropportunityrole", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_customer_relationship_customer</para>
/// </summary>
public List<Entity> GetCustomerRelationships (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_customer_relationship_customer</para>
/// </summary>
public List<Entity> GetCustomerRelationships (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_customer_relationship_partner</para>
/// </summary>
public List<Entity> GetCustomerRelationships2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "partnerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_customer_relationship_partner</para>
/// </summary>
public List<Entity> GetCustomerRelationships2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "customerrelationship", "partnerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_DuplicateBaseRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "baserecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_DuplicateMatchingRecord</para>
/// </summary>
public List<Entity> GetDuplicateRecords2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "duplicaterecord", "duplicaterecordid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Email_EmailSender</para>
/// </summary>
public List<Entity> GetEmailMessages (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "emailsender", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Email_EmailSender</para>
/// </summary>
public List<Entity> GetEmailMessages (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "emailsender", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Emails</para>
/// </summary>
public List<Entity> GetEmailMessages2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Emails</para>
/// </summary>
public List<Entity> GetEmailMessages2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "email", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_entitlement_ContactId</para>
/// </summary>
public List<Entity> GetEntitlements (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_entitlement_ContactId</para>
/// </summary>
public List<Entity> GetEntitlements (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_entitlement_Customer</para>
/// </summary>
public List<Entity> GetEntitlements2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_entitlement_Customer</para>
/// </summary>
public List<Entity> GetEntitlements2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "entitlement", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ExternalPartyItems</para>
/// </summary>
public List<Entity> GetExternalPartyItems (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "externalpartyitem", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ExternalPartyItems</para>
/// </summary>
public List<Entity> GetExternalPartyItems (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "externalpartyitem", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Faxes</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Faxes</para>
/// </summary>
public List<Entity> GetFaxes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fax", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Feedback</para>
/// </summary>
public List<Entity> GetFeedback (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "feedback", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Feedback</para>
/// </summary>
public List<Entity> GetFeedback (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "feedback", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lk_contact_feedback_createdby</para>
/// </summary>
public List<Entity> GetFeedback2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "feedback", "createdbycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lk_contact_feedback_createdby</para>
/// </summary>
public List<Entity> GetFeedback2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "feedback", "createdbycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lk_contact_feedback_createdonbehalfby</para>
/// </summary>
public List<Entity> GetFeedback3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "feedback", "createdonbehalfbycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lk_contact_feedback_createdonbehalfby</para>
/// </summary>
public List<Entity> GetFeedback3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "feedback", "createdonbehalfbycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_FileAttachment</para>
/// </summary>
public List<Entity> GetFileAttachments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fileattachment", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_FileAttachment</para>
/// </summary>
public List<Entity> GetFileAttachments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "fileattachment", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_as_primary_contact</para>
/// </summary>
public List<Entity> GetCases (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "primarycontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_as_primary_contact</para>
/// </summary>
public List<Entity> GetCases (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "primarycontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_as_responsible_contact</para>
/// </summary>
public List<Entity> GetCases2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "responsiblecontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_as_responsible_contact</para>
/// </summary>
public List<Entity> GetCases2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "responsiblecontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: incident_customer_contacts</para>
/// </summary>
public List<Entity> GetCases3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: incident_customer_contacts</para>
/// </summary>
public List<Entity> GetCases3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "customerid", Columns); }
/// <summary>
/// <para>Partner Cases</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msa_contact_incident</para>
/// </summary>
public List<Entity> GetPartnerCases (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "msa_partnercontactid", Columns); }
/// <summary>
/// <para>Partner Cases</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msa_contact_incident</para>
/// </summary>
public List<Entity> GetPartnerCases (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "msa_partnercontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_incident_reportedbyid</para>
/// </summary>
public List<Entity> GetCases4 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "oer_reportedbyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_incident_reportedbyid</para>
/// </summary>
public List<Entity> GetCases4 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "oer_reportedbyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_incident_responsiblepersonid</para>
/// </summary>
public List<Entity> GetCases5 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "oer_responsiblepersonid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_incident_responsiblepersonid</para>
/// </summary>
public List<Entity> GetCases5 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "incident", "oer_responsiblepersonid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoice_customer_contacts</para>
/// </summary>
public List<Entity> GetInvoices (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoice", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: invoice_customer_contacts</para>
/// </summary>
public List<Entity> GetInvoices (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "invoice", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_customer_contacts</para>
/// </summary>
public List<Entity> GetLeads (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_customer_contacts</para>
/// </summary>
public List<Entity> GetLeads (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_parent_contact</para>
/// </summary>
public List<Entity> GetLeads2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "parentcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: lead_parent_contact</para>
/// </summary>
public List<Entity> GetLeads2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "lead", "parentcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Letters</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Letters</para>
/// </summary>
public List<Entity> GetLetters (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "letter", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_MailboxTrackingFolder</para>
/// </summary>
public List<Entity> GetMailboxAutoTrackingFolders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_MailboxTrackingFolder</para>
/// </summary>
public List<Entity> GetMailboxAutoTrackingFolders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "mailboxtrackingfolder", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_actual_ContactCustomer</para>
/// </summary>
public List<Entity> GetActuals (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_actual_ContactCustomer</para>
/// </summary>
public List<Entity> GetActuals (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_actual_ContactVendor</para>
/// </summary>
public List<Entity> GetActuals2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_actual_ContactVendor</para>
/// </summary>
public List<Entity> GetActuals2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_actual", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msdyn_approvals</para>
/// </summary>
public List<Entity> GetApprovals (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msdyn_approvals</para>
/// </summary>
public List<Entity> GetApprovals (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_approval", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msdyn_bookingalerts</para>
/// </summary>
public List<Entity> GetBookingAlerts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msdyn_bookingalerts</para>
/// </summary>
public List<Entity> GetBookingAlerts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_bookingalert", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_contactpricelist_Contact</para>
/// </summary>
public List<Entity> GetContactPriceLists (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_contactpricelist", "msdyn_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_contactpricelist_Contact</para>
/// </summary>
public List<Entity> GetContactPriceLists (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_contactpricelist", "msdyn_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_estimateline_ContactCustomer</para>
/// </summary>
public List<Entity> GetEstimateLines (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_estimateline", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_estimateline_ContactCustomer</para>
/// </summary>
public List<Entity> GetEstimateLines (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_estimateline", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_estimateline_ContactVendor</para>
/// </summary>
public List<Entity> GetEstimateLines2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_estimateline", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_estimateline_ContactVendor</para>
/// </summary>
public List<Entity> GetEstimateLines2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_estimateline", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_fact_ContactCustomer</para>
/// </summary>
public List<Entity> GetFacts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fact", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_fact_ContactCustomer</para>
/// </summary>
public List<Entity> GetFacts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fact", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_fact_ContactVendor</para>
/// </summary>
public List<Entity> GetFacts2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fact", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_fact_ContactVendor</para>
/// </summary>
public List<Entity> GetFacts2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_fact", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_invoicelinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetInvoiceLineDetails (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_invoicelinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetInvoiceLineDetails (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_invoicelinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetInvoiceLineDetails2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_invoicelinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetInvoiceLineDetails2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_invoicelinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_journalline_ContactCustomer</para>
/// </summary>
public List<Entity> GetJournalLines (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_journalline", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_journalline_ContactCustomer</para>
/// </summary>
public List<Entity> GetJournalLines (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_journalline", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_journalline_ContactVendor</para>
/// </summary>
public List<Entity> GetJournalLines2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_journalline", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_journalline_ContactVendor</para>
/// </summary>
public List<Entity> GetJournalLines2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_journalline", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_opportunitylinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetOpportunityLineDetails (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_opportunitylinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetOpportunityLineDetails (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_opportunitylinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetOpportunityLineDetails2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_opportunitylinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetOpportunityLineDetails2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_opportunitylinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_orderlinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetProjectContractLineDetails (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_orderlinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetProjectContractLineDetails (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_orderlinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetProjectContractLineDetails2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_orderlinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetProjectContractLineDetails2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_orderlinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_playbookinstance_contact</para>
/// </summary>
public List<Entity> GetPlaybooks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_playbookinstance_contact</para>
/// </summary>
public List<Entity> GetPlaybooks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_playbookinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_quotelinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetQuoteLineDetail (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_quotelinetransaction_ContactCustomer</para>
/// </summary>
public List<Entity> GetQuoteLineDetail (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_contactcustomer", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_quotelinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetQuoteLineDetail2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_quotelinetransaction_ContactVendor</para>
/// </summary>
public List<Entity> GetQuoteLineDetail2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_quotelinetransaction", "msdyn_contactvendor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_responseoutcome_Contact</para>
/// </summary>
public List<Entity> GetResponseOutcomes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_responseoutcome", "msdyn_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_responseoutcome_Contact</para>
/// </summary>
public List<Entity> GetResponseOutcomes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_responseoutcome", "msdyn_contact", Columns); }
/// <summary>
/// <para>Billing Account</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_rma_RequestedByContact</para>
/// </summary>
public List<Entity> GetBillingAccount (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rma", "msdyn_requestedbycontact", Columns); }
/// <summary>
/// <para>Billing Account</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_rma_RequestedByContact</para>
/// </summary>
public List<Entity> GetBillingAccount (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rma", "msdyn_requestedbycontact", Columns); }
/// <summary>
/// <para>Vendor Contact</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_rtv_VendorContact</para>
/// </summary>
public List<Entity> GetVendorContact (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rtv", "msdyn_vendorcontact", Columns); }
/// <summary>
/// <para>Vendor Contact</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_rtv_VendorContact</para>
/// </summary>
public List<Entity> GetVendorContact (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_rtv", "msdyn_vendorcontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msdyn_surveyinvites</para>
/// </summary>
public List<Entity> GetSurveyActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_surveyinvite", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msdyn_surveyinvites</para>
/// </summary>
public List<Entity> GetSurveyActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_surveyinvite", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_surveyinvite_ContactId</para>
/// </summary>
public List<Entity> GetSurveyActivities2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_surveyinvite", "msdyn_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_surveyinvite_ContactId</para>
/// </summary>
public List<Entity> GetSurveyActivities2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_surveyinvite", "msdyn_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_surveyresponse_Contact</para>
/// </summary>
public List<Entity> GetSurveyResponses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_surveyresponse", "msdyn_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_surveyresponse_Contact</para>
/// </summary>
public List<Entity> GetSurveyResponses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_surveyresponse", "msdyn_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_workorder_ReportedByContact</para>
/// </summary>
public List<Entity> GetWorkOrders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_workorder", "msdyn_reportedbycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyn_contact_msdyn_workorder_ReportedByContact</para>
/// </summary>
public List<Entity> GetWorkOrders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyn_workorder", "msdyn_reportedbycontact", Columns); }
/// <summary>
/// <para><b>CustomChannelActivity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_customerjourneycustomchannelactivity_Contact</para>
/// </summary>
public List<CustomChannelActivity> GetCustomChannelActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomChannelActivity>(Service, this.Id, "msdyncrm_customerjourneycustomchannelactivity", "msdyncrm_contact", Columns); }
/// <summary>
/// <para><b>CustomChannelActivity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_customerjourneycustomchannelactivity_Contact</para>
/// </summary>
public List<CustomChannelActivity> GetCustomChannelActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<CustomChannelActivity>(Service, this.Id, "msdyncrm_customerjourneycustomchannelactivity", "msdyncrm_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_defaultmarketingsetting_DefaultTestContact</para>
/// </summary>
public List<Entity> GetDefaultMarketingSettings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_defaultmarketingsetting", "msdyncrm_defaulttestcontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_defaultmarketingsetting_DefaultTestContact</para>
/// </summary>
public List<Entity> GetDefaultMarketingSettings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_defaultmarketingsetting", "msdyncrm_defaulttestcontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_geopin</para>
/// </summary>
public List<Entity> GetGeoPins (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_geopin", "msdyncrm_contactgeopinsid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_geopin</para>
/// </summary>
public List<Entity> GetGeoPins (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_geopin", "msdyncrm_contactgeopinsid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_linkedinformsubmission_contact</para>
/// </summary>
public List<Entity> GetLinkedInLeadGenFormSubmissions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_linkedinformsubmission", "msdyncrm_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_linkedinformsubmission_contact</para>
/// </summary>
public List<Entity> GetLinkedInLeadGenFormSubmissions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_linkedinformsubmission", "msdyncrm_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_marketingemailtestsend_testcontactid</para>
/// </summary>
public List<Entity> GetMarketingEmailsTest_send (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_marketingemailtestsend", "msdyncrm_testcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msdyncrm_contact_msdyncrm_marketingemailtestsend_testcontactid</para>
/// </summary>
public List<Entity> GetMarketingEmailsTest_send (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msdyncrm_marketingemailtestsend", "msdyncrm_testcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_attendeepass_contact</para>
/// </summary>
public List<Entity> GetAttendeePasses (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_attendeepass", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_attendeepass_contact</para>
/// </summary>
public List<Entity> GetAttendeePasses (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_attendeepass", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_building_PrimaryContact</para>
/// </summary>
public List<Entity> GetBuildings (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_building", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_building_PrimaryContact</para>
/// </summary>
public List<Entity> GetBuildings (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_building", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_checkin_Contact</para>
/// </summary>
public List<Entity> GetCheck_ins (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_checkin", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_checkin_Contact</para>
/// </summary>
public List<Entity> GetCheck_ins (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_checkin", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventpurchase</para>
/// </summary>
public List<Entity> GetEventPurchases (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventpurchase", "msevtmgt_purchasingcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventpurchase</para>
/// </summary>
public List<Entity> GetEventPurchases (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventpurchase", "msevtmgt_purchasingcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventpurchaseattendee</para>
/// </summary>
public List<Entity> GetEventPurchaseAttendees (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventpurchaseattendee", "msevtmgt_attendeecontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventpurchaseattendee</para>
/// </summary>
public List<Entity> GetEventPurchaseAttendees (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventpurchaseattendee", "msevtmgt_attendeecontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventregistration_Contact</para>
/// </summary>
public List<Entity> GetEventRegistrations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventregistration", "msevtmgt_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventregistration_Contact</para>
/// </summary>
public List<Entity> GetEventRegistrations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventregistration", "msevtmgt_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventteammember_Contact</para>
/// </summary>
public List<Entity> GetEventTeamMembers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventteammember", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_eventteammember_Contact</para>
/// </summary>
public List<Entity> GetEventTeamMembers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_eventteammember", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_hotel_PrimaryContact</para>
/// </summary>
public List<Entity> GetHotels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_hotel", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_hotel_PrimaryContact</para>
/// </summary>
public List<Entity> GetHotels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_hotel", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_hotelroomallocation_PrimaryContact</para>
/// </summary>
public List<Entity> GetHotelRoomAllocations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_hotelroomallocation", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_hotelroomallocation_PrimaryContact</para>
/// </summary>
public List<Entity> GetHotelRoomAllocations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_hotelroomallocation", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_room_PrimaryContact</para>
/// </summary>
public List<Entity> GetRooms (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_room", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_room_PrimaryContact</para>
/// </summary>
public List<Entity> GetRooms (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_room", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_sessionregistration_contactid</para>
/// </summary>
public List<Entity> GetSessionRegistrations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_sessionregistration", "msevtmgt_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_sessionregistration_contactid</para>
/// </summary>
public List<Entity> GetSessionRegistrations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_sessionregistration", "msevtmgt_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_speaker_Contact</para>
/// </summary>
public List<Entity> GetSpeakers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_speaker", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_speaker_Contact</para>
/// </summary>
public List<Entity> GetSpeakers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_speaker", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_venue_PrimaryContact</para>
/// </summary>
public List<Entity> GetVenues (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_venue", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_msevtmgt_venue_PrimaryContact</para>
/// </summary>
public List<Entity> GetVenues (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_venue", "msevtmgt_primarycontact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_waitlistitem</para>
/// </summary>
public List<Entity> GetWaitlistItems (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_waitlistitem", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_waitlistitem</para>
/// </summary>
public List<Entity> GetWaitlistItems (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_waitlistitem", "msevtmgt_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_waitlistitem_addedby</para>
/// </summary>
public List<Entity> GetWaitlistItems2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_waitlistitem", "msevtmgt_addedby", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msevtmgt_contact_waitlistitem_addedby</para>
/// </summary>
public List<Entity> GetWaitlistItems2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msevtmgt_waitlistitem", "msevtmgt_addedby", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msfp_surveyinvites</para>
/// </summary>
public List<Entity> GetSurveyInvites (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyinvite", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msfp_surveyinvites</para>
/// </summary>
public List<Entity> GetSurveyInvites (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyinvite", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msfp_surveyresponses</para>
/// </summary>
public List<Entity> GetSurveyResponses2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_msfp_surveyresponses</para>
/// </summary>
public List<Entity> GetSurveyResponses2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msfp_surveyresponse", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msgdpr_contact_msgdpr_gdprconsentchangerecord</para>
/// </summary>
public List<Entity> GetGDPRConsentChangeRecords (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msgdpr_gdprconsentchangerecord", "msgdpr_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msgdpr_contact_msgdpr_gdprconsentchangerecord</para>
/// </summary>
public List<Entity> GetGDPRConsentChangeRecords (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "msgdpr_gdprconsentchangerecord", "msgdpr_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_oer_commercialtasks</para>
/// </summary>
public List<Entity> GetCommercialTasks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_commercialtask", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_oer_commercialtasks</para>
/// </summary>
public List<Entity> GetCommercialTasks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_commercialtask", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_oer_eventinvitation_contactid</para>
/// </summary>
public List<Entity> GetEventInvitations (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_eventinvitation", "oer_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_oer_eventinvitation_contactid</para>
/// </summary>
public List<Entity> GetEventInvitations (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_eventinvitation", "oer_contactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_oer_stagetransitions</para>
/// </summary>
public List<Entity> GetStageTransitions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_stagetransition", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_oer_stagetransitions</para>
/// </summary>
public List<Entity> GetStageTransitions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_stagetransition", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_oer_visitreports</para>
/// </summary>
public List<Entity> GetVisitReports (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_visitreport", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_oer_visitreports</para>
/// </summary>
public List<Entity> GetVisitReports (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_visitreport", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_oer_weeklyreport_reportedbyid</para>
/// </summary>
public List<Entity> GetWeeklyReports (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_weeklyreport", "oer_reportedbyid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_oer_weeklyreport_reportedbyid</para>
/// </summary>
public List<Entity> GetWeeklyReports (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "oer_weeklyreport", "oer_reportedbyid", Columns); }
/// <summary>
/// <para>Partner Opportunities</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msa_contact_opportunity</para>
/// </summary>
public List<Entity> GetPartnerOpportunities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "msa_partneroppid", Columns); }
/// <summary>
/// <para>Partner Opportunities</para>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: msa_contact_opportunity</para>
/// </summary>
public List<Entity> GetPartnerOpportunities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "msa_partneroppid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_customer_contacts</para>
/// </summary>
public List<Entity> GetOpportunities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_customer_contacts</para>
/// </summary>
public List<Entity> GetOpportunities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_parent_contact</para>
/// </summary>
public List<Entity> GetOpportunities2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "parentcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: opportunity_parent_contact</para>
/// </summary>
public List<Entity> GetOpportunities2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "opportunity", "parentcontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Phonecalls</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Phonecalls</para>
/// </summary>
public List<Entity> GetPhoneCalls (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "phonecall", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>TwilioSMSAction (Contact)</b></para>
/// <para>Schema Name: pk_contact_pk_smsaction_contact</para>
/// </summary>
public List<TwilioSMSAction> GetTwilioSMSActions_Contact (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TwilioSMSAction>(Service, this.Id, "pk_smsaction", "pk_contact", Columns); }
/// <summary>
/// <para><b>TwilioSMSAction (Contact)</b></para>
/// <para>Schema Name: pk_contact_pk_smsaction_contact</para>
/// </summary>
public List<TwilioSMSAction> GetTwilioSMSActions_Contact (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities<TwilioSMSAction>(Service, this.Id, "pk_smsaction", "pk_contact", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_PostFollows</para>
/// </summary>
public List<Entity> GetFollows (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_PostFollows</para>
/// </summary>
public List<Entity> GetFollows (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postfollow", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_PostRegardings</para>
/// </summary>
public List<Entity> GetPostRegarding (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_PostRegardings</para>
/// </summary>
public List<Entity> GetPostRegarding (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postregarding", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_PostRoles</para>
/// </summary>
public List<Entity> GetPostRoles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_PostRoles</para>
/// </summary>
public List<Entity> GetPostRoles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "postrole", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: contact_principalobjectattributeaccess</para>
/// </summary>
public List<Entity> GetFieldSharing (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "principalobjectattributeaccess", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ProcessSessions</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ProcessSessions</para>
/// </summary>
public List<Entity> GetProcessSessions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "processsession", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: quote_customer_contacts</para>
/// </summary>
public List<Entity> GetQuotes (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quote", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: quote_customer_contacts</para>
/// </summary>
public List<Entity> GetQuotes (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "quote", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_RecurringAppointmentMasters</para>
/// </summary>
public List<Entity> GetRecurringAppointments (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "recurringappointmentmaster", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_salesorder_Commercialorderprocessing</para>
/// </summary>
public List<Entity> GetOrders (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "oer_commercialorderprocessing", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_salesorder_Commercialorderprocessing</para>
/// </summary>
public List<Entity> GetOrders (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "oer_commercialorderprocessing", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_salesorder_Engineering</para>
/// </summary>
public List<Entity> GetOrders2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "oer_engineering", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_salesorder_Engineering</para>
/// </summary>
public List<Entity> GetOrders2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "oer_engineering", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: order_customer_contacts</para>
/// </summary>
public List<Entity> GetOrders3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: order_customer_contacts</para>
/// </summary>
public List<Entity> GetOrders3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "salesorder", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ServiceAppointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_ServiceAppointments</para>
/// </summary>
public List<Entity> GetServiceActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "serviceappointment", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: slakpiinstance_contact</para>
/// </summary>
public List<Entity> GetSLAKPIInstances (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: slakpiinstance_contact</para>
/// </summary>
public List<Entity> GetSLAKPIInstances (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "slakpiinstance", "regarding", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_SocialActivities</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_SocialActivities</para>
/// </summary>
public List<Entity> GetSocialActivities (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: socialactivity_postauthor_contacts</para>
/// </summary>
public List<Entity> GetSocialActivities2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: socialactivity_postauthor_contacts</para>
/// </summary>
public List<Entity> GetSocialActivities2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthor", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: socialactivity_postauthoraccount_contacts</para>
/// </summary>
public List<Entity> GetSocialActivities3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthoraccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: socialactivity_postauthoraccount_contacts</para>
/// </summary>
public List<Entity> GetSocialActivities3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialactivity", "postauthoraccount", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Socialprofile_customer_contacts</para>
/// </summary>
public List<Entity> GetSocialProfiles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialprofile", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Socialprofile_customer_contacts</para>
/// </summary>
public List<Entity> GetSocialProfiles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "socialprofile", "customerid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_SyncErrors</para>
/// </summary>
public List<Entity> GetSyncErrors (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_SyncErrors</para>
/// </summary>
public List<Entity> GetSyncErrors (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "syncerror", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Tasks</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: Contact_Tasks</para>
/// </summary>
public List<Entity> GetTasks (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "regardingobjectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_task</para>
/// </summary>
public List<Entity> GetTasks2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "oer_responsiblecontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: oer_contact_task</para>
/// </summary>
public List<Entity> GetTasks2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "task", "oer_responsiblecontactid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_contact</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }
/// <summary>
/// <para><b>Entity ()</b></para>
/// <para>Schema Name: userentityinstancedata_contact</para>
/// </summary>
public List<Entity> GetUserEntityInstanceData (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedOneToManyEntities(Service, this.Id, "userentityinstancedata", "objectid", Columns); }


        /// <summary>
/// <para>Related Entity: <b>Forum</b></para>
/// <para>Forum Activity Alerts</para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_forum_activityalert</para>
/// </summary>
public List<Entity> GetActivityAlertRecipients (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_communityforum", "adx_communityforumid", "adx_forum_activityalert", "contactid", "adx_communityforumid", Columns); }
public List<Entity> GetActivityAlertRecipients (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_communityforum", "adx_communityforumid", "adx_forum_activityalert", "contactid", "adx_communityforumid", Columns); }
public void RelateActivityAlertRecipients (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_forum_activityalert", Items); }
public void RelateActivityAlertRecipients (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_forum_activityalert", Items); }
public void UnRelateActivityAlertRecipients (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_forum_activityalert", Items); }
public void UnRelateActivityAlertRecipients (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_forum_activityalert", Items); }
/// <summary>
/// <para>Related Entity: <b>Forum Thread</b></para>
/// <para>Discussion Forum Subscriptions</para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_communityforumthread_contact</para>
/// </summary>
public List<Entity> GetSubscribers (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_communityforumthread", "adx_communityforumthreadid", "adx_communityforumthread_contact", "contactid", "adx_communityforumthreadid", Columns); }
public List<Entity> GetSubscribers (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_communityforumthread", "adx_communityforumthreadid", "adx_communityforumthread_contact", "contactid", "adx_communityforumthreadid", Columns); }
public void RelateSubscribers (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_communityforumthread_contact", Items); }
public void RelateSubscribers (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_communityforumthread_contact", Items); }
public void UnRelateSubscribers (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_communityforumthread_contact", Items); }
public void UnRelateSubscribers (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_communityforumthread_contact", Items); }
/// <summary>
/// <para>Related Entity: <b>Content Access Level</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_ContactContentAccessLevel</para>
/// </summary>
public List<Entity> GetContentAccessLevels (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_contentaccesslevel", "adx_contentaccesslevelid", "adx_contactcontentaccesslevel", "contactid", "adx_contentaccesslevelid", Columns); }
public List<Entity> GetContentAccessLevels (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_contentaccesslevel", "adx_contentaccesslevelid", "adx_contactcontentaccesslevel", "contactid", "adx_contentaccesslevelid", Columns); }
public void RelateContentAccessLevels (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_ContactContentAccessLevel", Items); }
public void RelateContentAccessLevels (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_ContactContentAccessLevel", Items); }
public void UnRelateContentAccessLevels (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_ContactContentAccessLevel", Items); }
public void UnRelateContentAccessLevels (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_ContactContentAccessLevel", Items); }
/// <summary>
/// <para>Related Entity: <b>Invitation</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_invitation_invitecontacts</para>
/// </summary>
public List<Entity> GetInviteContacts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_invitation", "adx_invitationid", "adx_invitation_invitecontacts", "contactid", "adx_invitationid", Columns); }
public List<Entity> GetInviteContacts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_invitation", "adx_invitationid", "adx_invitation_invitecontacts", "contactid", "adx_invitationid", Columns); }
public void RelateInviteContacts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_invitation_invitecontacts", Items); }
public void RelateInviteContacts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_invitation_invitecontacts", Items); }
public void UnRelateInviteContacts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_invitation_invitecontacts", Items); }
public void UnRelateInviteContacts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_invitation_invitecontacts", Items); }
/// <summary>
/// <para>Related Entity: <b>Invitation</b></para>
/// <para>Redeemed Invitations</para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_invitation_redeemedcontacts</para>
/// </summary>
public List<Entity> GetRedeemedContacts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_invitation", "adx_invitationid", "adx_invitation_redeemedcontacts", "contactid", "adx_invitationid", Columns); }
public List<Entity> GetRedeemedContacts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_invitation", "adx_invitationid", "adx_invitation_redeemedcontacts", "contactid", "adx_invitationid", Columns); }
public void RelateRedeemedContacts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_invitation_redeemedcontacts", Items); }
public void RelateRedeemedContacts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_invitation_redeemedcontacts", Items); }
public void UnRelateRedeemedContacts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_invitation_redeemedcontacts", Items); }
public void UnRelateRedeemedContacts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_invitation_redeemedcontacts", Items); }
/// <summary>
/// <para>Related Entity: <b>Web Role</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_webrole_contact</para>
/// </summary>
public List<Entity> GetWebRoles (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_webrole", "adx_webroleid", "adx_webrole_contact", "contactid", "adx_webroleid", Columns); }
public List<Entity> GetWebRoles (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "adx_webrole", "adx_webroleid", "adx_webrole_contact", "contactid", "adx_webroleid", Columns); }
public void RelateWebRoles (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_webrole_contact", Items); }
public void RelateWebRoles (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_webrole_contact", Items); }
public void UnRelateWebRoles (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_webrole_contact", Items); }
public void UnRelateWebRoles (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_webrole_contact", Items); }
/// <summary>
/// <para>Related Entity: <b>Lead</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactleads_association</para>
/// </summary>
public List<Entity> GetLeads3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "lead", "leadid", "contactleads", "contactid", "leadid", Columns); }
public List<Entity> GetLeads3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "lead", "leadid", "contactleads", "contactid", "leadid", Columns); }
public void RelateLeads (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactleads_association", Items); }
public void RelateLeads (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactleads_association", Items); }
public void UnRelateLeads (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactleads_association", Items); }
public void UnRelateLeads (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactleads_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Entitlement</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: entitlementcontacts_association</para>
/// </summary>
public List<Entity> GetEntitlements3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "entitlement", "entitlementid", "entitlementcontacts", "contactid", "entitlementid", Columns); }
public List<Entity> GetEntitlements3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "entitlement", "entitlementid", "entitlementcontacts", "contactid", "entitlementid", Columns); }
public void RelateEntitlements (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "entitlementcontacts_association", Items); }
public void RelateEntitlements (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "entitlementcontacts_association", Items); }
public void UnRelateEntitlements (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "entitlementcontacts_association", Items); }
public void UnRelateEntitlements (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "entitlementcontacts_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Contract</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: servicecontractcontacts_association</para>
/// </summary>
public List<Entity> GetContracts3 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "contract", "contractid", "servicecontractcontacts", "contactid", "contractid", Columns); }
public List<Entity> GetContracts3 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "contract", "contractid", "servicecontractcontacts", "contactid", "contractid", Columns); }
public void RelateContracts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "servicecontractcontacts_association", Items); }
public void RelateContracts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "servicecontractcontacts_association", Items); }
public void UnRelateContracts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "servicecontractcontacts_association", Items); }
public void UnRelateContracts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "servicecontractcontacts_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Product</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: adx_contactproduct</para>
/// </summary>
public List<Entity> GetProducts (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "product", "productid", "adx_contactproduct", "contactid", "productid", Columns); }
public List<Entity> GetProducts (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "product", "productid", "adx_contactproduct", "contactid", "productid", Columns); }
public void RelateProducts (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "adx_contactproduct", Items); }
public void RelateProducts (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "adx_contactproduct", Items); }
public void UnRelateProducts (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "adx_contactproduct", Items); }
public void UnRelateProducts (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "adx_contactproduct", Items); }
/// <summary>
/// <para>Related Entity: <b>Invoice</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactinvoices_association</para>
/// </summary>
public List<Entity> GetInvoices2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "invoice", "invoiceid", "contactinvoices", "contactid", "invoiceid", Columns); }
public List<Entity> GetInvoices2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "invoice", "invoiceid", "contactinvoices", "contactid", "invoiceid", Columns); }
public void RelateInvoices (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactinvoices_association", Items); }
public void RelateInvoices (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactinvoices_association", Items); }
public void UnRelateInvoices (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactinvoices_association", Items); }
public void UnRelateInvoices (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactinvoices_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Marketing list</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: listcontact_association</para>
/// </summary>
public List<Entity> GetMarketingLists (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "list", "listid", "listmember", "entityid", "listid", Columns); }
public List<Entity> GetMarketingLists (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "list", "listid", "listmember", "entityid", "listid", Columns); }
public void RelateMarketingLists (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "listcontact_association", Items); }
public void RelateMarketingLists (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "listcontact_association", Items); }
public void UnRelateMarketingLists (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "listcontact_association", Items); }
public void UnRelateMarketingLists (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "listcontact_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Quote</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactquotes_association</para>
/// </summary>
public List<Entity> GetQuotes2 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "quote", "quoteid", "contactquotes", "contactid", "quoteid", Columns); }
public List<Entity> GetQuotes2 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "quote", "quoteid", "contactquotes", "contactid", "quoteid", Columns); }
public void RelateQuotes (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactquotes_association", Items); }
public void RelateQuotes (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactquotes_association", Items); }
public void UnRelateQuotes (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactquotes_association", Items); }
public void UnRelateQuotes (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactquotes_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Order</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contactorders_association</para>
/// </summary>
public List<Entity> GetOrders4 (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "salesorder", "salesorderid", "contactorders", "contactid", "salesorderid", Columns); }
public List<Entity> GetOrders4 (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "salesorder", "salesorderid", "contactorders", "contactid", "salesorderid", Columns); }
public void RelateOrders (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contactorders_association", Items); }
public void RelateOrders (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contactorders_association", Items); }
public void UnRelateOrders (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contactorders_association", Items); }
public void UnRelateOrders (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contactorders_association", Items); }
/// <summary>
/// <para>Related Entity: <b>Subscription</b></para>
/// <para>N:N Relationship</para>
/// <para>Schema Name: contact_subscription_association</para>
/// </summary>
public List<Entity> GetSubscriptions (IOrganizationService Service, params string[] Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "subscription", "subscriptionid", "subscriptionmanuallytrackedobject", "objectid", "subscriptionid", Columns); }
public List<Entity> GetSubscriptions (IOrganizationService Service, ColumnSet Columns) { return BaseProxyClass.GetRelatedManyToManyEntities(Service, this, "contact", "contactid", "subscription", "subscriptionid", "subscriptionmanuallytrackedobject", "objectid", "subscriptionid", Columns); }
public void RelateSubscriptions (IOrganizationService Service, params Entity[] Items) { Service.RelateEntities(this, "contact_subscription_association", Items); }
public void RelateSubscriptions (IOrganizationService Service, params EntityReference[] Items) { Service.RelateEntities(this, "contact_subscription_association", Items); }
public void UnRelateSubscriptions (IOrganizationService Service, params Entity[] Items) { Service.UnRelateEntities(this, "contact_subscription_association", Items); }
public void UnRelateSubscriptions (IOrganizationService Service, params EntityReference[] Items) { Service.UnRelateEntities(this, "contact_subscription_association", Items); }


        

        public enum eTitle
{
	///<summary><para>Dr.</para>
	///<para>Value = 280560000</para></summary>
	[Description("Dr.")]
	Dr = 280560000, 
	///<summary><para>Prof.</para>
	///<para>Value = 280560001</para></summary>
	[Description("Prof.")]
	Prof = 280560001, 
	///<summary><para>Prof. Dr.</para>
	///<para>Value = 280560006</para></summary>
	[Description("Prof. Dr.")]
	Prof_Dr = 280560006, 
	///<summary><para>B.A.</para>
	///<para>Value = 280560002</para></summary>
	[Description("B.A.")]
	B_A = 280560002, 
	///<summary><para>MBA</para>
	///<para>Value = 280560003</para></summary>
	[Description("MBA")]
	MBA = 280560003, 
	///<summary><para>Ph. D.</para>
	///<para>Value = 280560004</para></summary>
	[Description("Ph. D.")]
	Ph_D = 280560004, 
	///<summary><para>Ing.</para>
	///<para>Value = 280560005</para></summary>
	[Description("Ing.")]
	Ing = 280560005, 
	///<summary><para>Dipl.-Ing.</para>
	///<para>Value = 280560007</para></summary>
	[Description("Dipl.-Ing.")]
	Dipl_Ing = 280560007, 
	///<summary><para>Dipl.-Wirt.-Ing.</para>
	///<para>Value = 280560008</para></summary>
	[Description("Dipl.-Wirt.-Ing.")]
	Dipl_Wirt_Ing = 280560008, 
	///<summary><para>Dipl.-Kfm.</para>
	///<para>Value = 280560009</para></summary>
	[Description("Dipl.-Kfm.")]
	Dipl_Kfm = 280560009, 
	///<summary><para>Dr.-Ing.</para>
	///<para>Value = 280560010</para></summary>
	[Description("Dr.-Ing.")]
	Dr_Ing = 280560010, 
	///<summary><para>Prof. Dr. Ing.</para>
	///<para>Value = 280560011</para></summary>
	[Description("Prof. Dr. Ing.")]
	Prof_Dr_Ing = 280560011, 
	///<summary><para>Mag.</para>
	///<para>Value = 280560012</para></summary>
	[Description("Mag.")]
	Mag = 280560012, 
	///<summary><para>Dipl.-Chem.</para>
	///<para>Value = 280560013</para></summary>
	[Description("Dipl.-Chem.")]
	Dipl_Chem = 280560013, 
	///<summary><para>B.Sc.</para>
	///<para>Value = 280560014</para></summary>
	[Description("B.Sc.")]
	B_Sc = 280560014
}
public enum eAddress1_ShippingMethod
{
	///<summary><para>Airborne</para>
	///<para>Value = 1</para></summary>
	[Description("Airborne")]
	Airborne = 1, 
	///<summary><para>DHL</para>
	///<para>Value = 2</para></summary>
	[Description("DHL")]
	DHL = 2, 
	///<summary><para>FedEx</para>
	///<para>Value = 3</para></summary>
	[Description("FedEx")]
	FedEx = 3, 
	///<summary><para>UPS</para>
	///<para>Value = 4</para></summary>
	[Description("UPS")]
	UPS = 4, 
	///<summary><para>Postal Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Postal Mail")]
	PostalMail = 5, 
	///<summary><para>Full Load</para>
	///<para>Value = 6</para></summary>
	[Description("Full Load")]
	FullLoad = 6, 
	///<summary><para>Will Call</para>
	///<para>Value = 7</para></summary>
	[Description("Will Call")]
	WillCall = 7
}
public enum eAddress2_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_FreightTerms
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress2_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress3_AddressType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress3_FreightTerms
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress3_ShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress1_AddressType
{
	///<summary><para>Bill To</para>
	///<para>Value = 1</para></summary>
	[Description("Bill To")]
	BillTo = 1, 
	///<summary><para>Ship To</para>
	///<para>Value = 2</para></summary>
	[Description("Ship To")]
	ShipTo = 2, 
	///<summary><para>Primary</para>
	///<para>Value = 3</para></summary>
	[Description("Primary")]
	Primary = 3, 
	///<summary><para>Other</para>
	///<para>Value = 4</para></summary>
	[Description("Other")]
	Other = 4
}
public enum eConsent
{
	///<summary><para>(1) Consent</para>
	///<para>Value = 587030001</para></summary>
	[Description("(1) Consent")]
	_1_Consent = 587030001, 
	///<summary><para>(2) Transactional</para>
	///<para>Value = 587030002</para></summary>
	[Description("(2) Transactional")]
	_2_Transactional = 587030002, 
	///<summary><para>(3) Subscriptions</para>
	///<para>Value = 587030003</para></summary>
	[Description("(3) Subscriptions")]
	_3_Subscriptions = 587030003, 
	///<summary><para>(4) Marketing</para>
	///<para>Value = 587030004</para></summary>
	[Description("(4) Marketing")]
	_4_Marketing = 587030004, 
	///<summary><para>(5) Profiling</para>
	///<para>Value = 587030005</para></summary>
	[Description("(5) Profiling")]
	_5_Profiling = 587030005
}
public enum eConsentLevel
{
	///<summary><para>(none)</para>
	///<para>Value = 280560000</para></summary>
	[Description("(none)")]
	_none = 280560000, 
	///<summary><para>Consent</para>
	///<para>Value = 280560001</para></summary>
	[Description("Consent")]
	Consent = 280560001, 
	///<summary><para>Transactional</para>
	///<para>Value = 280560002</para></summary>
	[Description("Transactional")]
	Transactional = 280560002, 
	///<summary><para>Subscriptions</para>
	///<para>Value = 280560003</para></summary>
	[Description("Subscriptions")]
	Subscriptions = 280560003, 
	///<summary><para>Marketing</para>
	///<para>Value = 280560004</para></summary>
	[Description("Marketing")]
	Marketing = 280560004, 
	///<summary><para>Profiling</para>
	///<para>Value = 280560005</para></summary>
	[Description("Profiling")]
	Profiling = 280560005
}
public enum eCustomerSize
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eDepartment
{
	///<summary><para>Management</para>
	///<para>Value = 280560000</para></summary>
	[Description("Management")]
	Management = 280560000, 
	///<summary><para>Purchasing</para>
	///<para>Value = 280560001</para></summary>
	[Description("Purchasing")]
	Purchasing = 280560001, 
	///<summary><para>Sales</para>
	///<para>Value = 280560026</para></summary>
	[Description("Sales")]
	Sales = 280560026, 
	///<summary><para>Organization</para>
	///<para>Value = 280560002</para></summary>
	[Description("Organization")]
	Organization = 280560002, 
	///<summary><para>Administration</para>
	///<para>Value = 280560003</para></summary>
	[Description("Administration")]
	Administration = 280560003, 
	///<summary><para>Production</para>
	///<para>Value = 280560004</para></summary>
	[Description("Production")]
	Production = 280560004, 
	///<summary><para>Quality Control</para>
	///<para>Value = 280560005</para></summary>
	[Description("Quality Control")]
	QualityControl = 280560005, 
	///<summary><para>Secretaries</para>
	///<para>Value = 280560006</para></summary>
	[Description("Secretaries")]
	Secretaries = 280560006, 
	///<summary><para>Financial Accounting</para>
	///<para>Value = 280560007</para></summary>
	[Description("Financial Accounting")]
	FinancialAccounting = 280560007, 
	///<summary><para>Legal Department</para>
	///<para>Value = 280560008</para></summary>
	[Description("Legal Department")]
	LegalDepartment = 280560008, 
	///<summary><para>Import</para>
	///<para>Value = 280560009</para></summary>
	[Description("Import")]
	Import = 280560009, 
	///<summary><para>Technical Dept.</para>
	///<para>Value = 280560010</para></summary>
	[Description("Technical Dept.")]
	TechnicalDept = 280560010, 
	///<summary><para>Technological Dept.</para>
	///<para>Value = 280560011</para></summary>
	[Description("Technological Dept.")]
	TechnologicalDept = 280560011, 
	///<summary><para>Laboratory</para>
	///<para>Value = 280560012</para></summary>
	[Description("Laboratory")]
	Laboratory = 280560012, 
	///<summary><para>Projects Dept.</para>
	///<para>Value = 280560013</para></summary>
	[Description("Projects Dept.")]
	ProjectsDept = 280560013, 
	///<summary><para>Research + Develop.</para>
	///<para>Value = 280560014</para></summary>
	[Description("Research + Develop.")]
	Research_Develop = 280560014, 
	///<summary><para>Shipping Department</para>
	///<para>Value = 280560015</para></summary>
	[Description("Shipping Department")]
	ShippingDepartment = 280560015, 
	///<summary><para>Textile Department</para>
	///<para>Value = 280560016</para></summary>
	[Description("Textile Department")]
	TextileDepartment = 280560016, 
	///<summary><para>Customer Service</para>
	///<para>Value = 280560017</para></summary>
	[Description("Customer Service")]
	CustomerService = 280560017, 
	///<summary><para>Spare Parts</para>
	///<para>Value = 280560018</para></summary>
	[Description("Spare Parts")]
	SpareParts = 280560018, 
	///<summary><para>Training</para>
	///<para>Value = 280560019</para></summary>
	[Description("Training")]
	Training = 280560019, 
	///<summary><para>Maintenance</para>
	///<para>Value = 280560020</para></summary>
	[Description("Maintenance")]
	Maintenance = 280560020, 
	///<summary><para>Marketing</para>
	///<para>Value = 280560021</para></summary>
	[Description("Marketing")]
	Marketing = 280560021, 
	///<summary><para>Construction</para>
	///<para>Value = 280560022</para></summary>
	[Description("Construction")]
	Construction = 280560022, 
	///<summary><para>Board of Directors</para>
	///<para>Value = 280560023</para></summary>
	[Description("Board of Directors")]
	BoardOfDirectors = 280560023, 
	///<summary><para>Supervisory board</para>
	///<para>Value = 280560024</para></summary>
	[Description("Supervisory board")]
	SupervisoryBoard = 280560024, 
	///<summary><para>Spinning</para>
	///<para>Value = 280560025</para></summary>
	[Description("Spinning")]
	Spinning = 280560025
}
public enum eEducation
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eFunction
{
	///<summary><para>1. Managing director</para>
	///<para>Value = 280560000</para></summary>
	[Description("1. Managing director")]
	_1_ManagingDirector = 280560000
}
public enum eGender
{
	///<summary><para>Male</para>
	///<para>Value = 1</para></summary>
	[Description("Male")]
	Male = 1, 
	///<summary><para>Female</para>
	///<para>Value = 2</para></summary>
	[Description("Female")]
	Female = 2
}
public enum eHasChildren
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eAddress1_FreightTerms
{
	///<summary><para>FOB</para>
	///<para>Value = 1</para></summary>
	[Description("FOB")]
	FOB = 1, 
	///<summary><para>No Charge</para>
	///<para>Value = 2</para></summary>
	[Description("No Charge")]
	NoCharge = 2
}
public enum eLeadSource
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eMaritalStatus
{
	///<summary><para>Single</para>
	///<para>Value = 1</para></summary>
	[Description("Single")]
	Single = 1, 
	///<summary><para>Married</para>
	///<para>Value = 2</para></summary>
	[Description("Married")]
	Married = 2, 
	///<summary><para>Divorced</para>
	///<para>Value = 3</para></summary>
	[Description("Divorced")]
	Divorced = 3, 
	///<summary><para>Widowed</para>
	///<para>Value = 4</para></summary>
	[Description("Widowed")]
	Widowed = 4
}
public enum eOrgChangeStatus
{
	///<summary><para>No</para>
	///<para>Value = 0</para></summary>
	[Description("No")]
	No = 0, 
	///<summary><para>Yes</para>
	///<para>Value = 1</para></summary>
	[Description("Yes")]
	Yes = 1, 
	///<summary><para>Ignore</para>
	///<para>Value = 2</para></summary>
	[Description("Ignore")]
	Ignore = 2
}
public enum ePaymentTerms
{
	///<summary><para>Net 30</para>
	///<para>Value = 1</para></summary>
	[Description("Net 30")]
	Net30 = 1, 
	///<summary><para>2% 10, Net 30</para>
	///<para>Value = 2</para></summary>
	[Description("2% 10, Net 30")]
	_2_10_Net30 = 2, 
	///<summary><para>Net 45</para>
	///<para>Value = 3</para></summary>
	[Description("Net 45")]
	Net45 = 3, 
	///<summary><para>Net 60</para>
	///<para>Value = 4</para></summary>
	[Description("Net 60")]
	Net60 = 4
}
public enum ePreferredDay
{
	///<summary><para>Sunday</para>
	///<para>Value = 0</para></summary>
	[Description("Sunday")]
	Sunday = 0, 
	///<summary><para>Monday</para>
	///<para>Value = 1</para></summary>
	[Description("Monday")]
	Monday = 1, 
	///<summary><para>Tuesday</para>
	///<para>Value = 2</para></summary>
	[Description("Tuesday")]
	Tuesday = 2, 
	///<summary><para>Wednesday</para>
	///<para>Value = 3</para></summary>
	[Description("Wednesday")]
	Wednesday = 3, 
	///<summary><para>Thursday</para>
	///<para>Value = 4</para></summary>
	[Description("Thursday")]
	Thursday = 4, 
	///<summary><para>Friday</para>
	///<para>Value = 5</para></summary>
	[Description("Friday")]
	Friday = 5, 
	///<summary><para>Saturday</para>
	///<para>Value = 6</para></summary>
	[Description("Saturday")]
	Saturday = 6
}
public enum ePreferredMethodOfContact
{
	///<summary><para>Any</para>
	///<para>Value = 1</para></summary>
	[Description("Any")]
	Any = 1, 
	///<summary><para>Email</para>
	///<para>Value = 2</para></summary>
	[Description("Email")]
	Email = 2, 
	///<summary><para>Phone</para>
	///<para>Value = 3</para></summary>
	[Description("Phone")]
	Phone = 3, 
	///<summary><para>Fax</para>
	///<para>Value = 4</para></summary>
	[Description("Fax")]
	Fax = 4, 
	///<summary><para>Mail</para>
	///<para>Value = 5</para></summary>
	[Description("Mail")]
	Mail = 5
}
public enum ePreferredTime
{
	///<summary><para>Morning</para>
	///<para>Value = 1</para></summary>
	[Description("Morning")]
	Morning = 1, 
	///<summary><para>Afternoon</para>
	///<para>Value = 2</para></summary>
	[Description("Afternoon")]
	Afternoon = 2, 
	///<summary><para>Evening</para>
	///<para>Value = 3</para></summary>
	[Description("Evening")]
	Evening = 3
}
public enum eRelationshipType
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eRole
{
	///<summary><para>Decision Maker</para>
	///<para>Value = 1</para></summary>
	[Description("Decision Maker")]
	DecisionMaker = 1, 
	///<summary><para>Employee</para>
	///<para>Value = 2</para></summary>
	[Description("Employee")]
	Employee = 2, 
	///<summary><para>Influencer</para>
	///<para>Value = 3</para></summary>
	[Description("Influencer")]
	Influencer = 3
}
public enum eSalutation
{
	///<summary><para>Mr.</para>
	///<para>Value = 280560000</para></summary>
	[Description("Mr.")]
	Mr = 280560000, 
	///<summary><para>Mrs.</para>
	///<para>Value = 280560001</para></summary>
	[Description("Mrs.")]
	Mrs = 280560001, 
	///<summary><para>Ms.</para>
	///<para>Value = 280560002</para></summary>
	[Description("Ms.")]
	Ms = 280560002
}
public enum eShippingMethod
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public enum eStatus
{
	///<summary><para>Active</para>
	///<para>Value = 0</para></summary>
	[Description("Active")]
	Active = 0, 
	///<summary><para>Inactive</para>
	///<para>Value = 1</para></summary>
	[Description("Inactive")]
	Inactive = 1
}
public enum eStatusReason
{
	///<summary><para>Active</para>
	///<para>Value = 1</para></summary>
	[Description("Active")]
	Active_Active = 1, 
	///<summary><para>Inactive</para>
	///<para>Value = 2</para></summary>
	[Description("Inactive")]
	Inactive_Inactive = 2
}
public enum eTerritory
{
	///<summary><para>Default Value</para>
	///<para>Value = 1</para></summary>
	[Description("Default Value")]
	DefaultValue = 1
}
public void SetState(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	Service.SetState(this, (int)State, (int)Status);
}
public async System.Threading.Tasks.Task SetStateAsync(IOrganizationService Service, eStatus State, eStatusReason Status)
{
	 await Service.SetStateAsync(this, (int)State, (int)Status);
}


        public static class Properties
{
	/// <summary><para>msdyncrm_marketingformidname</para>
	/// <para>msdyncrm_marketingformidname</para></summary>
	public const string Msdyncrm_marketingformidName = "msdyncrm_marketingformidname";
	/// <summary><para>parentcustomeridname</para>
	/// <para>parentcustomeridname</para></summary>
	public const string ParentCustomerIdName = "parentcustomeridname";
	/// <summary><para>accountidyominame</para>
	/// <para>accountidyominame</para></summary>
	public const string AccountIdYomiName = "accountidyominame";
	/// <summary><para>parentcontactidyominame</para>
	/// <para>parentcontactidyominame</para></summary>
	public const string ParentContactIdYomiName = "parentcontactidyominame";
	/// <summary><para>slainvokedidname</para>
	/// <para>slainvokedidname</para></summary>
	public const string SLAInvokedIdName = "slainvokedidname";
	/// <summary><para>defaultpricelevelidname</para>
	/// <para>defaultpricelevelidname</para></summary>
	public const string DefaultPriceLevelIdName = "defaultpricelevelidname";
	/// <summary><para>originatingleadidname</para>
	/// <para>originatingleadidname</para></summary>
	public const string OriginatingLeadIdName = "originatingleadidname";
	/// <summary><para>slaname</para>
	/// <para>slaname</para></summary>
	public const string SLAName = "slaname";
	/// <summary><para>createdbyexternalpartyname</para>
	/// <para>createdbyexternalpartyname</para></summary>
	public const string CreatedByExternalPartyName = "createdbyexternalpartyname";
	/// <summary><para>createdbyyominame</para>
	/// <para>createdbyyominame</para></summary>
	public const string CreatedByYomiName = "createdbyyominame";
	/// <summary><para>accountidname</para>
	/// <para>accountidname</para></summary>
	public const string AccountIdName = "accountidname";
	/// <summary><para>preferredserviceidname</para>
	/// <para>preferredserviceidname</para></summary>
	public const string PreferredServiceIdName = "preferredserviceidname";
	/// <summary><para>transactioncurrencyidname</para>
	/// <para>transactioncurrencyidname</para></summary>
	public const string TransactionCurrencyIdName = "transactioncurrencyidname";
	/// <summary><para>entityimage_url</para>
	/// <para>entityimage_url</para></summary>
	public const string EntityImage_URL = "entityimage_url";
	/// <summary><para>createdonbehalfbyname</para>
	/// <para>createdonbehalfbyname</para></summary>
	public const string CreatedOnBehalfByName = "createdonbehalfbyname";
	/// <summary><para>msa_managingpartneridname</para>
	/// <para>msa_managingpartneridname</para></summary>
	public const string Msa_managingpartneridName = "msa_managingpartneridname";
	/// <summary><para>owneridname</para>
	/// <para>owneridname</para></summary>
	public const string OwnerIdName = "owneridname";
	/// <summary><para>originatingleadidyominame</para>
	/// <para>originatingleadidyominame</para></summary>
	public const string OriginatingLeadIdYomiName = "originatingleadidyominame";
	/// <summary><para>parentcontactidname</para>
	/// <para>parentcontactidname</para></summary>
	public const string ParentContactIdName = "parentcontactidname";
	/// <summary><para>adx_preferredlanguageidname</para>
	/// <para>adx_preferredlanguageidname</para></summary>
	public const string Adx_preferredlanguageidName = "adx_preferredlanguageidname";
	/// <summary><para>msgdpr_gdprparentidyominame</para>
	/// <para>msgdpr_gdprparentidyominame</para></summary>
	public const string Msgdpr_GDPRParentIdYomiName = "msgdpr_gdprparentidyominame";
	/// <summary><para>msdyncrm_marketingpageidname</para>
	/// <para>msdyncrm_marketingpageidname</para></summary>
	public const string Msdyncrm_marketingpageidName = "msdyncrm_marketingpageidname";
	/// <summary><para>msevtmgt_contactidname</para>
	/// <para>msevtmgt_contactidname</para></summary>
	public const string Msevtmgt_ContactIdName = "msevtmgt_contactidname";
	/// <summary><para>createdbyname</para>
	/// <para>createdbyname</para></summary>
	public const string CreatedByName = "createdbyname";
	/// <summary><para>modifiedonbehalfbyyominame</para>
	/// <para>modifiedonbehalfbyyominame</para></summary>
	public const string ModifiedOnBehalfByYomiName = "modifiedonbehalfbyyominame";
	/// <summary><para>msa_managingpartneridyominame</para>
	/// <para>msa_managingpartneridyominame</para></summary>
	public const string Msa_managingpartneridYomiName = "msa_managingpartneridyominame";
	/// <summary><para>modifiedbyname</para>
	/// <para>modifiedbyname</para></summary>
	public const string ModifiedByName = "modifiedbyname";
	/// <summary><para>owneridtype</para>
	/// <para>owneridtype</para></summary>
	public const string OwnerIdType = "owneridtype";
	/// <summary><para>msdyncrm_segmentmemberidname</para>
	/// <para>msdyncrm_segmentmemberidname</para></summary>
	public const string Msdyncrm_SegmentMemberIdName = "msdyncrm_segmentmemberidname";
	/// <summary><para>entityimage_timestamp</para>
	/// <para>entityimage_timestamp</para></summary>
	public const string EntityImage_Timestamp = "entityimage_timestamp";
	/// <summary><para>msdyncrm_customerjourneyidname</para>
	/// <para>msdyncrm_customerjourneyidname</para></summary>
	public const string Msdyncrm_customerjourneyidName = "msdyncrm_customerjourneyidname";
	/// <summary><para>createdonbehalfbyyominame</para>
	/// <para>createdonbehalfbyyominame</para></summary>
	public const string CreatedOnBehalfByYomiName = "createdonbehalfbyyominame";
	/// <summary><para>preferredsystemuseridyominame</para>
	/// <para>preferredsystemuseridyominame</para></summary>
	public const string PreferredSystemUserIdYomiName = "preferredsystemuseridyominame";
	/// <summary><para>msdyncrm_emailidname</para>
	/// <para>msdyncrm_emailidname</para></summary>
	public const string Msdyncrm_emailidName = "msdyncrm_emailidname";
	/// <summary><para>isprivate</para>
	/// <para>isprivate</para></summary>
	public const string IsPrivate = "isprivate";
	/// <summary><para>owneridyominame</para>
	/// <para>owneridyominame</para></summary>
	public const string OwnerIdYomiName = "owneridyominame";
	/// <summary><para>createdbyexternalpartyyominame</para>
	/// <para>createdbyexternalpartyyominame</para></summary>
	public const string CreatedByExternalPartyYomiName = "createdbyexternalpartyyominame";
	/// <summary><para>mastercontactidyominame</para>
	/// <para>mastercontactidyominame</para></summary>
	public const string MasterContactIdYomiName = "mastercontactidyominame";
	/// <summary><para>mastercontactidname</para>
	/// <para>mastercontactidname</para></summary>
	public const string MasterContactIdName = "mastercontactidname";
	/// <summary><para>modifiedbyexternalpartyyominame</para>
	/// <para>modifiedbyexternalpartyyominame</para></summary>
	public const string ModifiedByExternalPartyYomiName = "modifiedbyexternalpartyyominame";
	/// <summary><para>modifiedonbehalfbyname</para>
	/// <para>modifiedonbehalfbyname</para></summary>
	public const string ModifiedOnBehalfByName = "modifiedonbehalfbyname";
	/// <summary><para>msevtmgt_originatingeventidname</para>
	/// <para>msevtmgt_originatingeventidname</para></summary>
	public const string Msevtmgt_originatingeventidName = "msevtmgt_originatingeventidname";
	/// <summary><para>parentcustomeridyominame</para>
	/// <para>parentcustomeridyominame</para></summary>
	public const string ParentCustomerIdYomiName = "parentcustomeridyominame";
	/// <summary><para>preferredsystemuseridname</para>
	/// <para>preferredsystemuseridname</para></summary>
	public const string PreferredSystemUserIdName = "preferredsystemuseridname";
	/// <summary><para>msgdpr_gdprparentidname</para>
	/// <para>msgdpr_gdprparentidname</para></summary>
	public const string Msgdpr_GDPRParentIdName = "msgdpr_gdprparentidname";
	/// <summary><para>modifiedbyexternalpartyname</para>
	/// <para>modifiedbyexternalpartyname</para></summary>
	public const string ModifiedByExternalPartyName = "modifiedbyexternalpartyname";
	/// <summary><para>preferredequipmentidname</para>
	/// <para>preferredequipmentidname</para></summary>
	public const string PreferredEquipmentIdName = "preferredequipmentidname";
	/// <summary><para>modifiedbyyominame</para>
	/// <para>modifiedbyyominame</para></summary>
	public const string ModifiedByYomiName = "modifiedbyyominame";
	/// <summary><para>(Deprecated) Process Stage</para>
	/// <para>stageid</para></summary>
	public const string _Deprecated_ProcessStage = "stageid";
	/// <summary><para>(Deprecated) Traversed Path</para>
	/// <para>traversedpath</para></summary>
	public const string _Deprecated_TraversedPath = "traversedpath";
	/// <summary><para>AAD object ID</para>
	/// <para>msevtmgt_aadobjectid</para></summary>
	public const string AADObjectID = "msevtmgt_aadobjectid";
	/// <summary><para>Academic Title</para>
	/// <para>oer_title</para></summary>
	public const string AcademicTitle = "oer_title";
	/// <summary><para>Access Failed Count</para>
	/// <para>adx_identity_accessfailedcount</para></summary>
	public const string AccessFailedCount = "adx_identity_accessfailedcount";
	/// <summary><para>Account</para>
	/// <para>accountid</para></summary>
	public const string Account = "accountid";
	/// <summary><para>Account Name</para>
	/// <para>parentcustomerid</para></summary>
	public const string AccountName = "parentcustomerid";
	/// <summary><para>Address 1</para>
	/// <para>address1_composite</para></summary>
	public const string Address1 = "address1_composite";
	/// <summary><para>Address 1: City</para>
	/// <para>address1_city</para></summary>
	public const string Address1_City = "address1_city";
	/// <summary><para>Address 1: Country/Region</para>
	/// <para>address1_country</para></summary>
	public const string Address1_Country_Region = "address1_country";
	/// <summary><para>Address 1: County</para>
	/// <para>address1_county</para></summary>
	public const string Address1_County = "address1_county";
	/// <summary><para>Address 1: Fax</para>
	/// <para>address1_fax</para></summary>
	public const string Address1_Fax = "address1_fax";
	/// <summary><para>Address 1: ID</para>
	/// <para>address1_addressid</para></summary>
	public const string Address1_ID = "address1_addressid";
	/// <summary><para>Address 1: Latitude</para>
	/// <para>address1_latitude</para></summary>
	public const string Address1_Latitude = "address1_latitude";
	/// <summary><para>Address 1: Longitude</para>
	/// <para>address1_longitude</para></summary>
	public const string Address1_Longitude = "address1_longitude";
	/// <summary><para>Address 1: Name</para>
	/// <para>address1_name</para></summary>
	public const string Address1_Name = "address1_name";
	/// <summary><para>Address 1: Phone</para>
	/// <para>address1_telephone1</para></summary>
	public const string Address1_Phone = "address1_telephone1";
	/// <summary><para>Address 1: Primary Contact Name</para>
	/// <para>address1_primarycontactname</para></summary>
	public const string Address1_PrimaryContactName = "address1_primarycontactname";
	/// <summary><para>Address 1: Shipping Method</para>
	/// <para>address1_shippingmethodcode</para></summary>
	public const string Address1_ShippingMethod = "address1_shippingmethodcode";
	/// <summary><para>Address 1: State/Province</para>
	/// <para>address1_stateorprovince</para></summary>
	public const string Address1_State_Province = "address1_stateorprovince";
	/// <summary><para>Address 1: Street 1</para>
	/// <para>address1_line1</para></summary>
	public const string Address1_Street1 = "address1_line1";
	/// <summary><para>Address 1: Street 2</para>
	/// <para>address1_line2</para></summary>
	public const string Address1_Street2 = "address1_line2";
	/// <summary><para>Address 1: Street 3</para>
	/// <para>address1_line3</para></summary>
	public const string Address1_Street3 = "address1_line3";
	/// <summary><para>Address 1: Telephone 2</para>
	/// <para>address1_telephone2</para></summary>
	public const string Address1_Telephone2 = "address1_telephone2";
	/// <summary><para>Address 1: Telephone 3</para>
	/// <para>address1_telephone3</para></summary>
	public const string Address1_Telephone3 = "address1_telephone3";
	/// <summary><para>Address 1: UPS Zone</para>
	/// <para>address1_upszone</para></summary>
	public const string Address1_UPSZone = "address1_upszone";
	/// <summary><para>Address 1: UTC Offset</para>
	/// <para>address1_utcoffset</para></summary>
	public const string Address1_UTCOffset = "address1_utcoffset";
	/// <summary><para>Address 1: ZIP/Postal Code</para>
	/// <para>address1_postalcode</para></summary>
	public const string Address1_ZIP_PostalCode = "address1_postalcode";
	/// <summary><para>Address 2</para>
	/// <para>address2_composite</para></summary>
	public const string Address2 = "address2_composite";
	/// <summary><para>Address 2: Address Type</para>
	/// <para>address2_addresstypecode</para></summary>
	public const string Address2_AddressType = "address2_addresstypecode";
	/// <summary><para>Address 2: City</para>
	/// <para>address2_city</para></summary>
	public const string Address2_City = "address2_city";
	/// <summary><para>Address 2: Country/Region</para>
	/// <para>address2_country</para></summary>
	public const string Address2_Country_Region = "address2_country";
	/// <summary><para>Address 2: County</para>
	/// <para>address2_county</para></summary>
	public const string Address2_County = "address2_county";
	/// <summary><para>Address 2: Fax</para>
	/// <para>address2_fax</para></summary>
	public const string Address2_Fax = "address2_fax";
	/// <summary><para>Address 2: Freight Terms</para>
	/// <para>address2_freighttermscode</para></summary>
	public const string Address2_FreightTerms = "address2_freighttermscode";
	/// <summary><para>Address 2: ID</para>
	/// <para>address2_addressid</para></summary>
	public const string Address2_ID = "address2_addressid";
	/// <summary><para>Address 2: Latitude</para>
	/// <para>address2_latitude</para></summary>
	public const string Address2_Latitude = "address2_latitude";
	/// <summary><para>Address 2: Longitude</para>
	/// <para>address2_longitude</para></summary>
	public const string Address2_Longitude = "address2_longitude";
	/// <summary><para>Address 2: Name</para>
	/// <para>address2_name</para></summary>
	public const string Address2_Name = "address2_name";
	/// <summary><para>Address 2: Post Office Box</para>
	/// <para>address2_postofficebox</para></summary>
	public const string Address2_PostOfficeBox = "address2_postofficebox";
	/// <summary><para>Address 2: Primary Contact Name</para>
	/// <para>address2_primarycontactname</para></summary>
	public const string Address2_PrimaryContactName = "address2_primarycontactname";
	/// <summary><para>Address 2: Shipping Method</para>
	/// <para>address2_shippingmethodcode</para></summary>
	public const string Address2_ShippingMethod = "address2_shippingmethodcode";
	/// <summary><para>Address 2: State/Province</para>
	/// <para>address2_stateorprovince</para></summary>
	public const string Address2_State_Province = "address2_stateorprovince";
	/// <summary><para>Address 2: Street 1</para>
	/// <para>address2_line1</para></summary>
	public const string Address2_Street1 = "address2_line1";
	/// <summary><para>Address 2: Street 2</para>
	/// <para>address2_line2</para></summary>
	public const string Address2_Street2 = "address2_line2";
	/// <summary><para>Address 2: Street 3</para>
	/// <para>address2_line3</para></summary>
	public const string Address2_Street3 = "address2_line3";
	/// <summary><para>Address 2: Telephone 1</para>
	/// <para>address2_telephone1</para></summary>
	public const string Address2_Telephone1 = "address2_telephone1";
	/// <summary><para>Address 2: Telephone 2</para>
	/// <para>address2_telephone2</para></summary>
	public const string Address2_Telephone2 = "address2_telephone2";
	/// <summary><para>Address 2: Telephone 3</para>
	/// <para>address2_telephone3</para></summary>
	public const string Address2_Telephone3 = "address2_telephone3";
	/// <summary><para>Address 2: UPS Zone</para>
	/// <para>address2_upszone</para></summary>
	public const string Address2_UPSZone = "address2_upszone";
	/// <summary><para>Address 2: UTC Offset</para>
	/// <para>address2_utcoffset</para></summary>
	public const string Address2_UTCOffset = "address2_utcoffset";
	/// <summary><para>Address 2: ZIP/Postal Code</para>
	/// <para>address2_postalcode</para></summary>
	public const string Address2_ZIP_PostalCode = "address2_postalcode";
	/// <summary><para>Address 3</para>
	/// <para>address3_composite</para></summary>
	public const string Address3 = "address3_composite";
	/// <summary><para>Address 3: Address Type</para>
	/// <para>address3_addresstypecode</para></summary>
	public const string Address3_AddressType = "address3_addresstypecode";
	/// <summary><para>Address 3: City</para>
	/// <para>address3_city</para></summary>
	public const string Address3_City = "address3_city";
	/// <summary><para>Address 3: County</para>
	/// <para>address3_county</para></summary>
	public const string Address3_County = "address3_county";
	/// <summary><para>Address 3: Fax</para>
	/// <para>address3_fax</para></summary>
	public const string Address3_Fax = "address3_fax";
	/// <summary><para>Address 3: Freight Terms</para>
	/// <para>address3_freighttermscode</para></summary>
	public const string Address3_FreightTerms = "address3_freighttermscode";
	/// <summary><para>Address 3: ID</para>
	/// <para>address3_addressid</para></summary>
	public const string Address3_ID = "address3_addressid";
	/// <summary><para>Address 3: Latitude</para>
	/// <para>address3_latitude</para></summary>
	public const string Address3_Latitude = "address3_latitude";
	/// <summary><para>Address 3: Longitude</para>
	/// <para>address3_longitude</para></summary>
	public const string Address3_Longitude = "address3_longitude";
	/// <summary><para>Address 3: Name</para>
	/// <para>address3_name</para></summary>
	public const string Address3_Name = "address3_name";
	/// <summary><para>Address 3: Post Office Box</para>
	/// <para>address3_postofficebox</para></summary>
	public const string Address3_PostOfficeBox = "address3_postofficebox";
	/// <summary><para>Address 3: Primary Contact Name</para>
	/// <para>address3_primarycontactname</para></summary>
	public const string Address3_PrimaryContactName = "address3_primarycontactname";
	/// <summary><para>Address 3: Shipping Method</para>
	/// <para>address3_shippingmethodcode</para></summary>
	public const string Address3_ShippingMethod = "address3_shippingmethodcode";
	/// <summary><para>Address 3: Telephone1</para>
	/// <para>address3_telephone1</para></summary>
	public const string Address3_Telephone1 = "address3_telephone1";
	/// <summary><para>Address 3: Telephone2</para>
	/// <para>address3_telephone2</para></summary>
	public const string Address3_Telephone2 = "address3_telephone2";
	/// <summary><para>Address 3: Telephone3</para>
	/// <para>address3_telephone3</para></summary>
	public const string Address3_Telephone3 = "address3_telephone3";
	/// <summary><para>Address 3: UPS Zone</para>
	/// <para>address3_upszone</para></summary>
	public const string Address3_UPSZone = "address3_upszone";
	/// <summary><para>Address 3: UTC Offset</para>
	/// <para>address3_utcoffset</para></summary>
	public const string Address3_UTCOffset = "address3_utcoffset";
	/// <summary><para>Address Type</para>
	/// <para>address1_addresstypecode</para></summary>
	public const string AddressType = "address1_addresstypecode";
	/// <summary><para>Address3: Country/Region</para>
	/// <para>address3_country</para></summary>
	public const string Address3_Country_Region = "address3_country";
	/// <summary><para>Address3: State/Province</para>
	/// <para>address3_stateorprovince</para></summary>
	public const string Address3_State_Province = "address3_stateorprovince";
	/// <summary><para>Address3: Street 1</para>
	/// <para>address3_line1</para></summary>
	public const string Address3_Street1 = "address3_line1";
	/// <summary><para>Address3: Street 2</para>
	/// <para>address3_line2</para></summary>
	public const string Address3_Street2 = "address3_line2";
	/// <summary><para>Address3: Street 3</para>
	/// <para>address3_line3</para></summary>
	public const string Address3_Street3 = "address3_line3";
	/// <summary><para>Address3: ZIP/Postal Code</para>
	/// <para>address3_postalcode</para></summary>
	public const string Address3_ZIP_PostalCode = "address3_postalcode";
	/// <summary><para>Aging 30</para>
	/// <para>aging30</para></summary>
	public const string Aging30 = "aging30";
	/// <summary><para>Aging 30 (Base)</para>
	/// <para>aging30_base</para></summary>
	public const string Aging30_Base = "aging30_base";
	/// <summary><para>Aging 60</para>
	/// <para>aging60</para></summary>
	public const string Aging60 = "aging60";
	/// <summary><para>Aging 60 (Base)</para>
	/// <para>aging60_base</para></summary>
	public const string Aging60_Base = "aging60_base";
	/// <summary><para>Aging 90</para>
	/// <para>aging90</para></summary>
	public const string Aging90 = "aging90";
	/// <summary><para>Aging 90 (Base)</para>
	/// <para>aging90_base</para></summary>
	public const string Aging90_Base = "aging90_base";
	/// <summary><para>Anniversary</para>
	/// <para>anniversary</para></summary>
	public const string Anniversary = "anniversary";
	/// <summary><para>Annual Income</para>
	/// <para>annualincome</para></summary>
	public const string AnnualIncome = "annualincome";
	/// <summary><para>Annual Income (Base)</para>
	/// <para>annualincome_base</para></summary>
	public const string AnnualIncome_Base = "annualincome_base";
	/// <summary><para>Assistant</para>
	/// <para>assistantname</para></summary>
	public const string Assistant = "assistantname";
	/// <summary><para>Assistant Phone</para>
	/// <para>assistantphone</para></summary>
	public const string AssistantPhone = "assistantphone";
	/// <summary><para>Auto-created</para>
	/// <para>isautocreate</para></summary>
	public const string Auto_created = "isautocreate";
	/// <summary><para>Back Office Customer</para>
	/// <para>isbackofficecustomer</para></summary>
	public const string BackOfficeCustomer = "isbackofficecustomer";
	/// <summary><para>Birthday</para>
	/// <para>birthdate</para></summary>
	public const string Birthday = "birthdate";
	/// <summary><para>Business Phone</para>
	/// <para>telephone1</para></summary>
	public const string BusinessPhone = "telephone1";
	/// <summary><para>Business Phone 2</para>
	/// <para>business2</para></summary>
	public const string BusinessPhone2 = "business2";
	/// <summary><para>Callback Number</para>
	/// <para>callback</para></summary>
	public const string CallbackNumber = "callback";
	/// <summary><para>Children's Names</para>
	/// <para>childrensnames</para></summary>
	public const string ChildrensNames = "childrensnames";
	/// <summary><para>Company Phone</para>
	/// <para>company</para></summary>
	public const string CompanyPhone = "company";
	/// <summary><para>Confirm Remove Password</para>
	/// <para>adx_confirmremovepassword</para></summary>
	public const string ConfirmRemovePassword = "adx_confirmremovepassword";
	/// <summary><para>Consent given</para>
	/// <para>msgdpr_gdprconsent</para></summary>
	public const string ConsentGiven = "msgdpr_gdprconsent";
	/// <summary><para>Consent level</para>
	/// <para>oer_consentlevel</para></summary>
	public const string ConsentLevel = "oer_consentlevel";
	/// <summary><para>Contact</para>
	/// <para>msevtmgt_contactid</para></summary>
	public const string ContactAttribute = "msevtmgt_contactid";
	/// <summary><para>Contact</para>
	/// <para>contactid</para></summary>
	public const string ContactId = "contactid";
	/// <summary><para>Contact U7 Key</para>
	/// <para>oer_contactu7key</para></summary>
	public const string ContactU7Key = "oer_contactu7key";
	/// <summary><para>Created By</para>
	/// <para>createdby</para></summary>
	public const string CreatedBy = "createdby";
	/// <summary><para>Created By (Delegate)</para>
	/// <para>createdonbehalfby</para></summary>
	public const string CreatedBy_Delegate = "createdonbehalfby";
	/// <summary><para>Created By (External Party)</para>
	/// <para>createdbyexternalparty</para></summary>
	public const string CreatedBy_ExternalParty = "createdbyexternalparty";
	/// <summary><para>Created By IP Address</para>
	/// <para>adx_createdbyipaddress</para></summary>
	public const string CreatedByIPAddress = "adx_createdbyipaddress";
	/// <summary><para>Created By Username</para>
	/// <para>adx_createdbyusername</para></summary>
	public const string CreatedByUsername = "adx_createdbyusername";
	/// <summary><para>Created On</para>
	/// <para>createdon</para></summary>
	public const string CreatedOn = "createdon";
	/// <summary><para>Credit Hold</para>
	/// <para>creditonhold</para></summary>
	public const string CreditHold = "creditonhold";
	/// <summary><para>Credit Limit</para>
	/// <para>creditlimit</para></summary>
	public const string CreditLimit = "creditlimit";
	/// <summary><para>Credit Limit (Base)</para>
	/// <para>creditlimit_base</para></summary>
	public const string CreditLimit_Base = "creditlimit_base";
	/// <summary><para>Currency</para>
	/// <para>transactioncurrencyid</para></summary>
	public const string Currency = "transactioncurrencyid";
	/// <summary><para>Customer magazines</para>
	/// <para>oer_customermagazines</para></summary>
	public const string CustomerMagazines = "oer_customermagazines";
	/// <summary><para>Customer Size</para>
	/// <para>customersizecode</para></summary>
	public const string CustomerSize = "customersizecode";
	/// <summary><para>Department</para>
	/// <para>department</para></summary>
	public const string Department = "department";
	/// <summary><para>Department</para>
	/// <para>oer_department</para></summary>
	public const string Department2 = "oer_department";
	/// <summary><para>Description</para>
	/// <para>description</para></summary>
	public const string Description = "description";
	/// <summary><para>Disable Web Tracking</para>
	/// <para>msdyn_disablewebtracking</para></summary>
	public const string DisableWebTracking = "msdyn_disablewebtracking";
	/// <summary><para>Do not allow Bulk Emails</para>
	/// <para>donotbulkemail</para></summary>
	public const string DoNotAllowBulkEmails = "donotbulkemail";
	/// <summary><para>Do not allow Bulk Mails</para>
	/// <para>donotbulkpostalmail</para></summary>
	public const string DoNotAllowBulkMails = "donotbulkpostalmail";
	/// <summary><para>Do not allow Emails</para>
	/// <para>donotemail</para></summary>
	public const string DoNotAllowEmails = "donotemail";
	/// <summary><para>Do not allow Faxes</para>
	/// <para>donotfax</para></summary>
	public const string DoNotAllowFaxes = "donotfax";
	/// <summary><para>Do not allow Mails</para>
	/// <para>donotpostalmail</para></summary>
	public const string DoNotAllowMails = "donotpostalmail";
	/// <summary><para>Do not allow Phone Calls</para>
	/// <para>donotphone</para></summary>
	public const string DoNotAllowPhoneCalls = "donotphone";
	/// <summary><para>Education</para>
	/// <para>educationcode</para></summary>
	public const string Education = "educationcode";
	/// <summary><para>Email</para>
	/// <para>emailaddress1</para></summary>
	public const string Email = "emailaddress1";
	/// <summary><para>Email Address 2</para>
	/// <para>emailaddress2</para></summary>
	public const string EmailAddress2 = "emailaddress2";
	/// <summary><para>Email Address 3</para>
	/// <para>emailaddress3</para></summary>
	public const string EmailAddress3 = "emailaddress3";
	/// <summary><para>Email Confirmed</para>
	/// <para>adx_identity_emailaddress1confirmed</para></summary>
	public const string EmailConfirmed = "adx_identity_emailaddress1confirmed";
	/// <summary><para>Employee</para>
	/// <para>employeeid</para></summary>
	public const string Employee = "employeeid";
	/// <summary><para>Entity Image Id</para>
	/// <para>entityimageid</para></summary>
	public const string EntityImageId = "entityimageid";
	/// <summary><para>Event management</para>
	/// <para>oer_eventmanagement</para></summary>
	public const string EventManagement = "oer_eventmanagement";
	/// <summary><para>Exchange Rate</para>
	/// <para>exchangerate</para></summary>
	public const string ExchangeRate = "exchangerate";
	/// <summary><para>External User Identifier</para>
	/// <para>externaluseridentifier</para></summary>
	public const string ExternalUserIdentifier = "externaluseridentifier";
	/// <summary><para>Fax</para>
	/// <para>fax</para></summary>
	public const string Fax = "fax";
	/// <summary><para>First Name</para>
	/// <para>firstname</para></summary>
	public const string FirstName = "firstname";
	/// <summary><para>Follow Email Activity</para>
	/// <para>followemail</para></summary>
	public const string FollowEmailActivity = "followemail";
	/// <summary><para>FTP Site</para>
	/// <para>ftpsiteurl</para></summary>
	public const string FTPSite = "ftpsiteurl";
	/// <summary><para>Full Name</para>
	/// <para>fullname</para></summary>
	public const string FullName = "fullname";
	/// <summary><para>Function</para>
	/// <para>oer_function</para></summary>
	public const string Function = "oer_function";
	/// <summary><para>GDPR is child</para>
	/// <para>msgdpr_gdprischild</para></summary>
	public const string GDPRIsChild = "msgdpr_gdprischild";
	/// <summary><para>GDPR Optout</para>
	/// <para>msdyn_gdproptout</para></summary>
	public const string GDPROptout = "msdyn_gdproptout";
	/// <summary><para>Gender</para>
	/// <para>gendercode</para></summary>
	public const string Gender = "gendercode";
	/// <summary><para>Government</para>
	/// <para>governmentid</para></summary>
	public const string Government = "governmentid";
	/// <summary><para>Greeting cards</para>
	/// <para>oer_greetingcards</para></summary>
	public const string GreetingCards = "oer_greetingcards";
	/// <summary><para>Has Children</para>
	/// <para>haschildrencode</para></summary>
	public const string HasChildren = "haschildrencode";
	/// <summary><para>Home Phone</para>
	/// <para>telephone2</para></summary>
	public const string HomePhone = "telephone2";
	/// <summary><para>Home Phone 2</para>
	/// <para>home2</para></summary>
	public const string HomePhone2 = "home2";
	/// <summary><para>Import Sequence Number</para>
	/// <para>importsequencenumber</para></summary>
	public const string ImportSequenceNumber = "importsequencenumber";
	/// <summary><para>Incoterms</para>
	/// <para>address1_freighttermscode</para></summary>
	public const string Incoterms = "address1_freighttermscode";
	/// <summary><para>Insights</para>
	/// <para>msdyncrm_insights_placeholder</para></summary>
	public const string Insights = "msdyncrm_insights_placeholder";
	/// <summary><para>Is Delete Requested</para>
	/// <para>oer_isdeleterequested</para></summary>
	public const string IsDeleteRequested = "oer_isdeleterequested";
	/// <summary><para>Is Minor</para>
	/// <para>msdyn_isminor</para></summary>
	public const string IsMinor = "msdyn_isminor";
	/// <summary><para>Is Minor with Parental Consent</para>
	/// <para>msdyn_isminorwithparentalconsent</para></summary>
	public const string IsMinorWithParentalConsent = "msdyn_isminorwithparentalconsent";
	/// <summary><para>Job Title</para>
	/// <para>jobtitle</para></summary>
	public const string JobTitle = "jobtitle";
	/// <summary><para>Last Date Included in Campaign</para>
	/// <para>lastusedincampaign</para></summary>
	public const string LastDateIncludedInCampaign = "lastusedincampaign";
	/// <summary><para>Last Name</para>
	/// <para>lastname</para></summary>
	public const string LastName = "lastname";
	/// <summary><para>Last On Hold Time</para>
	/// <para>lastonholdtime</para></summary>
	public const string LastOnHoldTime = "lastonholdtime";
	/// <summary><para>Last SLA applied</para>
	/// <para>slainvokedid</para></summary>
	public const string LastSLAApplied = "slainvokedid";
	/// <summary><para>Last Successful Login</para>
	/// <para>adx_identity_lastsuccessfullogin</para></summary>
	public const string LastSuccessfulLogin = "adx_identity_lastsuccessfullogin";
	/// <summary><para>Lead Source</para>
	/// <para>leadsourcecode</para></summary>
	public const string LeadSource = "leadsourcecode";
	/// <summary><para>Local Login Disabled</para>
	/// <para>adx_identity_locallogindisabled</para></summary>
	public const string LocalLoginDisabled = "adx_identity_locallogindisabled";
	/// <summary><para>Lockout Enabled</para>
	/// <para>adx_identity_lockoutenabled</para></summary>
	public const string LockoutEnabled = "adx_identity_lockoutenabled";
	/// <summary><para>Lockout End Date</para>
	/// <para>adx_identity_lockoutenddate</para></summary>
	public const string LockoutEndDate = "adx_identity_lockoutenddate";
	/// <summary><para>Login Enabled</para>
	/// <para>adx_identity_logonenabled</para></summary>
	public const string LoginEnabled = "adx_identity_logonenabled";
	/// <summary><para>Manager</para>
	/// <para>managername</para></summary>
	public const string Manager = "managername";
	/// <summary><para>Manager Phone</para>
	/// <para>managerphone</para></summary>
	public const string ManagerPhone = "managerphone";
	/// <summary><para>Managing Partner</para>
	/// <para>msa_managingpartnerid</para></summary>
	public const string ManagingPartner = "msa_managingpartnerid";
	/// <summary><para>Marital Status</para>
	/// <para>familystatuscode</para></summary>
	public const string MaritalStatus = "familystatuscode";
	/// <summary><para>Marketing Only</para>
	/// <para>marketingonly</para></summary>
	public const string MarketingOnly = "marketingonly";
	/// <summary><para>Master ID</para>
	/// <para>masterid</para></summary>
	public const string MasterID = "masterid";
	/// <summary><para>Merged</para>
	/// <para>merged</para></summary>
	public const string Merged = "merged";
	/// <summary><para>Middle Name</para>
	/// <para>middlename</para></summary>
	public const string MiddleName = "middlename";
	/// <summary><para>Mobile Phone</para>
	/// <para>mobilephone</para></summary>
	public const string MobilePhone = "mobilephone";
	/// <summary><para>Mobile Phone Confirmed</para>
	/// <para>adx_identity_mobilephoneconfirmed</para></summary>
	public const string MobilePhoneConfirmed = "adx_identity_mobilephoneconfirmed";
	/// <summary><para>Modified By</para>
	/// <para>modifiedby</para></summary>
	public const string ModifiedBy = "modifiedby";
	/// <summary><para>Modified By (Delegate)</para>
	/// <para>modifiedonbehalfby</para></summary>
	public const string ModifiedBy_Delegate = "modifiedonbehalfby";
	/// <summary><para>Modified By (External Party)</para>
	/// <para>modifiedbyexternalparty</para></summary>
	public const string ModifiedBy_ExternalParty = "modifiedbyexternalparty";
	/// <summary><para>Modified By IP Address</para>
	/// <para>adx_modifiedbyipaddress</para></summary>
	public const string ModifiedByIPAddress = "adx_modifiedbyipaddress";
	/// <summary><para>Modified By Username</para>
	/// <para>adx_modifiedbyusername</para></summary>
	public const string ModifiedByUsername = "adx_modifiedbyusername";
	/// <summary><para>Modified On</para>
	/// <para>modifiedon</para></summary>
	public const string ModifiedOn = "modifiedon";
	/// <summary><para>New Password Input</para>
	/// <para>adx_identity_newpassword</para></summary>
	public const string NewPasswordInput = "adx_identity_newpassword";
	/// <summary><para>Nickname</para>
	/// <para>nickname</para></summary>
	public const string Nickname = "nickname";
	/// <summary><para>No. of Children</para>
	/// <para>numberofchildren</para></summary>
	public const string No_OfChildren = "numberofchildren";
	/// <summary><para>On Hold Time (Minutes)</para>
	/// <para>onholdtime</para></summary>
	public const string OnHoldTime_Minutes = "onholdtime";
	/// <summary><para>Org Change Status</para>
	/// <para>msdyn_orgchangestatus</para></summary>
	public const string OrgChangeStatus = "msdyn_orgchangestatus";
	/// <summary><para>Organization Name</para>
	/// <para>adx_organizationname</para></summary>
	public const string OrganizationName = "adx_organizationname";
	/// <summary><para>Originating event</para>
	/// <para>msevtmgt_originatingeventid</para></summary>
	public const string OriginatingEvent = "msevtmgt_originatingeventid";
	/// <summary><para>Originating Lead</para>
	/// <para>originatingleadid</para></summary>
	public const string OriginatingLead = "originatingleadid";
	/// <summary><para>Owner</para>
	/// <para>ownerid</para></summary>
	public const string Owner = "ownerid";
	/// <summary><para>Owning Business Unit</para>
	/// <para>owningbusinessunit</para></summary>
	public const string OwningBusinessUnit = "owningbusinessunit";
	/// <summary><para>Owning Team</para>
	/// <para>owningteam</para></summary>
	public const string OwningTeam = "owningteam";
	/// <summary><para>Owning User</para>
	/// <para>owninguser</para></summary>
	public const string OwningUser = "owninguser";
	/// <summary><para>Pager</para>
	/// <para>pager</para></summary>
	public const string Pager = "pager";
	/// <summary><para>Parent Contact</para>
	/// <para>parentcontactid</para></summary>
	public const string ParentContact = "parentcontactid";
	/// <summary><para>Parent Customer Type</para>
	/// <para>parentcustomeridtype</para></summary>
	public const string ParentCustomerType = "parentcustomeridtype";
	/// <summary><para>Parent or custodian</para>
	/// <para>msgdpr_gdprparentid</para></summary>
	public const string ParentOrCustodian = "msgdpr_gdprparentid";
	/// <summary><para>Participates in Workflow</para>
	/// <para>participatesinworkflow</para></summary>
	public const string ParticipatesInWorkflow = "participatesinworkflow";
	/// <summary><para>Password hash</para>
	/// <para>oer_passwordhash</para></summary>
	public const string PasswordHash = "oer_passwordhash";
	/// <summary><para>Password Hash</para>
	/// <para>adx_identity_passwordhash</para></summary>
	public const string PasswordHash2 = "adx_identity_passwordhash";
	/// <summary><para>Payment Terms</para>
	/// <para>paymenttermscode</para></summary>
	public const string PaymentTerms = "paymenttermscode";
	/// <summary><para>Portal invitation code</para>
	/// <para>adx_portalinvitationcode</para></summary>
	public const string PortalInvitationCode = "adx_portalinvitationcode";
	/// <summary><para>Portal invitation URL</para>
	/// <para>adx_portalinvitationurl</para></summary>
	public const string PortalInvitationURL = "adx_portalinvitationurl";
	/// <summary><para>Portal Terms Agreement Date</para>
	/// <para>msdyn_portaltermsagreementdate</para></summary>
	public const string PortalTermsAgreementDate = "msdyn_portaltermsagreementdate";
	/// <summary><para>Post Office Box</para>
	/// <para>address1_postofficebox</para></summary>
	public const string PostOfficeBox = "address1_postofficebox";
	/// <summary><para>Preferred Day</para>
	/// <para>preferredappointmentdaycode</para></summary>
	public const string PreferredDay = "preferredappointmentdaycode";
	/// <summary><para>Preferred Facility/Equipment</para>
	/// <para>preferredequipmentid</para></summary>
	public const string PreferredFacility_Equipment = "preferredequipmentid";
	/// <summary><para>Preferred Language</para>
	/// <para>adx_preferredlanguageid</para></summary>
	public const string PreferredLanguage = "adx_preferredlanguageid";
	/// <summary><para>Preferred Method of Contact</para>
	/// <para>preferredcontactmethodcode</para></summary>
	public const string PreferredMethodOfContact = "preferredcontactmethodcode";
	/// <summary><para>Preferred Service</para>
	/// <para>preferredserviceid</para></summary>
	public const string PreferredService = "preferredserviceid";
	/// <summary><para>Preferred Time</para>
	/// <para>preferredappointmenttimecode</para></summary>
	public const string PreferredTime = "preferredappointmenttimecode";
	/// <summary><para>Preferred User</para>
	/// <para>preferredsystemuserid</para></summary>
	public const string PreferredUser = "preferredsystemuserid";
	/// <summary><para>Price List</para>
	/// <para>defaultpricelevelid</para></summary>
	public const string PriceList = "defaultpricelevelid";
	/// <summary><para>Process</para>
	/// <para>processid</para></summary>
	public const string Process = "processid";
	/// <summary><para>Profile Alert</para>
	/// <para>adx_profilealert</para></summary>
	public const string ProfileAlert = "adx_profilealert";
	/// <summary><para>Profile Alert Date</para>
	/// <para>adx_profilealertdate</para></summary>
	public const string ProfileAlertDate = "adx_profilealertdate";
	/// <summary><para>Profile Alert Instructions</para>
	/// <para>adx_profilealertinstructions</para></summary>
	public const string ProfileAlertInstructions = "adx_profilealertinstructions";
	/// <summary><para>Profile Is Anonymous</para>
	/// <para>adx_profileisanonymous</para></summary>
	public const string ProfileIsAnonymous = "adx_profileisanonymous";
	/// <summary><para>Profile Last Activity</para>
	/// <para>adx_profilelastactivity</para></summary>
	public const string ProfileLastActivity = "adx_profilelastactivity";
	/// <summary><para>Profile Modified On</para>
	/// <para>adx_profilemodifiedon</para></summary>
	public const string ProfileModifiedOn = "adx_profilemodifiedon";
	/// <summary><para>Public Profile Copy</para>
	/// <para>adx_publicprofilecopy</para></summary>
	public const string PublicProfileCopy = "adx_publicprofilecopy";
	/// <summary><para>Record Created On</para>
	/// <para>overriddencreatedon</para></summary>
	public const string RecordCreatedOn = "overriddencreatedon";
	/// <summary><para>Relationship Type</para>
	/// <para>customertypecode</para></summary>
	public const string RelationshipType = "customertypecode";
	/// <summary><para>Remember me</para>
	/// <para>msdyncrm_rememberme</para></summary>
	public const string RememberMe = "msdyncrm_rememberme";
	/// <summary><para>Role</para>
	/// <para>accountrolecode</para></summary>
	public const string Role = "accountrolecode";
	/// <summary><para>Salutation</para>
	/// <para>salutation</para></summary>
	public const string Salutation = "salutation";
	/// <summary><para>Salutation</para>
	/// <para>oer_salutation</para></summary>
	public const string Salutation2 = "oer_salutation";
	/// <summary><para>Security Stamp</para>
	/// <para>adx_identity_securitystamp</para></summary>
	public const string SecurityStamp = "adx_identity_securitystamp";
	/// <summary><para>SegmentMember</para>
	/// <para>msdyncrm_segmentmemberid</para></summary>
	public const string SegmentMember = "msdyncrm_segmentmemberid";
	/// <summary><para>Send Marketing Materials</para>
	/// <para>donotsendmm</para></summary>
	public const string SendMarketingMaterials = "donotsendmm";
	/// <summary><para>Shipping Method</para>
	/// <para>shippingmethodcode</para></summary>
	public const string ShippingMethod = "shippingmethodcode";
	/// <summary><para>SLA</para>
	/// <para>slaid</para></summary>
	public const string SLA = "slaid";
	/// <summary><para>SMS Marketing</para>
	/// <para>pk_dontsms</para></summary>
	public const string SMSMarketing = "pk_dontsms";
	/// <summary><para>Source customer journey</para>
	/// <para>msdyncrm_customerjourneyid</para></summary>
	public const string SourceCustomerJourney = "msdyncrm_customerjourneyid";
	/// <summary><para>Source email</para>
	/// <para>msdyncrm_emailid</para></summary>
	public const string SourceEmail = "msdyncrm_emailid";
	/// <summary><para>Source form</para>
	/// <para>msdyncrm_marketingformid</para></summary>
	public const string SourceForm = "msdyncrm_marketingformid";
	/// <summary><para>Source landing page</para>
	/// <para>msdyncrm_marketingpageid</para></summary>
	public const string SourceLandingPage = "msdyncrm_marketingpageid";
	/// <summary><para>Spouse/Partner Name</para>
	/// <para>spousesname</para></summary>
	public const string Spouse_PartnerName = "spousesname";
	/// <summary><para>Status</para>
	/// <para>statecode</para></summary>
	public const string Status = "statecode";
	/// <summary><para>Status Reason</para>
	/// <para>statuscode</para></summary>
	public const string StatusReason = "statuscode";
	/// <summary><para>Subscription</para>
	/// <para>subscriptionid</para></summary>
	public const string Subscription = "subscriptionid";
	/// <summary><para>Suffix</para>
	/// <para>suffix</para></summary>
	public const string Suffix = "suffix";
	/// <summary><para>TeamsFollowed</para>
	/// <para>teamsfollowed</para></summary>
	public const string TeamsFollowed = "teamsfollowed";
	/// <summary><para>Telephone 3</para>
	/// <para>telephone3</para></summary>
	public const string Telephone3 = "telephone3";
	/// <summary><para>Territory</para>
	/// <para>territorycode</para></summary>
	public const string Territory = "territorycode";
	/// <summary><para>Time Spent by me</para>
	/// <para>timespentbymeonemailandmeetings</para></summary>
	public const string TimeSpentByMe = "timespentbymeonemailandmeetings";
	/// <summary><para>Time Zone</para>
	/// <para>adx_timezone</para></summary>
	public const string TimeZone = "adx_timezone";
	/// <summary><para>Time Zone Rule Version Number</para>
	/// <para>timezoneruleversionnumber</para></summary>
	public const string TimeZoneRuleVersionNumber = "timezoneruleversionnumber";
	/// <summary><para>Two Factor Enabled</para>
	/// <para>adx_identity_twofactorenabled</para></summary>
	public const string TwoFactorEnabled = "adx_identity_twofactorenabled";
	/// <summary><para>User Name</para>
	/// <para>adx_identity_username</para></summary>
	public const string UserName = "adx_identity_username";
	/// <summary><para>UTC Conversion Time Zone Code</para>
	/// <para>utcconversiontimezonecode</para></summary>
	public const string UTCConversionTimeZoneCode = "utcconversiontimezonecode";
	/// <summary><para>Version Number</para>
	/// <para>versionnumber</para></summary>
	public const string VersionNumber = "versionnumber";
	/// <summary><para>Website</para>
	/// <para>websiteurl</para></summary>
	public const string Website = "websiteurl";
	/// <summary><para>Yomi First Name</para>
	/// <para>yomifirstname</para></summary>
	public const string YomiFirstName = "yomifirstname";
	/// <summary><para>Yomi Full Name</para>
	/// <para>yomifullname</para></summary>
	public const string YomiFullName = "yomifullname";
	/// <summary><para>Yomi Last Name</para>
	/// <para>yomilastname</para></summary>
	public const string YomiLastName = "yomilastname";
	/// <summary><para>Yomi Middle Name</para>
	/// <para>yomimiddlename</para></summary>
	public const string YomiMiddleName = "yomimiddlename";
}

    }
}
